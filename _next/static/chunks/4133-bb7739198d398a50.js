/*! For license information please see 4133-bb7739198d398a50.js.LICENSE.txt */
"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4133],{4133:function(e,t,n){n.d(t,{D:function(){return re},DW:function(){return se},Ey:function(){return pe},Lh:function(){return Q},Ls:function(){return te},NO:function(){return ce},Ob:function(){return T},PS:function(){return we},PT:function(){return ue},Rh:function(){return ve},Yz:function(){return oe},_6:function(){return ge},_H:function(){return ne},_Y:function(){return r},dg:function(){return O},e6:function(){return le},eo:function(){return V},gW:function(){return ae},h1:function(){return he},mb:function(){return be},rM:function(){return F},sX:function(){return i.sX},x6:function(){return ee}});var i=n(94739),s=n(1323);function o(e,t,n,i){return new(n||(n=Promise))((function(s,o){function r(e){try{c(i.next(e))}catch(e){o(e)}}function a(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,a)}c((i=i.apply(e,t||[])).next())}))}class r extends Error{constructor(e,t){super(e,t),this.message=`${r.prefix} ${this.constructor.name}${this.info?": "+this.info:""}${e?"\n"+e:""}`,Object.setPrototypeOf(this,r.prototype)}get info(){return""}}r.prefix="[TON_CONNECT_SDK_ERROR]";class a extends r{get info(){return"Passed DappMetadata is in incorrect format."}constructor(...e){super(...e),Object.setPrototypeOf(this,a.prototype)}}class c extends r{get info(){return"Passed `tonconnect-manifest.json` contains errors. Check format of your manifest. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest"}constructor(...e){super(...e),Object.setPrototypeOf(this,c.prototype)}}class l extends r{get info(){return"Manifest not found. Make sure you added `tonconnect-manifest.json` to the root of your app or passed correct manifestUrl. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest"}constructor(...e){super(...e),Object.setPrototypeOf(this,l.prototype)}}class d extends r{get info(){return"Wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection."}constructor(...e){super(...e),Object.setPrototypeOf(this,d.prototype)}}class u extends r{get info(){return"Send transaction or other protocol methods called while wallet is not connected."}constructor(...e){super(...e),Object.setPrototypeOf(this,u.prototype)}}class h extends r{get info(){return"User rejects the action in the wallet."}constructor(...e){super(...e),Object.setPrototypeOf(this,h.prototype)}}class p extends r{get info(){return"Request to the wallet contains errors."}constructor(...e){super(...e),Object.setPrototypeOf(this,p.prototype)}}class g extends r{get info(){return"App tries to send rpc request to the injected wallet while not connected."}constructor(...e){super(...e),Object.setPrototypeOf(this,g.prototype)}}class v extends r{get info(){return"There is an attempt to connect to the injected wallet while it is not exists in the webpage."}constructor(...e){super(...e),Object.setPrototypeOf(this,v.prototype)}}class f extends r{get info(){return"An error occurred while fetching the wallets list."}constructor(...e){super(...e),Object.setPrototypeOf(this,f.prototype)}}class w extends r{get info(){return"Passed address is in incorrect format."}constructor(...e){super(...e),Object.setPrototypeOf(this,w.prototype)}}class y extends r{get info(){return"Passed hex is in incorrect format."}constructor(...e){super(...e),Object.setPrototypeOf(this,y.prototype)}}class m extends r{constructor(...e){super(...e),Object.setPrototypeOf(this,m.prototype)}}const b={[i.QJ.UNKNOWN_ERROR]:m,[i.QJ.USER_REJECTS_ERROR]:h,[i.QJ.BAD_REQUEST_ERROR]:p,[i.QJ.UNKNOWN_APP_ERROR]:g,[i.QJ.MANIFEST_NOT_FOUND_ERROR]:l,[i.QJ.MANIFEST_CONTENT_ERROR]:c};const S=new class{parseError(e){let t=m;return e.code in b&&(t=b[e.code]||m),new t(e.message)}};class C{isError(e){return"error"in e}}const _={[i.uJ.UNKNOWN_ERROR]:m,[i.uJ.USER_REJECTS_ERROR]:h,[i.uJ.BAD_REQUEST_ERROR]:p,[i.uJ.UNKNOWN_APP_ERROR]:g};const E=new class extends C{convertToRpcRequest(e){return{method:"sendTransaction",params:[JSON.stringify(e)]}}parseAndThrowError(e){let t=m;throw e.error.code in _&&(t=_[e.error.code]||m),new t(e.error.message)}convertFromRpcResponse(e){return{boc:e.result}}};class k{constructor(e,t){this.storage=e,this.storeKey="ton-connect-storage_http-bridge-gateway::"+t}storeLastEventId(e){return o(this,void 0,void 0,(function*(){return this.storage.setItem(this.storeKey,e)}))}removeLastEventId(){return o(this,void 0,void 0,(function*(){return this.storage.removeItem(this.storeKey)}))}getLastEventId(){return o(this,void 0,void 0,(function*(){const e=yield this.storage.getItem(this.storeKey);return e||null}))}}function R(e,t){return function(e){return"/"===e.slice(-1)?e.slice(0,-1):e}(e)+"/"+t}function O(e){if(!e)return!1;const t=new URL(e);return"tg:"===t.protocol||"t.me"===t.hostname}function T(e){return e.replaceAll(".","%2E").replaceAll("-","%2D").replaceAll("_","%5F").replaceAll("&","-").replaceAll("=","__").replaceAll("%","--")}function j(e,t){return o(this,void 0,void 0,(function*(){return new Promise(((n,i)=>{var s,o;if(null===(s=null==t?void 0:t.signal)||void 0===s?void 0:s.aborted)return void i(new r("Delay aborted"));const a=setTimeout((()=>n()),e);null===(o=null==t?void 0:t.signal)||void 0===o||o.addEventListener("abort",(()=>{clearTimeout(a),i(new r("Delay aborted"))}))}))}))}function L(e){const t=new AbortController;return(null==e?void 0:e.aborted)?t.abort():null==e||e.addEventListener("abort",(()=>t.abort()),{once:!0}),t}function P(e,t){var n,i;return o(this,void 0,void 0,(function*(){const s=null!==(n=null==t?void 0:t.attempts)&&void 0!==n?n:10,o=null!==(i=null==t?void 0:t.delayMs)&&void 0!==i?i:200,a=L(null==t?void 0:t.signal);if("function"!=typeof e)throw new r("Expected a function, got "+typeof e);let c,l=0;for(;l<s;){if(a.signal.aborted)throw new r(`Aborted after attempts ${l}`);try{return yield e({signal:a.signal})}catch(e){c=e,l++,l<s&&(yield j(o))}}throw c}))}function I(...e){try{console.debug("[TON_CONNECT_SDK]",...e)}catch(e){}}function W(...e){try{console.error("[TON_CONNECT_SDK]",...e)}catch(e){}}class x{constructor(e,t,n,i,s){this.bridgeUrl=t,this.sessionId=n,this.listener=i,this.errorsListener=s,this.ssePath="events",this.postPath="message",this.heartbeatMessage="heartbeat",this.defaultTtl=300,this.defaultReconnectDelay=2e3,this.defaultResendDelay=5e3,this.eventSource=function(e,t){let n=null,i=null,s=null,a=null,c=null;const l=(l,...d)=>o(this,void 0,void 0,(function*(){if(a=null!=l?l:null,null==c||c.abort(),c=L(l),c.signal.aborted)throw new r("Resource creation was aborted");i=null!=d?d:null;const o=e(c.signal,...d);s=o;const u=yield o;if(s!==o&&u!==n)throw yield t(u),new r("Resource creation was aborted by a new resource creation");return n=u,n}));return{create:l,current:()=>null!=n?n:null,dispose:()=>o(this,void 0,void 0,(function*(){try{const e=n;n=null;const i=s;s=null;try{null==c||c.abort()}catch(e){}yield Promise.allSettled([e?t(e):Promise.resolve(),i?t(yield i):Promise.resolve()])}catch(e){}})),recreate:e=>o(this,void 0,void 0,(function*(){const t=n,o=s,c=i,d=a;if(yield j(e),t===n&&o===s&&c===i&&d===a)return yield l(a,...null!=c?c:[]);throw new r("Resource recreation was aborted by a new resource creation")}))}}(((e,t)=>o(this,void 0,void 0,(function*(){const n={bridgeUrl:this.bridgeUrl,ssePath:this.ssePath,sessionId:this.sessionId,bridgeGatewayStorage:this.bridgeGatewayStorage,errorHandler:this.errorsHandler.bind(this),messageHandler:this.messagesHandler.bind(this),signal:e,openingDeadlineMS:t};return yield function(e){return o(this,void 0,void 0,(function*(){return yield function(e,t){const n=null==t?void 0:t.timeout,i=L(null==t?void 0:t.signal);return new Promise(((t,s)=>o(this,void 0,void 0,(function*(){if(i.signal.aborted)return void s(new r("Operation aborted"));let o;void 0!==n&&(o=setTimeout((()=>{i.abort(),s(new r(`Timeout after ${n}ms`))}),n)),i.signal.addEventListener("abort",(()=>{clearTimeout(o),s(new r("Operation aborted"))}),{once:!0});const a={timeout:n,abort:i.signal};yield e(((...e)=>{clearTimeout(o),t(...e)}),(()=>{clearTimeout(o),s()}),a)}))))}(((t,n,i)=>o(this,void 0,void 0,(function*(){var s;const a=L(i.signal).signal;if(a.aborted)return void n(new r("Bridge connection aborted"));const c=new URL(R(e.bridgeUrl,e.ssePath));c.searchParams.append("client_id",e.sessionId);const l=yield e.bridgeGatewayStorage.getLastEventId();if(l&&c.searchParams.append("last_event_id",l),a.aborted)return void n(new r("Bridge connection aborted"));const d=new EventSource(c.toString());d.onerror=i=>o(this,void 0,void 0,(function*(){if(a.aborted)return d.close(),void n(new r("Bridge connection aborted"));try{const n=yield e.errorHandler(d,i);n!==d&&d.close(),n&&n!==d&&t(n)}catch(e){d.close(),n(e)}})),d.onopen=()=>{if(a.aborted)return d.close(),void n(new r("Bridge connection aborted"));t(d)},d.onmessage=t=>{if(a.aborted)return d.close(),void n(new r("Bridge connection aborted"));e.messageHandler(t)},null===(s=e.signal)||void 0===s||s.addEventListener("abort",(()=>{d.close(),n(new r("Bridge connection aborted"))}))}))),{timeout:e.openingDeadlineMS,signal:e.signal})}))}(n)}))),(e=>o(this,void 0,void 0,(function*(){e.close()})))),this.bridgeGatewayStorage=new k(e,t)}get isReady(){const e=this.eventSource.current();return(null==e?void 0:e.readyState)===EventSource.OPEN}get isClosed(){const e=this.eventSource.current();return(null==e?void 0:e.readyState)!==EventSource.OPEN}get isConnecting(){const e=this.eventSource.current();return(null==e?void 0:e.readyState)===EventSource.CONNECTING}registerSession(e){return o(this,void 0,void 0,(function*(){yield this.eventSource.create(null==e?void 0:e.signal,null==e?void 0:e.openingDeadlineMS)}))}send(e,t,n,s){var a;return o(this,void 0,void 0,(function*(){const c={};"number"==typeof s?c.ttl=s:(c.ttl=null==s?void 0:s.ttl,c.signal=null==s?void 0:s.signal,c.attempts=null==s?void 0:s.attempts);const l=new URL(R(this.bridgeUrl,this.postPath));l.searchParams.append("client_id",this.sessionId),l.searchParams.append("to",t),l.searchParams.append("ttl",((null==c?void 0:c.ttl)||this.defaultTtl).toString()),l.searchParams.append("topic",n);const d=i.DS.encode(e);yield P((e=>o(this,void 0,void 0,(function*(){const t=yield this.post(l,d,e.signal);if(!t.ok)throw new r(`Bridge send failed, status ${t.status}`)}))),{attempts:null!==(a=null==c?void 0:c.attempts)&&void 0!==a?a:Number.MAX_SAFE_INTEGER,delayMs:this.defaultResendDelay,signal:null==c?void 0:c.signal})}))}pause(){this.eventSource.dispose().catch((e=>W(`Bridge pause failed, ${e}`)))}unPause(){return o(this,void 0,void 0,(function*(){yield this.eventSource.recreate(0)}))}close(){return o(this,void 0,void 0,(function*(){yield this.eventSource.dispose().catch((e=>W(`Bridge close failed, ${e}`)))}))}setListener(e){this.listener=e}setErrorsListener(e){this.errorsListener=e}post(e,t,n){return o(this,void 0,void 0,(function*(){const i=yield fetch(e,{method:"post",body:t,signal:n});if(!i.ok)throw new r(`Bridge send failed, status ${i.status}`);return i}))}errorsHandler(e,t){return o(this,void 0,void 0,(function*(){if(this.isConnecting)throw e.close(),new r("Bridge error, failed to connect");if(!this.isReady){if(this.isClosed)return e.close(),I(`Bridge reconnecting, ${this.defaultReconnectDelay}ms delay`),yield this.eventSource.recreate(this.defaultReconnectDelay);throw new r("Bridge error, unknown state")}try{this.errorsListener(t)}catch(e){}}))}messagesHandler(e){return o(this,void 0,void 0,(function*(){if(e.data===this.heartbeatMessage)return;if(yield this.bridgeGatewayStorage.storeLastEventId(e.lastEventId),this.isClosed)return;let t;try{t=JSON.parse(e.data)}catch(e){throw new r(`Bridge message parse failed, message ${e.data}`)}this.listener(t)}))}}function U(e){return!("connectEvent"in e)}class q{constructor(e){this.storage=e,this.storeKey="ton-connect-storage_bridge-connection"}storeConnection(e){return o(this,void 0,void 0,(function*(){if("injected"===e.type)return this.storage.setItem(this.storeKey,JSON.stringify(e));if(!U(e)){const t={sessionKeyPair:e.session.sessionCrypto.stringifyKeypair(),walletPublicKey:e.session.walletPublicKey,bridgeUrl:e.session.bridgeUrl},n={type:"http",connectEvent:e.connectEvent,session:t,lastWalletEventId:e.lastWalletEventId,nextRpcRequestId:e.nextRpcRequestId};return this.storage.setItem(this.storeKey,JSON.stringify(n))}const t={type:"http",connectionSource:e.connectionSource,sessionCrypto:e.sessionCrypto.stringifyKeypair()};return this.storage.setItem(this.storeKey,JSON.stringify(t))}))}removeConnection(){return o(this,void 0,void 0,(function*(){return this.storage.removeItem(this.storeKey)}))}getConnection(){return o(this,void 0,void 0,(function*(){const e=yield this.storage.getItem(this.storeKey);if(!e)return null;const t=JSON.parse(e);if("injected"===t.type)return t;if("connectEvent"in t){const e=new i.m6(t.session.sessionKeyPair);return{type:"http",connectEvent:t.connectEvent,lastWalletEventId:t.lastWalletEventId,nextRpcRequestId:t.nextRpcRequestId,session:{sessionCrypto:e,bridgeUrl:t.session.bridgeUrl,walletPublicKey:t.session.walletPublicKey}}}return{type:"http",sessionCrypto:new i.m6(t.sessionCrypto),connectionSource:t.connectionSource}}))}getHttpConnection(){return o(this,void 0,void 0,(function*(){const e=yield this.getConnection();if(!e)throw new r("Trying to read HTTP connection source while nothing is stored");if("injected"===e.type)throw new r("Trying to read HTTP connection source while injected connection is stored");return e}))}getHttpPendingConnection(){return o(this,void 0,void 0,(function*(){const e=yield this.getConnection();if(!e)throw new r("Trying to read HTTP connection source while nothing is stored");if("injected"===e.type)throw new r("Trying to read HTTP connection source while injected connection is stored");if(!U(e))throw new r("Trying to read HTTP-pending connection while http connection is stored");return e}))}getInjectedConnection(){return o(this,void 0,void 0,(function*(){const e=yield this.getConnection();if(!e)throw new r("Trying to read Injected bridge connection source while nothing is stored");if("http"===(null==e?void 0:e.type))throw new r("Trying to read Injected bridge connection source while HTTP connection is stored");return e}))}storedConnectionType(){return o(this,void 0,void 0,(function*(){const e=yield this.storage.getItem(this.storeKey);if(!e)return null;return JSON.parse(e).type}))}storeLastWalletEventId(e){return o(this,void 0,void 0,(function*(){const t=yield this.getConnection();if(t&&"http"===t.type&&!U(t))return t.lastWalletEventId=e,this.storeConnection(t)}))}getLastWalletEventId(){return o(this,void 0,void 0,(function*(){const e=yield this.getConnection();if(e&&"lastWalletEventId"in e)return e.lastWalletEventId}))}increaseNextRpcRequestId(){return o(this,void 0,void 0,(function*(){const e=yield this.getConnection();if(e&&"nextRpcRequestId"in e){const t=e.nextRpcRequestId||0;return e.nextRpcRequestId=t+1,this.storeConnection(e)}}))}getNextRpcRequestId(){return o(this,void 0,void 0,(function*(){const e=yield this.getConnection();return e&&"nextRpcRequestId"in e&&e.nextRpcRequestId||0}))}}class A{constructor(e,t){this.storage=e,this.walletConnectionSource=t,this.type="http",this.standardUniversalLink="tc://",this.pendingRequests=new Map,this.session=null,this.gateway=null,this.pendingGateways=[],this.listeners=[],this.defaultOpeningDeadlineMS=12e3,this.defaultRetryTimeoutMS=2e3,this.connectionStorage=new q(e)}static fromStorage(e){return o(this,void 0,void 0,(function*(){const t=new q(e),n=yield t.getHttpConnection();return U(n)?new A(e,n.connectionSource):new A(e,{bridgeUrl:n.session.bridgeUrl})}))}connect(e,t){var n;const s=L(null==t?void 0:t.signal);null===(n=this.abortController)||void 0===n||n.abort(),this.abortController=s,this.closeGateways();const r=new i.m6;this.session={sessionCrypto:r,bridgeUrl:"bridgeUrl"in this.walletConnectionSource?this.walletConnectionSource.bridgeUrl:""},this.connectionStorage.storeConnection({type:"http",connectionSource:this.walletConnectionSource,sessionCrypto:r}).then((()=>o(this,void 0,void 0,(function*(){s.signal.aborted||(yield P((e=>{var n;return this.openGateways(r,{openingDeadlineMS:null!==(n=null==t?void 0:t.openingDeadlineMS)&&void 0!==n?n:this.defaultOpeningDeadlineMS,signal:null==e?void 0:e.signal})}),{attempts:Number.MAX_SAFE_INTEGER,delayMs:this.defaultRetryTimeoutMS,signal:s.signal}))}))));const a="universalLink"in this.walletConnectionSource&&this.walletConnectionSource.universalLink?this.walletConnectionSource.universalLink:this.standardUniversalLink;return this.generateUniversalLink(a,e)}restoreConnection(e){var t,n;return o(this,void 0,void 0,(function*(){const i=L(null==e?void 0:e.signal);if(null===(t=this.abortController)||void 0===t||t.abort(),this.abortController=i,i.signal.aborted)return;this.closeGateways();const s=yield this.connectionStorage.getHttpConnection();if(!s)return;if(i.signal.aborted)return;const o=null!==(n=null==e?void 0:e.openingDeadlineMS)&&void 0!==n?n:this.defaultOpeningDeadlineMS;if(U(s))return this.session={sessionCrypto:s.sessionCrypto,bridgeUrl:"bridgeUrl"in this.walletConnectionSource?this.walletConnectionSource.bridgeUrl:""},yield this.openGateways(s.sessionCrypto,{openingDeadlineMS:o,signal:null==i?void 0:i.signal});if(Array.isArray(this.walletConnectionSource))throw new r("Internal error. Connection source is array while WalletConnectionSourceHTTP was expected.");if(this.session=s.session,this.gateway&&(I("Gateway is already opened, closing previous gateway"),yield this.gateway.close()),this.gateway=new x(this.storage,this.walletConnectionSource.bridgeUrl,s.session.sessionCrypto.sessionId,this.gatewayListener.bind(this),this.gatewayErrorsListener.bind(this)),!i.signal.aborted){this.listeners.forEach((e=>e(s.connectEvent)));try{yield P((e=>this.gateway.registerSession({openingDeadlineMS:o,signal:e.signal})),{attempts:Number.MAX_SAFE_INTEGER,delayMs:this.defaultRetryTimeoutMS,signal:i.signal})}catch(e){return void(yield this.disconnect({signal:i.signal}))}}}))}sendRequest(e,t){const n={};return"function"==typeof t?n.onRequestSent=t:(n.onRequestSent=null==t?void 0:t.onRequestSent,n.signal=null==t?void 0:t.signal,n.attempts=null==t?void 0:t.attempts),new Promise(((t,s)=>o(this,void 0,void 0,(function*(){var o;if(!this.gateway||!this.session||!("walletPublicKey"in this.session))throw new r("Trying to send bridge request without session");const a=(yield this.connectionStorage.getNextRpcRequestId()).toString();yield this.connectionStorage.increaseNextRpcRequestId(),I("Send http-bridge request:",Object.assign(Object.assign({},e),{id:a}));const c=this.session.sessionCrypto.encrypt(JSON.stringify(Object.assign(Object.assign({},e),{id:a})),(0,i.SW)(this.session.walletPublicKey));try{yield this.gateway.send(c,this.session.walletPublicKey,e.method,{attempts:null==n?void 0:n.attempts,signal:null==n?void 0:n.signal}),null===(o=null==n?void 0:n.onRequestSent)||void 0===o||o.call(n),this.pendingRequests.set(a.toString(),t)}catch(e){s(e)}}))))}closeConnection(){this.closeGateways(),this.listeners=[],this.session=null,this.gateway=null}disconnect(e){return o(this,void 0,void 0,(function*(){return new Promise((t=>o(this,void 0,void 0,(function*(){let n=!1,i=null;const s=()=>{n||(n=!0,this.removeBridgeAndSession().then(t))};try{this.closeGateways();const t=L(null==e?void 0:e.signal);i=setTimeout((()=>{t.abort()}),this.defaultOpeningDeadlineMS),yield this.sendRequest({method:"disconnect",params:[]},{onRequestSent:s,signal:t.signal,attempts:1})}catch(e){I("Disconnect error:",e),n||this.removeBridgeAndSession().then(t)}finally{i&&clearTimeout(i),s()}}))))}))}listen(e){return this.listeners.push(e),()=>this.listeners=this.listeners.filter((t=>t!==e))}pause(){var e;null===(e=this.gateway)||void 0===e||e.pause(),this.pendingGateways.forEach((e=>e.pause()))}unPause(){return o(this,void 0,void 0,(function*(){const e=this.pendingGateways.map((e=>e.unPause()));this.gateway&&e.push(this.gateway.unPause()),yield Promise.all(e)}))}pendingGatewaysListener(e,t,n){return o(this,void 0,void 0,(function*(){if(this.pendingGateways.includes(e))return this.closeGateways({except:e}),this.gateway&&(I("Gateway is already opened, closing previous gateway"),yield this.gateway.close()),this.session.bridgeUrl=t,this.gateway=e,this.gateway.setErrorsListener(this.gatewayErrorsListener.bind(this)),this.gateway.setListener(this.gatewayListener.bind(this)),this.gatewayListener(n);yield e.close()}))}gatewayListener(e){return o(this,void 0,void 0,(function*(){const t=JSON.parse(this.session.sessionCrypto.decrypt(i.DS.decode(e.message).toUint8Array(),(0,i.SW)(e.from)));if(I("Wallet message received:",t),!("event"in t)){const e=t.id.toString(),n=this.pendingRequests.get(e);return n?(n(t),void this.pendingRequests.delete(e)):void I(`Response id ${e} doesn't match any request's id`)}if(void 0!==t.id){const e=yield this.connectionStorage.getLastWalletEventId();if(void 0!==e&&t.id<=e)return void W(`Received event id (=${t.id}) must be greater than stored last wallet event id (=${e}) `);"connect"!==t.event&&(yield this.connectionStorage.storeLastWalletEventId(t.id))}const n=this.listeners;"connect"===t.event&&(yield this.updateSession(t,e.from)),"disconnect"===t.event&&(I("Removing bridge and session: received disconnect event"),yield this.removeBridgeAndSession()),n.forEach((e=>e(t)))}))}gatewayErrorsListener(e){return o(this,void 0,void 0,(function*(){throw new r(`Bridge error ${JSON.stringify(e)}`)}))}updateSession(e,t){return o(this,void 0,void 0,(function*(){this.session=Object.assign(Object.assign({},this.session),{walletPublicKey:t});const n=e.payload.items.find((e=>"ton_addr"===e.name)),i=Object.assign(Object.assign({},e),{payload:Object.assign(Object.assign({},e.payload),{items:[n]})});yield this.connectionStorage.storeConnection({type:"http",session:this.session,lastWalletEventId:e.id,connectEvent:i,nextRpcRequestId:0})}))}removeBridgeAndSession(){return o(this,void 0,void 0,(function*(){this.closeConnection(),yield this.connectionStorage.removeConnection()}))}generateUniversalLink(e,t){return O(e)?this.generateTGUniversalLink(e,t):this.generateRegularUniversalLink(e,t)}generateRegularUniversalLink(e,t){const n=new URL(e);return n.searchParams.append("v",2..toString()),n.searchParams.append("id",this.session.sessionCrypto.sessionId),n.searchParams.append("r",JSON.stringify(t)),n.toString()}generateTGUniversalLink(e,t){const n="tonconnect-"+T(this.generateRegularUniversalLink("about:blank",t).split("?")[1]),i=this.convertToDirectLink(e),s=new URL(i);return s.searchParams.append("startapp",n),s.toString()}convertToDirectLink(e){const t=new URL(e);return t.searchParams.has("attach")&&(t.searchParams.delete("attach"),t.pathname+="/start"),t.toString()}openGateways(e,t){return o(this,void 0,void 0,(function*(){return Array.isArray(this.walletConnectionSource)?(this.pendingGateways.map((e=>e.close().catch())),this.pendingGateways=this.walletConnectionSource.map((t=>{const n=new x(this.storage,t.bridgeUrl,e.sessionId,(()=>{}),(()=>{}));return n.setListener((e=>this.pendingGatewaysListener(n,t.bridgeUrl,e))),n})),void(yield Promise.allSettled(this.pendingGateways.map((e=>P((n=>{var i;return this.pendingGateways.some((t=>t===e))?e.registerSession({openingDeadlineMS:null!==(i=null==t?void 0:t.openingDeadlineMS)&&void 0!==i?i:this.defaultOpeningDeadlineMS,signal:n.signal}):e.close()}),{attempts:Number.MAX_SAFE_INTEGER,delayMs:this.defaultRetryTimeoutMS,signal:null==t?void 0:t.signal})))))):(this.gateway&&(I("Gateway is already opened, closing previous gateway"),yield this.gateway.close()),this.gateway=new x(this.storage,this.walletConnectionSource.bridgeUrl,e.sessionId,this.gatewayListener.bind(this),this.gatewayErrorsListener.bind(this)),yield this.gateway.registerSession({openingDeadlineMS:null==t?void 0:t.openingDeadlineMS,signal:null==t?void 0:t.signal}))}))}closeGateways(e){var t;null===(t=this.gateway)||void 0===t||t.close(),this.pendingGateways.filter((t=>t!==(null==e?void 0:e.except))).forEach((e=>e.close())),this.pendingGateways=[]}}function D(e,t){return N(e,[t])}function N(e,t){return!(!e||"object"!=typeof e)&&t.every((t=>t in e))}class M{constructor(){this.storage={}}static getInstance(){return M.instance||(M.instance=new M),M.instance}get length(){return Object.keys(this.storage).length}clear(){this.storage={}}getItem(e){var t;return null!==(t=this.storage[e])&&void 0!==t?t:null}key(e){var t;const n=Object.keys(this.storage);return e<0||e>=n.length?null:null!==(t=n[e])&&void 0!==t?t:null}removeItem(e){delete this.storage[e]}setItem(e,t){this.storage[e]=t}}function K(){if("undefined"!=typeof window)return window}function B(){if("undefined"!=typeof document)return document}function G(){var e;const t=null===(e=K())||void 0===e?void 0:e.location.origin;return t?t+"/tonconnect-manifest.json":""}function $(){if(function(){try{return"undefined"!=typeof localStorage}catch(e){return!1}}())return localStorage;if(void 0!==s&&null!=s.versions&&null!=s.versions.node)throw new r("`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector");return M.getInstance()}class H{constructor(e,t){this.injectedWalletKey=t,this.type="injected",this.unsubscribeCallback=null,this.listenSubscriptions=!1,this.listeners=[];const n=H.window;if(!H.isWindowContainsWallet(n,t))throw new v;this.connectionStorage=new q(e),this.injectedWallet=n[t].tonconnect}static fromStorage(e){return o(this,void 0,void 0,(function*(){const t=new q(e),n=yield t.getInjectedConnection();return new H(e,n.jsBridgeKey)}))}static isWalletInjected(e){return H.isWindowContainsWallet(this.window,e)}static isInsideWalletBrowser(e){return!!H.isWindowContainsWallet(this.window,e)&&this.window[e].tonconnect.isWalletBrowser}static getCurrentlyInjectedWallets(){if(!this.window)return[];return function(){const e=K();if(!e)return[];try{return Object.keys(e)}catch(e){return[]}}().filter((([e,t])=>function(e){try{return!(!D(e,"tonconnect")||!D(e.tonconnect,"walletInfo"))&&N(e.tonconnect.walletInfo,["name","app_name","image","about_url","platforms"])}catch(e){return!1}}(t))).map((([e,t])=>({name:t.tonconnect.walletInfo.name,appName:t.tonconnect.walletInfo.app_name,aboutUrl:t.tonconnect.walletInfo.about_url,imageUrl:t.tonconnect.walletInfo.image,tondns:t.tonconnect.walletInfo.tondns,jsBridgeKey:e,injected:!0,embedded:t.tonconnect.isWalletBrowser,platforms:t.tonconnect.walletInfo.platforms})))}static isWindowContainsWallet(e,t){return!!e&&t in e&&"object"==typeof e[t]&&"tonconnect"in e[t]}connect(e){this._connect(2,e)}restoreConnection(){return o(this,void 0,void 0,(function*(){try{I("Injected Provider restoring connection...");const e=yield this.injectedWallet.restoreConnection();I("Injected Provider restoring connection response",e),"connect"===e.event?(this.makeSubscriptions(),this.listeners.forEach((t=>t(e)))):yield this.connectionStorage.removeConnection()}catch(e){yield this.connectionStorage.removeConnection(),console.error(e)}}))}closeConnection(){this.listenSubscriptions&&this.injectedWallet.disconnect(),this.closeAllListeners()}disconnect(){return o(this,void 0,void 0,(function*(){return new Promise((e=>{const t=()=>{this.closeAllListeners(),this.connectionStorage.removeConnection().then(e)};try{this.injectedWallet.disconnect(),t()}catch(e){I(e),this.sendRequest({method:"disconnect",params:[]},t)}}))}))}closeAllListeners(){var e;this.listenSubscriptions=!1,this.listeners=[],null===(e=this.unsubscribeCallback)||void 0===e||e.call(this)}listen(e){return this.listeners.push(e),()=>this.listeners=this.listeners.filter((t=>t!==e))}sendRequest(e,t){var n;return o(this,void 0,void 0,(function*(){const i={};"function"==typeof t?i.onRequestSent=t:(i.onRequestSent=null==t?void 0:t.onRequestSent,i.signal=null==t?void 0:t.signal);const s=(yield this.connectionStorage.getNextRpcRequestId()).toString();yield this.connectionStorage.increaseNextRpcRequestId(),I("Send injected-bridge request:",Object.assign(Object.assign({},e),{id:s}));const o=this.injectedWallet.send(Object.assign(Object.assign({},e),{id:s}));return o.then((e=>I("Wallet message received:",e))),null===(n=null==i?void 0:i.onRequestSent)||void 0===n||n.call(i),o}))}_connect(e,t){return o(this,void 0,void 0,(function*(){try{I(`Injected Provider connect request: protocolVersion: ${e}, message:`,t);const n=yield this.injectedWallet.connect(e,t);I("Injected Provider connect response:",n),"connect"===n.event&&(yield this.updateSession(),this.makeSubscriptions()),this.listeners.forEach((e=>e(n)))}catch(e){I("Injected Provider connect error:",e);const t={event:"connect_error",payload:{code:0,message:null==e?void 0:e.toString()}};this.listeners.forEach((e=>e(t)))}}))}makeSubscriptions(){this.listenSubscriptions=!0,this.unsubscribeCallback=this.injectedWallet.listen((e=>{I("Wallet message received:",e),this.listenSubscriptions&&this.listeners.forEach((t=>t(e))),"disconnect"===e.event&&this.disconnect()}))}updateSession(){return this.connectionStorage.storeConnection({type:"injected",jsBridgeKey:this.injectedWalletKey,nextRpcRequestId:0})}}H.window=K();class J{constructor(){this.localStorage=$()}getItem(e){return o(this,void 0,void 0,(function*(){return this.localStorage.getItem(e)}))}removeItem(e){return o(this,void 0,void 0,(function*(){this.localStorage.removeItem(e)}))}setItem(e,t){return o(this,void 0,void 0,(function*(){this.localStorage.setItem(e,t)}))}}function F(e){return function(e){return"jsBridgeKey"in e}(e)&&e.injected}function V(e){return F(e)&&e.embedded}function Q(e){return"bridgeUrl"in e}const X=[{app_name:"telegram-wallet",name:"Wallet",image:"https://wallet.tg/images/logo-288.png",about_url:"https://wallet.tg/",universal_url:"https://t.me/wallet?attach=wallet",bridge:[{type:"sse",url:"https://bridge.ton.space/bridge"}],platforms:["ios","android","macos","windows","linux"]},{app_name:"tonkeeper",name:"Tonkeeper",image:"https://tonkeeper.com/assets/tonconnect-icon.png",tondns:"tonkeeper.ton",about_url:"https://tonkeeper.com",universal_url:"https://app.tonkeeper.com/ton-connect",deepLink:"tonkeeper-tc://",bridge:[{type:"sse",url:"https://bridge.tonapi.io/bridge"},{type:"js",key:"tonkeeper"}],platforms:["ios","android","chrome","firefox","macos"]},{app_name:"mytonwallet",name:"MyTonWallet",image:"https://static.mytonwallet.io/icon-256.png",about_url:"https://mytonwallet.io",universal_url:"https://connect.mytonwallet.org",bridge:[{type:"js",key:"mytonwallet"},{type:"sse",url:"https://tonconnectbridge.mytonwallet.org/bridge/"}],platforms:["chrome","windows","macos","linux","ios","android","firefox"]},{app_name:"openmask",name:"OpenMask",image:"https://raw.githubusercontent.com/OpenProduct/openmask-extension/main/public/openmask-logo-288.png",about_url:"https://www.openmask.app/",bridge:[{type:"js",key:"openmask"}],platforms:["chrome"]},{app_name:"tonhub",name:"Tonhub",image:"https://tonhub.com/tonconnect_logo.png",about_url:"https://tonhub.com",universal_url:"https://tonhub.com/ton-connect",bridge:[{type:"js",key:"tonhub"},{type:"sse",url:"https://connect.tonhubapi.com/tonconnect"}],platforms:["ios","android"]},{app_name:"dewallet",name:"DeWallet",image:"https://raw.githubusercontent.com/delab-team/manifests-images/main/WalletAvatar.png",about_url:"https://delabwallet.com",universal_url:"https://t.me/dewallet?attach=wallet",bridge:[{type:"sse",url:"https://sse-bridge.delab.team/bridge"}],platforms:["ios","android"]},{app_name:"xtonwallet",name:"XTONWallet",image:"https://xtonwallet.com/assets/img/icon-256-back.png",about_url:"https://xtonwallet.com",bridge:[{type:"js",key:"xtonwallet"}],platforms:["chrome","firefox"]},{app_name:"tonwallet",name:"TON Wallet",image:"https://wallet.ton.org/assets/ui/qr-logo.png",about_url:"https://chrome.google.com/webstore/detail/ton-wallet/nphplpgoakhhjchkkhmiggakijnkhfnd",bridge:[{type:"js",key:"tonwallet"}],platforms:["chrome"]},{app_name:"bitgetTonWallet",name:"Bitget Wallet",image:"https://raw.githubusercontent.com/bitkeepwallet/download/main/logo/png/bitget_wallet_logo_0_gas_fee.png",about_url:"https://web3.bitget.com",deepLink:"bitkeep://",bridge:[{type:"js",key:"bitgetTonWallet"},{type:"sse",url:"https://bridge.tonapi.io/bridge"}],platforms:["ios","android","chrome"],universal_url:"https://bkcode.vip/ton-connect"},{app_name:"safepalwallet",name:"SafePal",image:"https://s.pvcliping.com/web/public_image/SafePal_x288.png",tondns:"",about_url:"https://www.safepal.com",universal_url:"https://link.safepal.io/ton-connect",deepLink:"safepal-tc://",bridge:[{type:"sse",url:"https://ton-bridge.safepal.com/tonbridge/v1/bridge"},{type:"js",key:"safepalwallet"}],platforms:["ios","android","chrome","firefox"]},{app_name:"okxTonWallet",name:"OKX Wallet",image:"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png",about_url:"https://www.okx.com/web3",universal_url:"https://www.okx.com/download?appendQuery=true&deeplink=okx://web3/wallet/tonconnect",bridge:[{type:"js",key:"okxTonWallet"},{type:"sse",url:"https://www.okx.com/tonbridge/discover/rpc/bridge"}],platforms:["chrome","safari","firefox","ios","android"]},{app_name:"okxTonWalletTr",name:"OKX TR Wallet",image:"https://static.okx.com/cdn/assets/imgs/247/587A8296F0BB640F.png",about_url:"https://tr.okx.com/web3",universal_url:"https://tr.okx.com/download?appendQuery=true&deeplink=okxtr://web3/wallet/tonconnect",bridge:[{type:"js",key:"okxTonWallet"},{type:"sse",url:"https://www.okx.com/tonbridge/discover/rpc/bridge"}],platforms:["chrome","safari","firefox","ios","android"]}];class Y{constructor(e){this.walletsListCache=null,this.walletsListCacheCreationTimestamp=null,this.walletsListSource="https://raw.githubusercontent.com/ton-blockchain/wallets-list/main/wallets-v2.json",(null==e?void 0:e.walletsListSource)&&(this.walletsListSource=e.walletsListSource),(null==e?void 0:e.cacheTTLMs)&&(this.cacheTTLMs=e.cacheTTLMs)}getWallets(){return o(this,void 0,void 0,(function*(){return this.cacheTTLMs&&this.walletsListCacheCreationTimestamp&&Date.now()>this.walletsListCacheCreationTimestamp+this.cacheTTLMs&&(this.walletsListCache=null),this.walletsListCache||(this.walletsListCache=this.fetchWalletsList(),this.walletsListCache.then((()=>{this.walletsListCacheCreationTimestamp=Date.now()})).catch((()=>{this.walletsListCache=null,this.walletsListCacheCreationTimestamp=null}))),this.walletsListCache}))}getEmbeddedWallet(){return o(this,void 0,void 0,(function*(){const e=(yield this.getWallets()).filter(V);return 1!==e.length?null:e[0]}))}fetchWalletsList(){return o(this,void 0,void 0,(function*(){let e=[];try{const t=yield fetch(this.walletsListSource);if(e=yield t.json(),!Array.isArray(e))throw new f("Wrong wallets list format, wallets list must be an array.");const n=e.filter((e=>!this.isCorrectWalletConfigDTO(e)));n.length&&(W(`Wallet(s) ${n.map((e=>e.name)).join(", ")} config format is wrong. They were removed from the wallets list.`),e=e.filter((e=>this.isCorrectWalletConfigDTO(e))))}catch(t){W(t),e=X}let t=[];try{t=H.getCurrentlyInjectedWallets()}catch(e){W(e)}return this.mergeWalletsLists(this.walletConfigDTOListToWalletConfigList(e),t)}))}walletConfigDTOListToWalletConfigList(e){return e.map((e=>{const t={name:e.name,appName:e.app_name,imageUrl:e.image,aboutUrl:e.about_url,tondns:e.tondns,platforms:e.platforms};return e.bridge.forEach((n=>{if("sse"===n.type&&(t.bridgeUrl=n.url,t.universalLink=e.universal_url,t.deepLink=e.deepLink),"js"===n.type){const e=n.key;t.jsBridgeKey=e,t.injected=H.isWalletInjected(e),t.embedded=H.isInsideWalletBrowser(e)}})),t}))}mergeWalletsLists(e,t){return[...new Set(e.concat(t).map((e=>e.name))).values()].map((n=>{const i=e.find((e=>e.name===n)),s=t.find((e=>e.name===n));return Object.assign(Object.assign({},i&&Object.assign({},i)),s&&Object.assign({},s))}))}isCorrectWalletConfigDTO(e){if(!e||"object"!=typeof e)return!1;if(!("name"in e&&"image"in e&&"about_url"in e&&"platforms"in e&&"app_name"in e))return!1;if(!e.platforms||!Array.isArray(e.platforms)||!e.platforms.length)return!1;if(!("bridge"in e)||!Array.isArray(e.bridge)||!e.bridge.length)return!1;const t=e.bridge;if(t.some((e=>!e||"object"!=typeof e||!("type"in e))))return!1;const n=t.find((e=>"sse"===e.type));if(n&&(!("url"in n)||!n.url||!e.universal_url))return!1;const i=t.find((e=>"js"===e.type));return!!(!i||"key"in i&&i.key)}}class z extends r{get info(){return"Wallet doesn't support requested feature method."}constructor(...e){super(...e),Object.setPrototypeOf(this,z.prototype)}}function Z(e,t){const n=e.includes("SendTransaction"),i=e.find((e=>e&&"object"==typeof e&&"SendTransaction"===e.name));if(!n&&!i)throw new z("Wallet doesn't support SendTransaction feature.");if(i&&void 0!==i.maxMessages){if(i.maxMessages<t.requiredMessagesNumber)throw new z(`Wallet is not able to handle such SendTransaction request. Max support messages number is ${i.maxMessages}, but ${t.requiredMessagesNumber} is required.`)}else!function(...e){try{console.warn("[TON_CONNECT_SDK]",...e)}catch(e){}}("Connected wallet didn't provide information about max allowed messages in the SendTransaction request. Request may be rejected by the wallet.")}function ee(){return{type:"request-version"}}function te(e){return{type:"response-version",version:e}}function ne(e){return{ton_connect_sdk_lib:e.ton_connect_sdk_lib,ton_connect_ui_lib:e.ton_connect_ui_lib}}function ie(e,t){var n,i,s,o,r,a,c,l;const d=(null===(n=null==t?void 0:t.connectItems)||void 0===n?void 0:n.tonProof)&&"proof"in t.connectItems.tonProof?"ton_proof":"ton_addr";return{wallet_address:null!==(s=null===(i=null==t?void 0:t.account)||void 0===i?void 0:i.address)&&void 0!==s?s:null,wallet_type:null!==(o=null==t?void 0:t.device.appName)&&void 0!==o?o:null,wallet_version:null!==(r=null==t?void 0:t.device.appVersion)&&void 0!==r?r:null,auth_type:d,custom_data:Object.assign({chain_id:null!==(c=null===(a=null==t?void 0:t.account)||void 0===a?void 0:a.chain)&&void 0!==c?c:null,provider:null!==(l=null==t?void 0:t.provider)&&void 0!==l?l:null},ne(e))}}function se(e){return{type:"connection-started",custom_data:ne(e)}}function oe(e,t){return Object.assign({type:"connection-completed",is_success:!0},ie(e,t))}function re(e,t,n){return{type:"connection-error",is_success:!1,error_message:t,error_code:null!=n?n:null,custom_data:ne(e)}}function ae(e){return{type:"connection-restoring-started",custom_data:ne(e)}}function ce(e,t){return Object.assign({type:"connection-restoring-completed",is_success:!0},ie(e,t))}function le(e,t){return{type:"connection-restoring-error",is_success:!1,error_message:t,custom_data:ne(e)}}function de(e,t){var n,i,s,o;return{valid_until:null!==(n=String(t.validUntil))&&void 0!==n?n:null,from:null!==(o=null!==(i=t.from)&&void 0!==i?i:null===(s=null==e?void 0:e.account)||void 0===s?void 0:s.address)&&void 0!==o?o:null,messages:t.messages.map((e=>{var t,n;return{address:null!==(t=e.address)&&void 0!==t?t:null,amount:null!==(n=e.amount)&&void 0!==n?n:null}}))}}function ue(e,t,n){return Object.assign(Object.assign({type:"transaction-sent-for-signature"},ie(e,t)),de(t,n))}function he(e,t,n,i){return Object.assign(Object.assign({type:"transaction-signed",is_success:!0,signed_transaction:i.boc},ie(e,t)),de(t,n))}function pe(e,t,n,i,s){return Object.assign(Object.assign({type:"transaction-signing-failed",is_success:!1,error_message:i,error_code:null!=s?s:null},ie(e,t)),de(t,n))}function ge(e,t,n){return Object.assign({type:"disconnection",scope:n},ie(e,t))}class ve{constructor(){this.window=K()}dispatchEvent(e,t){var n;return o(this,void 0,void 0,(function*(){const i=new CustomEvent(e,{detail:t});null===(n=this.window)||void 0===n||n.dispatchEvent(i)}))}addEventListener(e,t,n){var i;return o(this,void 0,void 0,(function*(){return null===(i=this.window)||void 0===i||i.addEventListener(e,t,n),()=>{var n;return null===(n=this.window)||void 0===n?void 0:n.removeEventListener(e,t)}}))}}class fe{constructor(e){var t;this.eventPrefix="ton-connect-",this.tonConnectUiVersion=null,this.eventDispatcher=null!==(t=null==e?void 0:e.eventDispatcher)&&void 0!==t?t:new ve,this.tonConnectSdkVersion=e.tonConnectSdkVersion,this.init().catch()}get version(){return ne({ton_connect_sdk_lib:this.tonConnectSdkVersion,ton_connect_ui_lib:this.tonConnectUiVersion})}init(){return o(this,void 0,void 0,(function*(){try{yield this.setRequestVersionHandler(),this.tonConnectUiVersion=yield this.requestTonConnectUiVersion()}catch(e){}}))}setRequestVersionHandler(){return o(this,void 0,void 0,(function*(){yield this.eventDispatcher.addEventListener("ton-connect-request-version",(()=>o(this,void 0,void 0,(function*(){yield this.eventDispatcher.dispatchEvent("ton-connect-response-version",te(this.tonConnectSdkVersion))}))))}))}requestTonConnectUiVersion(){return o(this,void 0,void 0,(function*(){return new Promise(((e,t)=>o(this,void 0,void 0,(function*(){try{yield this.eventDispatcher.addEventListener("ton-connect-ui-response-version",(t=>{e(t.detail.version)}),{once:!0}),yield this.eventDispatcher.dispatchEvent("ton-connect-ui-request-version",{type:"request-version"})}catch(e){t(e)}}))))}))}dispatchUserActionEvent(e){try{this.eventDispatcher.dispatchEvent(`${this.eventPrefix}${e.type}`,e).catch()}catch(e){}}trackConnectionStarted(...e){try{const t=se(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackConnectionCompleted(...e){try{const t=oe(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackConnectionError(...e){try{const t=re(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackConnectionRestoringStarted(...e){try{const t=ae(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackConnectionRestoringCompleted(...e){try{const t=ce(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackConnectionRestoringError(...e){try{const t=le(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackDisconnection(...e){try{const t=ge(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackTransactionSentForSignature(...e){try{const t=ue(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackTransactionSigned(...e){try{const t=he(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}trackTransactionSigningFailed(...e){try{const t=pe(this.version,...e);this.dispatchUserActionEvent(t)}catch(e){}}}class we{constructor(e){if(this.walletsList=new Y,this._wallet=null,this.provider=null,this.statusChangeSubscriptions=[],this.statusChangeErrorSubscriptions=[],this.dappSettings={manifestUrl:(null==e?void 0:e.manifestUrl)||G(),storage:(null==e?void 0:e.storage)||new J},this.walletsList=new Y({walletsListSource:null==e?void 0:e.walletsListSource,cacheTTLMs:null==e?void 0:e.walletsListCacheTTLMs}),this.tracker=new fe({eventDispatcher:null==e?void 0:e.eventDispatcher,tonConnectSdkVersion:"3.0.5"}),!this.dappSettings.manifestUrl)throw new a("Dapp tonconnect-manifest.json must be specified if window.location.origin is undefined. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest");this.bridgeConnectionStorage=new q(this.dappSettings.storage),(null==e?void 0:e.disableAutoPauseConnection)||this.addWindowFocusAndBlurSubscriptions()}static getWallets(){return this.walletsList.getWallets()}get connected(){return null!==this._wallet}get account(){var e;return(null===(e=this._wallet)||void 0===e?void 0:e.account)||null}get wallet(){return this._wallet}set wallet(e){this._wallet=e,this.statusChangeSubscriptions.forEach((e=>e(this._wallet)))}getWallets(){return this.walletsList.getWallets()}onStatusChange(e,t){return this.statusChangeSubscriptions.push(e),t&&this.statusChangeErrorSubscriptions.push(t),()=>{this.statusChangeSubscriptions=this.statusChangeSubscriptions.filter((t=>t!==e)),t&&(this.statusChangeErrorSubscriptions=this.statusChangeErrorSubscriptions.filter((e=>e!==t)))}}connect(e,t){var n,i;const s={};if("object"==typeof t&&"tonProof"in t&&(s.request=t),"object"==typeof t&&("openingDeadlineMS"in t||"signal"in t||"request"in t)&&(s.request=null==t?void 0:t.request,s.openingDeadlineMS=null==t?void 0:t.openingDeadlineMS,s.signal=null==t?void 0:t.signal),this.connected)throw new d;const o=L(null==s?void 0:s.signal);if(null===(n=this.abortController)||void 0===n||n.abort(),this.abortController=o,o.signal.aborted)throw new r("Connection was aborted");return null===(i=this.provider)||void 0===i||i.closeConnection(),this.provider=this.createProvider(e),o.signal.addEventListener("abort",(()=>{var e;null===(e=this.provider)||void 0===e||e.closeConnection(),this.provider=null})),this.tracker.trackConnectionStarted(),this.provider.connect(this.createConnectRequest(null==s?void 0:s.request),{openingDeadlineMS:null==s?void 0:s.openingDeadlineMS,signal:o.signal})}restoreConnection(e){var t,n;return o(this,void 0,void 0,(function*(){this.tracker.trackConnectionRestoringStarted();const i=L(null==e?void 0:e.signal);if(null===(t=this.abortController)||void 0===t||t.abort(),this.abortController=i,i.signal.aborted)return void this.tracker.trackConnectionRestoringError("Connection restoring was aborted");const[s,r]=yield Promise.all([this.bridgeConnectionStorage.storedConnectionType(),this.walletsList.getEmbeddedWallet()]);if(i.signal.aborted)return void this.tracker.trackConnectionRestoringError("Connection restoring was aborted");let a=null;try{switch(s){case"http":a=yield A.fromStorage(this.dappSettings.storage);break;case"injected":a=yield H.fromStorage(this.dappSettings.storage);break;default:if(!r)return;a=this.createProvider(r)}}catch(e){return this.tracker.trackConnectionRestoringError("Provider is not restored"),yield this.bridgeConnectionStorage.removeConnection(),null==a||a.closeConnection(),void(a=null)}if(i.signal.aborted)return null==a||a.closeConnection(),void this.tracker.trackConnectionRestoringError("Connection restoring was aborted");if(!a)return W("Provider is not restored"),void this.tracker.trackConnectionRestoringError("Provider is not restored");null===(n=this.provider)||void 0===n||n.closeConnection(),this.provider=a,a.listen(this.walletEventsListener.bind(this));const c=()=>{this.tracker.trackConnectionRestoringError("Connection restoring was aborted"),null==a||a.closeConnection(),a=null};i.signal.addEventListener("abort",c);const l=P((t=>o(this,void 0,void 0,(function*(){yield null==a?void 0:a.restoreConnection({openingDeadlineMS:null==e?void 0:e.openingDeadlineMS,signal:t.signal}),i.signal.removeEventListener("abort",c),this.connected?this.tracker.trackConnectionRestoringCompleted(this.wallet):this.tracker.trackConnectionRestoringError("Connection restoring failed")}))),{attempts:Number.MAX_SAFE_INTEGER,delayMs:2e3,signal:null==e?void 0:e.signal}),d=new Promise((e=>setTimeout((()=>e()),12e3)));return Promise.race([l,d])}))}sendTransaction(e,t){return o(this,void 0,void 0,(function*(){const n={};"function"==typeof t?n.onRequestSent=t:(n.onRequestSent=null==t?void 0:t.onRequestSent,n.signal=null==t?void 0:t.signal);const i=L(null==n?void 0:n.signal);if(i.signal.aborted)throw new r("Transaction sending was aborted");this.checkConnection(),Z(this.wallet.device.features,{requiredMessagesNumber:e.messages.length}),this.tracker.trackTransactionSentForSignature(this.wallet,e);const{validUntil:s}=e,o=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(i=Object.getOwnPropertySymbols(e);s<i.length;s++)t.indexOf(i[s])<0&&Object.prototype.propertyIsEnumerable.call(e,i[s])&&(n[i[s]]=e[i[s]])}return n}(e,["validUntil"]),a=e.from||this.account.address,c=e.network||this.account.chain,l=yield this.provider.sendRequest(E.convertToRpcRequest(Object.assign(Object.assign({},o),{valid_until:s,from:a,network:c})),{onRequestSent:n.onRequestSent,signal:i.signal});if(E.isError(l))return this.tracker.trackTransactionSigningFailed(this.wallet,e,l.error.message,l.error.code),E.parseAndThrowError(l);const d=E.convertFromRpcResponse(l);return this.tracker.trackTransactionSigned(this.wallet,e,d),d}))}disconnect(e){var t;return o(this,void 0,void 0,(function*(){if(!this.connected)throw new u;const n=L(null==e?void 0:e.signal),i=this.abortController;if(this.abortController=n,n.signal.aborted)throw new r("Disconnect was aborted");this.onWalletDisconnected("dapp"),yield null===(t=this.provider)||void 0===t?void 0:t.disconnect({signal:n.signal}),null==i||i.abort()}))}pauseConnection(){var e;"http"===(null===(e=this.provider)||void 0===e?void 0:e.type)&&this.provider.pause()}unPauseConnection(){var e;return"http"!==(null===(e=this.provider)||void 0===e?void 0:e.type)?Promise.resolve():this.provider.unPause()}addWindowFocusAndBlurSubscriptions(){const e=B();if(e)try{e.addEventListener("visibilitychange",(()=>{e.hidden?this.pauseConnection():this.unPauseConnection().catch()}))}catch(e){W("Cannot subscribe to the document.visibilitychange: ",e)}}createProvider(e){let t;return t=!Array.isArray(e)&&"jsBridgeKey"in e?new H(this.dappSettings.storage,e.jsBridgeKey):new A(this.dappSettings.storage,e),t.listen(this.walletEventsListener.bind(this)),t}walletEventsListener(e){switch(e.event){case"connect":this.onWalletConnected(e.payload);break;case"connect_error":this.onWalletConnectError(e.payload);break;case"disconnect":this.onWalletDisconnected("wallet")}}onWalletConnected(e){const t=e.items.find((e=>"ton_addr"===e.name)),n=e.items.find((e=>"ton_proof"===e.name));if(!t)throw new r("ton_addr connection item was not found");const i={device:e.device,provider:this.provider.type,account:{address:t.address,chain:t.network,walletStateInit:t.walletStateInit,publicKey:t.publicKey}};n&&(i.connectItems={tonProof:n}),this.wallet=i,this.tracker.trackConnectionCompleted(i)}onWalletConnectError(e){const t=S.parseError(e);if(this.statusChangeErrorSubscriptions.forEach((e=>e(t))),I(t),this.tracker.trackConnectionError(e.message,e.code),t instanceof l||t instanceof c)throw W(t),t}onWalletDisconnected(e){this.tracker.trackDisconnection(this.wallet,e),this.wallet=null}checkConnection(){if(!this.connected)throw new u}createConnectRequest(e){const t=[{name:"ton_addr"}];return(null==e?void 0:e.tonProof)&&t.push({name:"ton_proof",payload:e.tonProof}),{manifestUrl:this.dappSettings.manifestUrl,items:t}}}we.walletsList=new Y,we.isWalletInjected=e=>H.isWalletInjected(e),we.isInsideWalletBrowser=e=>H.isInsideWalletBrowser(e);const ye=81,me=128;function be(e,t=!1){const{wc:n,hex:s}=function(e){if(!e.includes(":"))throw new w(`Wrong address ${e}. Address must include ":".`);const t=e.split(":");if(2!==t.length)throw new w(`Wrong address ${e}. Address must include ":" only once.`);const n=parseInt(t[0]);if(0!==n&&-1!==n)throw new w(`Wrong address ${e}. WC must be eq 0 or -1, but ${n} received.`);const i=t[1];if(64!==(null==i?void 0:i.length))throw new w(`Wrong address ${e}. Hex part must be 64bytes length, but ${null==i?void 0:i.length} received.`);return{wc:n,hex:Ce(i)}}(e);let o=ye;t&&(o|=me);const r=new Int8Array(34);r[0]=o,r[1]=n,r.set(s,2);const a=new Uint8Array(36);return a.set(r),a.set(function(e){const t=4129;let n=0;const i=new Uint8Array(e.length+2);i.set(e);for(let e of i){let i=128;for(;i>0;)n<<=1,e&i&&(n+=1),i>>=1,n>65535&&(n&=65535,n^=t)}return new Uint8Array([Math.floor(n/256),n%256])}(r),34),i.DS.encode(a).replace(/\+/g,"-").replace(/\//g,"_")}const Se={};for(let e=0;e<=255;e++){let t=e.toString(16);t.length<2&&(t="0"+t),Se[t]=e}function Ce(e){const t=(e=e.toLowerCase()).length;if(t%2!=0)throw new y("Hex string must have length a multiple of 2: "+e);const n=t/2,i=new Uint8Array(n);for(let t=0;t<n;t++){const n=2*t,s=e.substring(n,n+2);if(!Se.hasOwnProperty(s))throw new y("Invalid hex character: "+s);i[t]=Se[s]}return i}}}]);
//# sourceMappingURL=4133-bb7739198d398a50.js.map