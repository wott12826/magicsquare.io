(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7989],{26549:function(t,e,n){t.exports=function(){const t=n(62086),e=n(11603),r=n(1123);let s=[],a=[];const o=[];let i;const p=[],c=[];this.statsObject="statsObject";const h=function(t,e){return t.lower<e.lower?-1:t.lower>e.lower?1:0},l=function(t,e){return t.total<e.total?1:t.total>e.total?-1:h(t,e)},d=function(t,e){return t.index<e.index?-1:t.index>e.index?1:0},u=function(){this.empty=0,this.match=0,this.nomatch=0,this.total=0},f=function(e,n){switch(e.total+=1,n){case t.EMPTY:e.empty+=1;break;case t.MATCH:e.match+=1;break;case t.NOMATCH:e.nomatch+=1;break;default:throw new Error(`stats.js: collect(): incStat(): unrecognized state: ${n}`)}},A=function(t,e){let n="";return n+="<tr>",n+=`<td class="${r.CLASS_ACTIVE}">${t}</td>`,n+=`<td class="${r.CLASS_EMPTY}">${e.empty}</td>`,n+=`<td class="${r.CLASS_MATCH}">${e.match}</td>`,n+=`<td class="${r.CLASS_NOMATCH}">${e.nomatch}</td>`,n+=`<td class="${r.CLASS_ACTIVE}">${e.total}</td>`,n+="</tr>\n",n},b=function(){let e="";return e+=A("ALT",o[t.ALT]),e+=A("CAT",o[t.CAT]),e+=A("REP",o[t.REP]),e+=A("RNM",o[t.RNM]),e+=A("TRG",o[t.TRG]),e+=A("TBS",o[t.TBS]),e+=A("TLS",o[t.TLS]),e+=A("UDT",o[t.UDT]),e+=A("AND",o[t.AND]),e+=A("NOT",o[t.NOT]),e+=A("BKR",o[t.BKR]),e+=A("BKA",o[t.BKA]),e+=A("BKN",o[t.BKN]),e+=A("ABG",o[t.ABG]),e+=A("AEN",o[t.AEN]),e+=A("totals",i),e},T=function(){let t="";t+="<tr><th></th><th></th><th></th><th></th><th></th></tr>\n",t+="<tr><th>rules</th><th></th><th></th><th></th><th></th></tr>\n";for(let e=0;e<s.length;e+=1)p[e].total>0&&(t+="<tr>",t+=`<td class="${r.CLASS_ACTIVE}">${p[e].name}</td>`,t+=`<td class="${r.CLASS_EMPTY}">${p[e].empty}</td>`,t+=`<td class="${r.CLASS_MATCH}">${p[e].match}</td>`,t+=`<td class="${r.CLASS_NOMATCH}">${p[e].nomatch}</td>`,t+=`<td class="${r.CLASS_ACTIVE}">${p[e].total}</td>`,t+="</tr>\n");if(a.length>0){t+="<tr><th></th><th></th><th></th><th></th><th></th></tr>\n",t+="<tr><th>udts</th><th></th><th></th><th></th><th></th></tr>\n";for(let e=0;e<a.length;e+=1)c[e].total>0&&(t+="<tr>",t+=`<td class="${r.CLASS_ACTIVE}">${c[e].name}</td>`,t+=`<td class="${r.CLASS_EMPTY}">${c[e].empty}</td>`,t+=`<td class="${r.CLASS_MATCH}">${c[e].match}</td>`,t+=`<td class="${r.CLASS_NOMATCH}">${c[e].nomatch}</td>`,t+=`<td class="${r.CLASS_ACTIVE}">${c[e].total}</td>`,t+="</tr>\n")}return t};this.validate=function(t){let e=!1;return"string"==typeof t&&"stats"===t&&(e=!0),e},this.init=function(e,n){s=e,a=n,function(){o.length=0,i=new u,o[t.ALT]=new u,o[t.CAT]=new u,o[t.REP]=new u,o[t.RNM]=new u,o[t.TRG]=new u,o[t.TBS]=new u,o[t.TLS]=new u,o[t.UDT]=new u,o[t.AND]=new u,o[t.NOT]=new u,o[t.BKR]=new u,o[t.BKA]=new u,o[t.BKN]=new u,o[t.ABG]=new u,o[t.AEN]=new u,p.length=0;for(let t=0;t<s.length;t+=1)p.push({empty:0,match:0,nomatch:0,total:0,name:s[t].name,lower:s[t].lower,index:s[t].index});if(a.length>0){c.length=0;for(let t=0;t<a.length;t+=1)c.push({empty:0,match:0,nomatch:0,total:0,name:a[t].name,lower:a[t].lower,index:a[t].index})}}()},this.collect=function(e,n){f(i,n.state,n.phraseLength),f(o[e.type],n.state,n.phraseLength),e.type===t.RNM&&f(p[e.index],n.state,n.phraseLength),e.type===t.UDT&&f(c[e.index],n.state,n.phraseLength)},this.toHtml=function(t,e){let n="";n+=`<table class="${r.CLASS_STATS}">\n`,"string"==typeof e&&(n+=`<caption>${e}</caption>\n`),n+=`<tr><th class="${r.CLASS_ACTIVE}">ops</th>\n`,n+=`<th class="${r.CLASS_EMPTY}">EMPTY</th>\n`,n+=`<th class="${r.CLASS_MATCH}">MATCH</th>\n`,n+=`<th class="${r.CLASS_NOMATCH}">NOMATCH</th>\n`,n+=`<th class="${r.CLASS_ACTIVE}">totals</th></tr>\n`;for(;;){if(void 0===t){n+=b();break}if(null===t){n+=b();break}if("ops"===t){n+=b();break}if("index"===t){p.sort(d),c.length>0&&c.sort(d),n+=b(),n+=T();break}if("hits"===t){p.sort(l),c.length>0&&c.sort(d),n+=b(),n+=T();break}if("alpha"===t){p.sort(h),c.length>0&&c.sort(h),n+=b(),n+=T();break}break}return n+="</table>\n",n},this.toHtmlPage=function(t,n,r){return e.htmlToPage(this.toHtml(t,n),r)}}},1123:function(t){t.exports={CLASS_MONOSPACE:"apg-mono",CLASS_ACTIVE:"apg-active",CLASS_EMPTY:"apg-empty",CLASS_MATCH:"apg-match",CLASS_NOMATCH:"apg-nomatch",CLASS_LOOKAHEAD:"apg-lh-match",CLASS_LOOKBEHIND:"apg-lb-match",CLASS_REMAINDER:"apg-remainder",CLASS_CTRLCHAR:"apg-ctrl-char",CLASS_LINEEND:"apg-line-end",CLASS_ERROR:"apg-error",CLASS_PHRASE:"apg-phrase",CLASS_EMPTYPHRASE:"apg-empty-phrase",CLASS_STATE:"apg-state",CLASS_STATS:"apg-stats",CLASS_TRACE:"apg-trace",CLASS_GRAMMAR:"apg-grammar",CLASS_RULES:"apg-rules",CLASS_RULESLINK:"apg-rules-link",CLASS_ATTRIBUTES:"apg-attrs"}},9574:function(t,e,n){t.exports=function(){const t=n(11603),e=n(1123),r=new(n(72081)),s=n(62086),a="trace.js: ",o=this,i=16,p=80,c=[];let h=5e3,l=-1,d=0,u=0;const f=[];let A=null,b=null,T=null;const g=[],S=[],C=`<span class="${e.CLASS_LINEEND}">&bull;</span>`,m=`<span class="${e.CLASS_LINEEND}">&hellip;</span>`,L=`<span class="${e.CLASS_EMPTY}">&#120634;</span>`;this.traceObject="traceObject",this.filter={operators:[],rules:[]},this.setMaxRecords=function(t,e){l=-1,"number"==typeof t&&t>0?(h=Math.ceil(t),"number"==typeof e&&(l=Math.floor(e),l<0&&(l=-1))):h=0},this.getMaxRecords=function(){return h},this.getLastRecord=function(){return l},this.init=function(t,e,n){c.length=0,f.length=0,d=0,u=0,A=n,b=t,T=e,function(){const t=function(t){g[s.ALT]=t,g[s.CAT]=t,g[s.REP]=t,g[s.TLS]=t,g[s.TBS]=t,g[s.TRG]=t,g[s.AND]=t,g[s.NOT]=t,g[s.BKR]=t,g[s.BKA]=t,g[s.BKN]=t,g[s.ABG]=t,g[s.AEN]=t};let e=0;for(const t in o.filter.operators)e+=1;if(0!==e){for(const e in o.filter.operators){const n=e.toUpperCase();if("<ALL>"===n)return void t(!0);if("<NONE>"===n)return void t(!1)}t(!1);for(const t in o.filter.operators){const e=t.toUpperCase();if("ALT"===e)g[s.ALT]=!0===o.filter.operators[t];else if("CAT"===e)g[s.CAT]=!0===o.filter.operators[t];else if("REP"===e)g[s.REP]=!0===o.filter.operators[t];else if("AND"===e)g[s.AND]=!0===o.filter.operators[t];else if("NOT"===e)g[s.NOT]=!0===o.filter.operators[t];else if("TLS"===e)g[s.TLS]=!0===o.filter.operators[t];else if("TBS"===e)g[s.TBS]=!0===o.filter.operators[t];else if("TRG"===e)g[s.TRG]=!0===o.filter.operators[t];else if("BKR"===e)g[s.BKR]=!0===o.filter.operators[t];else if("BKA"===e)g[s.BKA]=!0===o.filter.operators[t];else if("BKN"===e)g[s.BKN]=!0===o.filter.operators[t];else if("ABG"===e)g[s.ABG]=!0===o.filter.operators[t];else{if("AEN"!==e)throw new Error(`${a}initOpratorFilter: '${t}' not a valid operator name. Must be <all>, <none>, alt, cat, rep, tls, tbs, trg, and, not, bkr, bka or bkn`);g[s.AEN]=!0===o.filter.operators[t]}}}else t(!1)}(),function(){const t=function(t){g[s.RNM]=t,g[s.UDT]=t;const e=b.length+T.length;S.length=0;for(let n=0;n<e;n+=1)S.push(t)};let e,n;const r=[];for(n=0;n<b.length;n+=1)r.push(b[n].lower);for(n=0;n<T.length;n+=1)r.push(T[n].lower);S.length=0,e=0;for(const t in o.filter.rules)e+=1;if(0!==e){for(const e in o.filter.rules){const n=e.toLowerCase();if("<all>"===n)return void t(!0);if("<none>"===n)return void t(!1)}t(!1),g[s.RNM]=!0,g[s.UDT]=!0;for(const t in o.filter.rules){const e=t.toLowerCase();if(n=r.indexOf(e),n<0)throw new Error(`${a}initRuleFilter: '${t}' not a valid rule or udt name`);S[n]=!0===o.filter.rules[t]}}else t(!0)}(),r.init(h)};const E=function(t){let e=!1;return e=t.type===s.RNM?!(!g[t.type]||!S[t.index]):t.type===s.UDT?!(!g[t.type]||!S[b.length+t.index]):g[t.type],e},$=function(t){return-1===l||t<=l};this.down=function(t,e,n,s,a,o){$(d)&&E(t)&&(f.push(d),c[r.increment()]={dirUp:!1,depth:u,thisLine:d,thatLine:void 0,opcode:t,state:e,phraseIndex:n,phraseLength:s,lookAnchor:a,lookAround:o},d+=1,u+=1)},this.up=function(t,e,n,s,a,o){if($(d)&&E(t)){const i=d,p=f.pop(),h=r.getListIndex(p);-1!==h&&(c[h].thatLine=i),u-=1,c[r.increment()]={dirUp:!0,depth:u,thisLine:i,thatLine:p,opcode:t,state:e,phraseIndex:n,phraseLength:s,lookAnchor:a,lookAround:o},d+=1}};this.toTree=function(e){const n=function(){function e(e,n){let r,a,o;if(n)switch(e.op={id:n.type,name:t.opcodeToString(n.type)},e.opData=void 0,n.type){case s.RNM:e.opData=b[n.index].name;break;case s.UDT:e.opData=T[n.index].name;break;case s.BKR:r=n.index<b.length?b[n.index].name:T[n.index-b.length].name,a=n.bkrCase===s.BKR_MODE_CI?"%i":"%s",o=n.bkrMode===s.BKR_MODE_UM?"%u":"%p",e.opData=`\\\\${a}${o}${r}`;break;case s.TLS:e.opData=[];for(let t=0;t<n.string.length;t+=1)e.opData.push(n.string[t]);break;case s.TBS:e.opData=[];for(let t=0;t<n.string.length;t+=1)e.opData.push(n.string[t]);break;case s.TRG:case s.REP:e.opData=[n.min,n.max];break;default:throw new Error("unrecognized opcode")}else e.op={id:void 0,name:void 0},e.opData=void 0}function n(t,e,n){return t===s.MATCH?{index:e,length:n}:t===s.NOMATCH||t===s.EMPTY?{index:e,length:0}:null}let a=-1;function o(r,s,o){const i={id:a++,branch:-1,parent:r,up:!1,down:!1,depth:o,children:[]};return s?(i.down=!0,i.state={id:s.state,name:t.stateToString(s.state)},i.phrase=null,e(i,s.opcode)):(i.state={id:void 0,name:void 0},i.phrase=n(),e(i,void 0)),i}function i(r,s){s&&(r.up=!0,r.state={id:s.state,name:t.stateToString(s.state)},r.phrase=n(s.state,s.phraseIndex,s.phraseLength),r.down||e(r,s.opcode))}let p=0,h=-1,l=1;const d=[];let f,g,S,C,m=!0;const L=o(null,null,-1);for(d.push(L),g=L,r.forEach((t=>{if(C=c[t],m&&(m=!1,C.depth>0)){const t=C.dirUp?C.depth+1:C.depth;for(let e=0;e<t;e+=1)S=g,g=o(g,null,e),d.push(g),S.children.push(g)}C.dirUp?(g=d.pop(),i(g,C),g=d[d.length-1]):(S=g,g=o(g,C,C.depth),d.push(g),S.children.push(g))}));d.length>1;)g=d.pop(),i(g,null);if(0===L.children.length)throw new Error("trace.toTree(): parse tree has no nodes");if(0===d.length)throw new Error("trace.toTree(): integrity check: dummy root node disappeared?");f=L.children[0];let E=f;for(;f&&!f.down&&!f.up;)E=f,f=f.children[0];f=E,f.leftMost=!0,f.rightMost=!0,function t(e){if(h+=1,e.branch=l,h>u&&(u=h),0===e.children.length)p+=1;else for(let n=0;n<e.children.length;n+=1)n>0&&(l+=1),e.children[n].leftMost=!1,e.children[n].rightMost=!1,e.leftMost&&(e.children[n].leftMost=0===n),e.rightMost&&(e.children[n].rightMost=n===e.children.length-1),t(e.children[n]);h-=1}(f),f.branch=0;const $={string:[]};for(let t=0;t<A.length;t+=1)$.string[t]=A[t];$.rules=[];for(let t=0;t<b.length;t+=1)$.rules[t]=b[t].name;$.udts=[];for(let t=0;t<T.length;t+=1)$.udts[t]=T[t].name;let N;return $.id={},$.id.ALT={id:s.ALT,name:"ALT"},$.id.CAT={id:s.CAT,name:"CAT"},$.id.REP={id:s.REP,name:"REP"},$.id.RNM={id:s.RNM,name:"RNM"},$.id.TLS={id:s.TLS,name:"TLS"},$.id.TBS={id:s.TBS,name:"TBS"},$.id.TRG={id:s.TRG,name:"TRG"},$.id.UDT={id:s.UDT,name:"UDT"},$.id.AND={id:s.AND,name:"AND"},$.id.NOT={id:s.NOT,name:"NOT"},$.id.BKR={id:s.BKR,name:"BKR"},$.id.BKA={id:s.BKA,name:"BKA"},$.id.BKN={id:s.BKN,name:"BKN"},$.id.ABG={id:s.ABG,name:"ABG"},$.id.AEN={id:s.AEN,name:"AEN"},$.id.ACTIVE={id:s.ACTIVE,name:"ACTIVE"},$.id.MATCH={id:s.MATCH,name:"MATCH"},$.id.EMPTY={id:s.EMPTY,name:"EMPTY"},$.id.NOMATCH={id:s.NOMATCH,name:"NOMATCH"},$.treeDepth=u,$.leafNodes=p,N=f.down?f.up?"none":"right":f.up?"left":"both",$.branchesIncomplete=N,$.tree=function t(e,n){let r;const s={};if(s.id=e.id,s.branch=e.branch,s.leftMost=e.leftMost,s.rightMost=e.rightMost,r=e.state.name?e.state.name:"ACTIVE",s.state={id:e.state.id,name:r},r=e.op.name?e.op.name:"?",s.op={id:e.op.id,name:r},"string"==typeof e.opData)s.opData=e.opData;else if(Array.isArray(e.opData)){s.opData=[];for(let t=0;t<e.opData.length;t+=1)s.opData[t]=e.opData[t]}else s.opData=void 0;e.phrase?s.phrase={index:e.phrase.index,length:e.phrase.length}:s.phrase=null,s.depth=e.depth,s.children=[];for(let r=0;r<e.children.length;r+=1)e.children.length,s.children[r]=t(e.children[r],n);return s}(f,f.depth),$}();return e?JSON.stringify(n):n},this.toHtmlPage=function(e,n,r){return t.htmlToPage(this.toHtml(e,n),r)};this.indent=function(t){let e="";for(let n=0;n<t;n+=1)e+=".";return e};const N=function(e,n,r,s,a){if(0===s)return"";let o="";const p=a?",":"";switch(e){case i:o=p+t.charsToHex(n,r,s);break;case 10:if(a)return`,${t.charsToDec(n,r,s)}`;o=p+t.charsToDec(n,r,s);break;case 32:o=t.charsToUnicode(n,r,s);break;default:o=t.charsToAsciiHtml(n,r,s)}return o},M=function(t,n,r,a,o,i){let c,h,l,d,u="",f=C;const A=`<span class="${e.CLASS_REMAINDER}">`,b="</span>";let T=!1;switch(r){case s.EMPTY:u+=L;case s.NOMATCH:case s.ACTIVE:c=a,h=0,l=a,d=n.length-l;break;case s.MATCH:c=a,h=o,l=a+h,d=n.length-l;break;default:throw new Error("unrecognized state")}return f=C,h>p?(h=p,f=m,d=0):h+d>p&&(f=m,d=p-h),h>0&&(u+=i,u+=N(t,n,c,h,T),u+=b,T=!0),d>0&&(u+=A,u+=N(t,n,l,d,T),u+=b),u+f},w=function(n){if(null===b)return"";let a,h,l,d,u,f,g="";return g+="<tr><th>(a)</th><th>(b)</th><th>(c)</th><th>(d)</th><th>(e)</th><th>(f)</th>",g+="<th>operator</th><th>phrase</th></tr>\n",r.forEach((r=>{const S=c[r];switch(a=S.thisLine,h=void 0!==S.thatLine?S.thatLine:"--",l=!1,d=!1,u=!1,S.lookAround===s.LOOKAROUND_AHEAD&&(l=!0,u=!0,f=S.lookAnchor),S.opcode.type!==s.AND&&S.opcode.type!==s.NOT||(l=!0,u=!0,f=S.phraseIndex),S.lookAround===s.LOOKAROUND_BEHIND&&(d=!0,u=!0,f=S.lookAnchor),S.opcode.type!==s.BKA&&S.opcode.type!==s.BKN||(d=!0,u=!0,f=S.phraseIndex),g+="<tr>",g+=`<td>${a}</td><td>${h}</td>`,g+=`<td>${S.phraseIndex}</td>`,g+=`<td>${S.phraseLength}</td>`,g+=`<td>${S.depth}</td>`,g+="<td>",S.state){case s.ACTIVE:g+=`<span class="${e.CLASS_ACTIVE}">&darr;&nbsp;</span>`;break;case s.MATCH:g+=`<span class="${e.CLASS_MATCH}">&uarr;M</span>`;break;case s.NOMATCH:g+=`<span class="${e.CLASS_NOMATCH}">&uarr;N</span>`;break;case s.EMPTY:g+=`<span class="${e.CLASS_EMPTY}">&uarr;E</span>`;break;default:g+=`<span class="${e.CLASS_ACTIVE}">--</span>`}if(g+="</td>",g+="<td>",g+=o.indent(S.depth),l?g+=`<span class="${e.CLASS_LOOKAHEAD}">`:d&&(g+=`<span class="${e.CLASS_LOOKBEHIND}">`),g+=t.opcodeToString(S.opcode.type),S.opcode.type===s.RNM&&(g+=`(${b[S.opcode.index].name}) `),S.opcode.type===s.BKR){const t=S.opcode.bkrCase===s.BKR_MODE_CI?"%i":"%s",e=S.opcode.bkrMode===s.BKR_MODE_UM?"%u":"%p";g+=`(\\${t}${e}${b[S.opcode.index].name}) `}S.opcode.type===s.UDT&&(g+=`(${T[S.opcode.index].name}) `),S.opcode.type===s.TRG&&(g+=`(${function(t,e){let n="";if(e.type===s.TRG)if(t===i||32===t){let r=e.min.toString(16).toUpperCase();r.length%2!=0&&(r=`0${r}`),n+=t===i?"%x":"U+",n+=r,r=e.max.toString(16).toUpperCase(),r.length%2!=0&&(r=`0${r}`),n+=`&ndash;${r}`}else n=`%d${e.min.toString(10)}&ndash;${e.max.toString(10)}`;return n}(n,S.opcode)}) `),S.opcode.type===s.TBS&&(g+=`(${function(t,e){let n="";if(e.type===s.TBS){const r=Math.min(e.string.length,10);if(t===i||32===t){n+=t===i?"%x":"U+";for(let t=0;t<r;t+=1){let r;t>0&&(n+="."),r=e.string[t].toString(16).toUpperCase(),r.length%2!=0&&(r=`0${r}`),n+=r}}else{n="%d";for(let t=0;t<r;t+=1)t>0&&(n+="."),n+=e.string[t].toString(10)}r<e.string.length&&(n+=m)}return n}(n,S.opcode)}) `),S.opcode.type===s.TLS&&(g+=`(${function(e,n){let r="";if(n.type===s.TLS){const s=Math.min(n.string.length,5);if(e===i||10===e){let t,a,o;e===i?(r="%x",o=16):(r="%d",o=10);for(let e=0;e<s;e+=1)e>0&&(r+="."),a=n.string[e],a>=97&&a<=122?(t=a-32,r+=`${t.toString(o)}/${a.toString(o)}`.toUpperCase()):a>=65&&a<=90?(t=a,a+=32,r+=`${t.toString(o)}/${a.toString(o)}`.toUpperCase()):r+=a.toString(o).toUpperCase();s<n.string.length&&(r+=m)}else{r='"';for(let e=0;e<s;e+=1)r+=t.asciiChars[n.string[e]];s<n.string.length&&(r+=m),r+='"'}}return r}(n,S.opcode)}) `),S.opcode.type===s.REP&&(g+=`(${function(t,e){let n="";if(e.type===s.REP)if(t===i){let t=e.min.toString(16).toUpperCase();t.length%2!=0&&(t=`0${t}`),n=`x${t}`,e.max<1/0?(t=e.max.toString(16).toUpperCase(),t.length%2!=0&&(t=`0${t}`)):t="inf",n+=`&ndash;${t}`}else n=e.max<1/0?`${e.min.toString(10)}&ndash;${e.max.toString(10)}`:`${e.min.toString(10)}&ndash;inf`;return n}(n,S.opcode)}) `),u&&(g+="</span>"),g+="</td>",g+="<td>",g+=d?function(t,n,r,a,o,i){let c,h,l,d,u="",f=C;const A=`<span class="${e.CLASS_LOOKBEHIND}">`,b=`<span class="${e.CLASS_REMAINDER}">`,T="</span>";let g=!1;switch(r){case s.EMPTY:u+=L;case s.NOMATCH:case s.MATCH:case s.ACTIVE:c=a-o,h=i-c,l=i,d=n.length-l;break;default:throw new Error("unrecognized state")}return f=C,h>p?(h=p,f=m,d=0):h+d>p&&(f=m,d=p-h),h>0&&(u+=A,u+=N(t,n,c,h,g),u+=T,g=!0),d>0&&(u+=b,u+=N(t,n,l,d,g),u+=T),u+f}(n,A,S.state,S.phraseIndex,S.phraseLength,f):l?function(t,n,r,s,a){const o=`<span class="${e.CLASS_LOOKAHEAD}">`;return M(t,n,r,s,a,o)}(n,A,S.state,S.phraseIndex,S.phraseLength):function(t,n,r,s,a){const o=`<span class="${e.CLASS_MATCH}">`;return M(t,n,r,s,a,o)}(n,A,S.state,S.phraseIndex,S.phraseLength),g+="</td></tr>\n"})),g+="<tr><th>(a)</th><th>(b)</th><th>(c)</th><th>(d)</th><th>(e)</th><th>(f)</th>",g+="<th>operator</th><th>phrase</th></tr>\n",g+="</table>\n",g};this.toHtml=function(t,n){let r=8;if("string"==typeof t&&t.length>=3){const e=t.toLowerCase().slice(0,3);"hex"===e?r=i:"dec"===e?r=10:"uni"===e&&(r=32)}let s="";return s+=function(t,n){let r;switch(t){case i:r="hexadecimal";break;case 10:r="decimal";break;case 8:r="ASCII";break;case 32:r="UNICODE";break;default:throw new Error(`${a}htmlHeader: unrecognized mode: ${t}`)}let s="";return s+=`<p>display mode: ${r}</p>\n`,s+=`<table class="${e.CLASS_TRACE}">\n`,"string"==typeof n&&(s+=`<caption>${n}</caption>`),s}(r,n),s+=w(r),s+=function(){let t="";return t+="</table>\n",t+=`<p class="${e.CLASS_MONOSPACE}">legend:<br>\n`,t+="(a)&nbsp;-&nbsp;line number<br>\n",t+="(b)&nbsp;-&nbsp;matching line number<br>\n",t+="(c)&nbsp;-&nbsp;phrase offset<br>\n",t+="(d)&nbsp;-&nbsp;phrase length<br>\n",t+="(e)&nbsp;-&nbsp;tree depth<br>\n",t+="(f)&nbsp;-&nbsp;operator state<br>\n",t+=`&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_ACTIVE}">&darr;</span>&nbsp;&nbsp;phrase opened<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_MATCH}">&uarr;M</span> phrase matched<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_EMPTY}">&uarr;E</span> empty phrase matched<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_NOMATCH}">&uarr;N</span> phrase not matched<br>\n`,t+="operator&nbsp;-&nbsp;ALT, CAT, REP, RNM, TRG, TLS, TBS<sup>&dagger;</sup>, UDT, AND, NOT, BKA, BKN, BKR, ABG, AEN<sup>&Dagger;</sup><br>\n",t+="phrase&nbsp;&nbsp;&nbsp;-&nbsp;up to 80 characters of the phrase being matched<br>\n",t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_MATCH}">matched characters</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_LOOKAHEAD}">matched characters in look ahead mode</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_LOOKBEHIND}">matched characters in look behind mode</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_REMAINDER}">remainder characters(not yet examined by parser)</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_CTRLCHAR}">control characters, TAB, LF, CR, etc. (ASCII mode only)</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${L} empty string<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${C} end of input string<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${m} input string display truncated<br>\n`,t+="</p>\n",t+=`<p class="${e.CLASS_MONOSPACE}">\n`,t+="<sup>&dagger;</sup>original ABNF operators:<br>\n",t+="ALT - alternation<br>\n",t+="CAT - concatenation<br>\n",t+="REP - repetition<br>\n",t+="RNM - rule name<br>\n",t+="TRG - terminal range<br>\n",t+="TLS - terminal literal string (case insensitive)<br>\n",t+="TBS - terminal binary string (case sensitive)<br>\n",t+="<br>\n",t+="<sup>&Dagger;</sup>super set SABNF operators:<br>\n",t+="UDT - user-defined terminal<br>\n",t+="AND - positive look ahead<br>\n",t+="NOT - negative look ahead<br>\n",t+="BKA - positive look behind<br>\n",t+="BKN - negative look behind<br>\n",t+="BKR - back reference<br>\n",t+="ABG - anchor - begin of input string<br>\n",t+="AEN - anchor - end of input string<br>\n",t+="</p>\n",t}(),s}}},11603:function(t,e,n){const r=n(1123),s=n(67926),a=n(19802),o=n(62086),i="utilities.js: ",p=function(t,e,n){let r,s=e;for(;;){if(t<=0){s=0,r=0;break}if("number"!=typeof s){s=0,r=t;break}if(s>=t){s=t,r=t;break}if("number"!=typeof n){r=t;break}if(r=s+n,r>t){r=t;break}break}return{beg:s,end:r}};e.htmlToPage=function(t,e){let n;if("string"!=typeof t)throw new Error(`${i}htmlToPage: input HTML is not a string`);n="string"!=typeof e?"htmlToPage":e;let r="";return r+="<!DOCTYPE html>\n",r+='<html lang="en">\n',r+="<head>\n",r+='<meta charset="utf-8">\n',r+=`<title>${n}</title>\n`,r+="<style>\n",r+=a(),r+="</style>\n",r+="</head>\n<body>\n",r+=`<p>${new Date}</p>\n`,r+=t,r+="</body>\n</html>\n",r},e.parserResultToHtml=function(t,e){let n,s,a=null;"string"==typeof e&&""!==e&&(a=e),n=!0===t.success?`<span class="${r.CLASS_MATCH}">true</span>`:`<span class="${r.CLASS_NOMATCH}">false</span>`,s=t.state===o.EMPTY?`<span class="${r.CLASS_EMPTY}">EMPTY</span>`:t.state===o.MATCH?`<span class="${r.CLASS_MATCH}">MATCH</span>`:t.state===o.NOMATCH?`<span class="${r.CLASS_NOMATCH}">NOMATCH</span>`:`<span class="${r.CLASS_NOMATCH}">unrecognized</span>`;let i="";return i+=`<table class="${r.CLASS_STATE}">\n`,a&&(i+=`<caption>${a}</caption>\n`),i+="<tr><th>state item</th><th>value</th><th>description</th></tr>\n",i+=`<tr><td>parser success</td><td>${n}</td>\n`,i+=`<td><span class="${r.CLASS_MATCH}">true</span> if the parse succeeded,\n`,i+=` <span class="${r.CLASS_NOMATCH}">false</span> otherwise`,i+="<br><i>NOTE: for success, entire string must be matched</i></td></tr>\n",i+=`<tr><td>parser state</td><td>${s}</td>\n`,i+=`<td><span class="${r.CLASS_EMPTY}">EMPTY</span>, `,i+=`<span class="${r.CLASS_MATCH}">MATCH</span> or \n`,i+=`<span class="${r.CLASS_NOMATCH}">NOMATCH</span></td></tr>\n`,i+=`<tr><td>string length</td><td>${t.length}</td><td>length of the input (sub)string</td></tr>\n`,i+=`<tr><td>matched length</td><td>${t.matched}</td><td>number of input string characters matched</td></tr>\n`,i+=`<tr><td>max matched</td><td>${t.maxMatched}</td><td>maximum number of input string characters matched</td></tr>\n`,i+=`<tr><td>max tree depth</td><td>${t.maxTreeDepth}</td><td>maximum depth of the parse tree reached</td></tr>\n`,i+=`<tr><td>node hits</td><td>${t.nodeHits}</td><td>number of parse tree node hits (opcode function calls)</td></tr>\n`,i+=`<tr><td>input length</td><td>${t.inputLength}</td><td>length of full input string</td></tr>\n`,i+=`<tr><td>sub-string begin</td><td>${t.subBegin}</td><td>sub-string first character index</td></tr>\n`,i+=`<tr><td>sub-string end</td><td>${t.subEnd}</td><td>sub-string end-of-string index</td></tr>\n`,i+=`<tr><td>sub-string length</td><td>${t.subLength}</td><td>sub-string length</td></tr>\n`,i+="</table>\n",i},e.charsToString=function(t,e,n){let r,a;if("number"==typeof e){if(e>=t.length)return"";r=e<0?0:e}else r=0;if("number"==typeof n){if(n<=0)return"";a=n>t.length-r?t.length:r+n}else a=t.length;return r<a?s.encode("UTF16LE",t.slice(r,a)).toString("utf16le"):""},e.stringToChars=function(t){return s.decode("STRING",t)},e.opcodeToString=function(t){let e="unknown";switch(t){case o.ALT:e="ALT";break;case o.CAT:e="CAT";break;case o.RNM:e="RNM";break;case o.UDT:e="UDT";break;case o.AND:e="AND";break;case o.NOT:e="NOT";break;case o.REP:e="REP";break;case o.TRG:e="TRG";break;case o.TBS:e="TBS";break;case o.TLS:e="TLS";break;case o.BKR:e="BKR";break;case o.BKA:e="BKA";break;case o.BKN:e="BKN";break;case o.ABG:e="ABG";break;case o.AEN:e="AEN";break;default:throw new Error("unrecognized opcode")}return e},e.stateToString=function(t){let e="unknown";switch(t){case o.ACTIVE:e="ACTIVE";break;case o.MATCH:e="MATCH";break;case o.EMPTY:e="EMPTY";break;case o.NOMATCH:e="NOMATCH";break;default:throw new Error("unrecognized state")}return e},e.asciiChars=["NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","TAB","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","&nbsp;","!","&#34;","#","$","%","&#38;","&#39;","(",")","*","+",",","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","&#60;","=","&#62;","?","@","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","[","&#92;","]","^","_","`","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","{","|","}","~","DEL"],e.charToHex=function(t){let e=t.toString(16).toUpperCase();switch(e.length){case 1:case 3:case 7:e=`0${e}`;break;case 2:case 6:e=`00${e}`;break;case 4:break;case 5:e=`000${e}`;break;default:throw new Error("unrecognized option")}return e},e.charsToDec=function(t,e,n){let r="";if(!Array.isArray(t))throw new Error(`${i}charsToDec: input must be an array of integers`);const s=p(t.length,e,n);if(s.end>s.beg){r+=t[s.beg];for(let e=s.beg+1;e<s.end;e+=1)r+=`,${t[e]}`}return r},e.charsToHex=function(t,n,r){let s="";if(!Array.isArray(t))throw new Error(`${i}charsToHex: input must be an array of integers`);const a=p(t.length,n,r);if(a.end>a.beg){s+=`\\x${e.charToHex(t[a.beg])}`;for(let n=a.beg+1;n<a.end;n+=1)s+=`,\\x${e.charToHex(t[n])}`}return s},e.charsToHtmlEntities=function(t,e,n){let r="";if(!Array.isArray(t))throw new Error(`${i}charsToHex: input must be an array of integers`);const s=p(t.length,e,n);if(s.end>s.beg)for(let e=s.beg;e<s.end;e+=1)r+=`&#x${t[e].toString(16)};`;return r},e.charsToUnicode=function(t,n,r){let s="";if(!Array.isArray(t))throw new Error(`${i}charsToUnicode: input must be an array of integers`);const a=p(t.length,n,r);if(a.end>a.beg)for(let n=a.beg;n<a.end;n+=1)s+=(o=t[n])>=55296&&o<=57343||o>1114111?` U+${e.charToHex(t[n])}`:`&#${t[n]};`;var o;return s},e.charsToJsUnicode=function(t,n,r){let s="";if(!Array.isArray(t))throw new Error(`${i}charsToJsUnicode: input must be an array of integers`);const a=p(t.length,n,r);if(a.end>a.beg){s+=`\\u${e.charToHex(t[a.beg])}`;for(let n=a.beg+1;n<a.end;n+=1)s+=`,\\u${e.charToHex(t[n])}`}return s},e.charsToAscii=function(t,n,r){let s="";if(!Array.isArray(t))throw new Error(`${i}charsToAscii: input must be an array of integers`);const a=p(t.length,n,r);for(let n=a.beg;n<a.end;n+=1){const r=t[n];s+=r>=32&&r<=126?String.fromCharCode(r):`\\x${e.charToHex(r)}`}return s},e.charsToAsciiHtml=function(t,n,s){if(!Array.isArray(t))throw new Error(`${i}charsToAsciiHtml: input must be an array of integers`);let a,o="";const c=p(t.length,n,s);for(let n=c.beg;n<c.end;n+=1)a=t[n],o+=a<32||127===a?`<span class="${r.CLASS_CTRLCHAR}">${e.asciiChars[a]}</span>`:a>127?`<span class="${r.CLASS_CTRLCHAR}">U+${e.charToHex(a)}</span>`:e.asciiChars[a];return o},e.stringToAsciiHtml=function(t){const e=s.decode("STRING",t);return this.charsToAsciiHtml(e)}},55891:function(t){"use strict";for(var e="qpzry9x8gf2tvdw0s3jn54khce6mua7l",n={},r=0;r<32;r++){var s=e.charAt(r);if(void 0!==n[s])throw new TypeError(s+" is ambiguous");n[s]=r}function a(t){var e=t>>25;return(33554431&t)<<5^996825010&-(1&e)^642813549&-(e>>1&1)^513874426&-(e>>2&1)^1027748829&-(e>>3&1)^705979059&-(e>>4&1)}function o(t){for(var e=1,n=0;n<t.length;++n){var r=t.charCodeAt(n);if(r<33||r>126)return"Invalid prefix ("+t+")";e=a(e)^r>>5}for(e=a(e),n=0;n<t.length;++n){var s=t.charCodeAt(n);e=a(e)^31&s}return e}function i(t,e){if(e=e||90,t.length<8)return t+" too short";if(t.length>e)return"Exceeds length limit";var r=t.toLowerCase(),s=t.toUpperCase();if(t!==r&&t!==s)return"Mixed-case string "+t;var i=(t=r).lastIndexOf("1");if(-1===i)return"No separator character for "+t;if(0===i)return"Missing prefix for "+t;var p=t.slice(0,i),c=t.slice(i+1);if(c.length<6)return"Data too short";var h=o(p);if("string"==typeof h)return h;for(var l=[],d=0;d<c.length;++d){var u=c.charAt(d),f=n[u];if(void 0===f)return"Unknown character "+u;h=a(h)^f,d+6>=c.length||l.push(f)}return 1!==h?"Invalid checksum for "+t:{prefix:p,words:l}}function p(t,e,n,r){for(var s=0,a=0,o=(1<<n)-1,i=[],p=0;p<t.length;++p)for(s=s<<e|t[p],a+=e;a>=n;)a-=n,i.push(s>>a&o);if(r)a>0&&i.push(s<<n-a&o);else{if(a>=e)return"Excess padding";if(s<<n-a&o)return"Non-zero padding"}return i}t.exports={decodeUnsafe:function(){var t=i.apply(null,arguments);if("object"==typeof t)return t},decode:function(t){var e=i.apply(null,arguments);if("object"==typeof e)return e;throw new Error(e)},encode:function(t,n,r){if(r=r||90,t.length+7+n.length>r)throw new TypeError("Exceeds length limit");var s=o(t=t.toLowerCase());if("string"==typeof s)throw new Error(s);for(var i=t+"1",p=0;p<n.length;++p){var c=n[p];if(c>>5)throw new Error("Non 5-bit word");s=a(s)^c,i+=e.charAt(c)}for(p=0;p<6;++p)s=a(s);for(s^=1,p=0;p<6;++p){i+=e.charAt(s>>5*(5-p)&31)}return i},toWordsUnsafe:function(t){var e=p(t,8,5,!0);if(Array.isArray(e))return e},toWords:function(t){var e=p(t,8,5,!0);if(Array.isArray(e))return e;throw new Error(e)},fromWordsUnsafe:function(t){var e=p(t,5,8,!1);if(Array.isArray(e))return e},fromWords:function(t){var e=p(t,5,8,!1);if(Array.isArray(e))return e;throw new Error(e)}}}}]);
//# sourceMappingURL=7989-437a3c52f39b7e7c.js.map