"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9013],{94136:function(e,t,n){n.d(t,{a:function(){return d}});var i=n(37125),a=n(95320),s=n(54810),c=n(64225),r=n(39321),o=n(19371),h=n(59540);function d(e){const t=e.isNewChainsStale??!0;let u,l;let m,w,g,p,C,v;return(0,i.K)((i=>({id:"walletConnect",name:"WalletConnect",type:d.type,async setup(){const e=await this.getProvider().catch((()=>null));e&&(g||(g=this.onConnect.bind(this),e.on("connect",g)),C||(C=this.onSessionDelete.bind(this),e.on("session_delete",C)))},async connect({chainId:e,...t}={}){try{const n=await this.getProvider();if(!n)throw new a.M;p||(p=this.onDisplayUri,n.on("display_uri",p));let s=e;if(!s){const e=await(i.storage?.getItem("state"))??{},t=i.chains.some((t=>t.id===e.chainId));s=t?e.chainId:i.chains[0]?.id}if(!s)throw new Error("No chains found on connector.");const c=await this.isChainsStale();if(n.session&&c&&await n.disconnect(),!n.session||c){const e=i.chains.filter((e=>e.id!==s)).map((e=>e.id));await n.connect({optionalChains:[s,...e],..."pairingTopic"in t?{pairingTopic:t.pairingTopic}:{}}),this.setRequestedChainsIds(i.chains.map((e=>e.id)))}const o=(await n.enable()).map((e=>(0,r.K)(e))),h=await this.getChainId();return p&&(n.removeListener("display_uri",p),p=void 0),g&&(n.removeListener("connect",g),g=void 0),m||(m=this.onAccountsChanged.bind(this),n.on("accountsChanged",m)),w||(w=this.onChainChanged.bind(this),n.on("chainChanged",w)),v||(v=this.onDisconnect.bind(this),n.on("disconnect",v)),C||(C=this.onSessionDelete.bind(this),n.on("session_delete",C)),{accounts:o,chainId:h}}catch(e){if(/(user rejected|connection request reset)/i.test(e?.message))throw new o.ab(e);throw e}},async disconnect(){const e=await this.getProvider();try{await(e?.disconnect())}catch(e){if(!/No matching key/i.test(e.message))throw e}finally{w&&(e?.removeListener("chainChanged",w),w=void 0),v&&(e?.removeListener("disconnect",v),v=void 0),g||(g=this.onConnect.bind(this),e?.on("connect",g)),m&&(e?.removeListener("accountsChanged",m),m=void 0),C&&(e?.removeListener("session_delete",C),C=void 0),this.setRequestedChainsIds([])}},async getAccounts(){return(await this.getProvider()).accounts.map((e=>(0,r.K)(e)))},async getProvider({chainId:t}={}){return u||(l||(l=async function(){const t=i.chains.map((e=>e.id));if(!t.length)return;const{EthereumProvider:a}=await Promise.all([n.e(8931),n.e(1790),n.e(7204),n.e(8552),n.e(6522),n.e(1229),n.e(3075)]).then(n.bind(n,61510));return await a.init({...e,disableProviderPing:!0,optionalChains:t,projectId:e.projectId,rpcMap:Object.fromEntries(i.chains.map((e=>{const[t]=(0,s.N)({chain:e,transports:i.transports});return[e.id,t]}))),showQrModal:e.showQrModal??!0})}()),u=await l,u?.events.setMaxListeners(Number.POSITIVE_INFINITY)),t&&await(this.switchChain?.({chainId:t})),u},async getChainId(){return(await this.getProvider()).chainId},async isAuthorized(){try{const[e,t]=await Promise.all([this.getAccounts(),this.getProvider()]);if(!e.length)return!1;return!await this.isChainsStale()||!t.session||(await t.disconnect().catch((()=>{})),!1)}catch{return!1}},async switchChain({addEthereumChainParameter:e,chainId:t}){const n=await this.getProvider();if(!n)throw new a.M;const s=i.chains.find((e=>e.id===t));if(!s)throw new o.x3(new c.X4);try{await Promise.all([new Promise((e=>{const n=({chainId:a})=>{a===t&&(i.emitter.off("change",n),e())};i.emitter.on("change",n)})),n.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,h.eC)(t)}]})]);const e=await this.getRequestedChainsIds();return this.setRequestedChainsIds([...e,t]),s}catch(i){const a=i;if(/(user rejected)/i.test(a.message))throw new o.ab(a);try{let i,a;i=e?.blockExplorerUrls?e.blockExplorerUrls:s.blockExplorers?.default.url?[s.blockExplorers?.default.url]:[],a=e?.rpcUrls?.length?e.rpcUrls:[...s.rpcUrls.default.http];const c={blockExplorerUrls:i,chainId:(0,h.eC)(t),chainName:e?.chainName??s.name,iconUrls:e?.iconUrls,nativeCurrency:e?.nativeCurrency??s.nativeCurrency,rpcUrls:a};await n.request({method:"wallet_addEthereumChain",params:[c]});const r=await this.getRequestedChainsIds();return this.setRequestedChainsIds([...r,t]),s}catch(e){throw new o.ab(e)}}},onAccountsChanged(e){0===e.length?this.onDisconnect():i.emitter.emit("change",{accounts:e.map((e=>(0,r.K)(e)))})},onChainChanged(e){const t=Number(e);i.emitter.emit("change",{chainId:t})},async onConnect(e){const t=Number(e.chainId),n=await this.getAccounts();i.emitter.emit("connect",{accounts:n,chainId:t})},async onDisconnect(e){this.setRequestedChainsIds([]),i.emitter.emit("disconnect");const t=await this.getProvider();m&&(t.removeListener("accountsChanged",m),m=void 0),w&&(t.removeListener("chainChanged",w),w=void 0),v&&(t.removeListener("disconnect",v),v=void 0),C&&(t.removeListener("session_delete",C),C=void 0),g||(g=this.onConnect.bind(this),t.on("connect",g))},onDisplayUri(e){i.emitter.emit("message",{type:"display_uri",data:e})},onSessionDelete(){this.onDisconnect()},getNamespaceChainsIds(){if(!u)return[];const e=u.session?.namespaces.eip155?.accounts?.map((e=>Number.parseInt(e.split(":")[1]||"")));return e??[]},async getRequestedChainsIds(){return await(i.storage?.getItem(this.requestedChainsStorageKey))??[]},async isChainsStale(){if(!t)return!1;const e=i.chains.map((e=>e.id)),n=this.getNamespaceChainsIds();if(n.length&&!n.some((t=>e.includes(t))))return!1;const a=await this.getRequestedChainsIds();return!e.every((e=>a.includes(e)))},async setRequestedChainsIds(e){await(i.storage?.setItem(this.requestedChainsStorageKey,e))},get requestedChainsStorageKey(){return`${this.id}.requestedChains`}})))}d.type="walletConnect"},49122:function(e,t,n){n.d(t,{D:function(){return o}});var i=n(56440),a=n(71621),s=n(39321),c=n(19371),r=n(59540);function o(e={}){return"3"===e.version||e.headlessMode?function(e){const t=!1;let h,d,u,l,m;return(0,i.K)((i=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",type:o.type,async connect({chainId:e}={}){try{const t=await this.getProvider(),n=(await t.request({method:"eth_requestAccounts"})).map((e=>(0,s.K)(e)));u||(u=this.onAccountsChanged.bind(this),t.on("accountsChanged",u)),l||(l=this.onChainChanged.bind(this),t.on("chainChanged",l)),m||(m=this.onDisconnect.bind(this),t.on("disconnect",m));let i=await this.getChainId();if(e&&i!==e){const t=await this.switchChain({chainId:e}).catch((e=>{if(e.code===c.ab.code)throw e;return{id:i}}));i=t?.id??i}return{accounts:n,chainId:i}}catch(e){if(/(user closed modal|accounts received is empty|user denied account)/i.test(e.message))throw new c.ab(e);throw e}},async disconnect(){const e=await this.getProvider();u&&(e.removeListener("accountsChanged",u),u=void 0),l&&(e.removeListener("chainChanged",l),l=void 0),m&&(e.removeListener("disconnect",m),m=void 0),e.disconnect(),e.close()},async getAccounts(){const e=await this.getProvider();return(await e.request({method:"eth_accounts"})).map((e=>(0,s.K)(e)))},async getChainId(){const e=await this.getProvider(),t=await e.request({method:"eth_chainId"});return Number(t)},async getProvider(){if(!d){const a=await(async()=>{const{default:e}=await Promise.all([n.e(208),n.e(7322),n.e(9699),n.e(7531),n.e(3718),n.e(8944),n.e(1232),n.e(6657),n.e(6577),n.e(3071),n.e(1690),n.e(7986),n.e(2143),n.e(9931),n.e(2540),n.e(4222),n.e(75),n.e(8294),n.e(301),n.e(7872)]).then(n.t.bind(n,10223,19));return"function"!=typeof e&&"function"==typeof e.default?e.default:e})();h=new a({...e,reloadOnDisconnect:t});const s=h.walletExtension?.getChainId(),c=i.chains.find((t=>e.chainId?t.id===e.chainId:t.id===s))||i.chains[0],r=e.chainId||c?.id,o=e.jsonRpcUrl||c?.rpcUrls.default.http[0];d=h.makeWeb3Provider(o,r)}return d},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:e,chainId:t}){const n=i.chains.find((e=>e.id===t));if(!n)throw new c.x3(new a.X4);const s=await this.getProvider();try{return await s.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,r.eC)(n.id)}]}),n}catch(i){if(4902===i.code)try{let i,a;i=e?.blockExplorerUrls?e.blockExplorerUrls:n.blockExplorers?.default.url?[n.blockExplorers?.default.url]:[],a=e?.rpcUrls?.length?e.rpcUrls:[n.rpcUrls.default?.http[0]??""];const c={blockExplorerUrls:i,chainId:(0,r.eC)(t),chainName:e?.chainName??n.name,iconUrls:e?.iconUrls,nativeCurrency:e?.nativeCurrency??n.nativeCurrency,rpcUrls:a};return await s.request({method:"wallet_addEthereumChain",params:[c]}),n}catch(e){throw new c.ab(e)}throw new c.x3(i)}},onAccountsChanged(e){0===e.length?this.onDisconnect():i.emitter.emit("change",{accounts:e.map((e=>(0,s.K)(e)))})},onChainChanged(e){const t=Number(e);i.emitter.emit("change",{chainId:t})},async onDisconnect(e){i.emitter.emit("disconnect");const t=await this.getProvider();u&&(t.removeListener("accountsChanged",u),u=void 0),l&&(t.removeListener("chainChanged",l),l=void 0),m&&(t.removeListener("disconnect",m),m=void 0)}})))}(e):function(e){let t,h,d,u;return(0,i.K)((i=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:o.type,async connect({chainId:e,...t}={}){try{const n=await this.getProvider(),i=(await n.request({method:"eth_requestAccounts",params:"instantOnboarding"in t&&t.instantOnboarding?[{onboarding:"instant"}]:[]})).map((e=>(0,s.K)(e)));h||(h=this.onAccountsChanged.bind(this),n.on("accountsChanged",h)),d||(d=this.onChainChanged.bind(this),n.on("chainChanged",d)),u||(u=this.onDisconnect.bind(this),n.on("disconnect",u));let a=await this.getChainId();if(e&&a!==e){const t=await this.switchChain({chainId:e}).catch((e=>{if(e.code===c.ab.code)throw e;return{id:a}}));a=t?.id??a}return{accounts:i,chainId:a}}catch(e){if(/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(e.message))throw new c.ab(e);throw e}},async disconnect(){const e=await this.getProvider();h&&(e.removeListener("accountsChanged",h),h=void 0),d&&(e.removeListener("chainChanged",d),d=void 0),u&&(e.removeListener("disconnect",u),u=void 0),e.disconnect(),e.close?.()},async getAccounts(){const e=await this.getProvider();return(await e.request({method:"eth_accounts"})).map((e=>(0,s.K)(e)))},async getChainId(){const e=await this.getProvider(),t=await e.request({method:"eth_chainId"});return Number(t)},async getProvider(){if(!t){const a="string"==typeof e.preference?{options:e.preference}:{...e.preference,options:e.preference?.options??"all"},{createCoinbaseWalletSDK:s}=await Promise.all([n.e(8998),n.e(6492),n.e(4835),n.e(6530),n.e(3327),n.e(3966),n.e(4960)]).then(n.bind(n,55709)),c=s({...e,appChainIds:i.chains.map((e=>e.id)),preference:a});t=c.getProvider()}return t},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:e,chainId:t}){const n=i.chains.find((e=>e.id===t));if(!n)throw new c.x3(new a.X4);const s=await this.getProvider();try{return await s.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,r.eC)(n.id)}]}),n}catch(i){if(4902===i.code)try{let i,a;i=e?.blockExplorerUrls?e.blockExplorerUrls:n.blockExplorers?.default.url?[n.blockExplorers?.default.url]:[],a=e?.rpcUrls?.length?e.rpcUrls:[n.rpcUrls.default?.http[0]??""];const c={blockExplorerUrls:i,chainId:(0,r.eC)(t),chainName:e?.chainName??n.name,iconUrls:e?.iconUrls,nativeCurrency:e?.nativeCurrency??n.nativeCurrency,rpcUrls:a};return await s.request({method:"wallet_addEthereumChain",params:[c]}),n}catch(e){throw new c.ab(e)}throw new c.x3(i)}},onAccountsChanged(e){0===e.length?this.onDisconnect():i.emitter.emit("change",{accounts:e.map((e=>(0,s.K)(e)))})},onChainChanged(e){const t=Number(e);i.emitter.emit("change",{chainId:t})},async onDisconnect(e){i.emitter.emit("disconnect");const t=await this.getProvider();h&&(t.removeListener("accountsChanged",h),h=void 0),d&&(t.removeListener("chainChanged",d),d=void 0),u&&(t.removeListener("disconnect",u),u=void 0)}})))}(e)}o.type="coinbaseWallet"}}]);
//# sourceMappingURL=9013-4064a97b8020afb4.js.map