"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1013],{17266:function(t,r,e){e.d(r,{i:function(){return i}});const i="bignumber/5.7.0"},81815:function(t,r,e){e.d(r,{O$:function(){return c},Zm:function(){return f},g$:function(){return x},t2:function(){return N}});var i=e(20824),n=e.n(i),o=e(79527),s=e(36919),u=e(17266),a=n().BN;const m=new s.Logger(u.i),l={},h=9007199254740991;function f(t){return null!=t&&(c.isBigNumber(t)||"number"==typeof t&&t%1==0||"string"==typeof t&&!!t.match(/^-?[0-9]+$/)||(0,o.isHexString)(t)||"bigint"==typeof t||(0,o.isBytes)(t))}let g=!1;class c{constructor(t,r){t!==l&&m.throwError("cannot call constructor directly; use BigNumber.from",s.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=r,this._isBigNumber=!0,Object.freeze(this)}fromTwos(t){return w(b(this).fromTwos(t))}toTwos(t){return w(b(this).toTwos(t))}abs(){return"-"===this._hex[0]?c.from(this._hex.substring(1)):this}add(t){return w(b(this).add(b(t)))}sub(t){return w(b(this).sub(b(t)))}div(t){return c.from(t).isZero()&&v("division-by-zero","div"),w(b(this).div(b(t)))}mul(t){return w(b(this).mul(b(t)))}mod(t){const r=b(t);return r.isNeg()&&v("division-by-zero","mod"),w(b(this).umod(r))}pow(t){const r=b(t);return r.isNeg()&&v("negative-power","pow"),w(b(this).pow(r))}and(t){const r=b(t);return(this.isNegative()||r.isNeg())&&v("unbound-bitwise-result","and"),w(b(this).and(r))}or(t){const r=b(t);return(this.isNegative()||r.isNeg())&&v("unbound-bitwise-result","or"),w(b(this).or(r))}xor(t){const r=b(t);return(this.isNegative()||r.isNeg())&&v("unbound-bitwise-result","xor"),w(b(this).xor(r))}mask(t){return(this.isNegative()||t<0)&&v("negative-width","mask"),w(b(this).maskn(t))}shl(t){return(this.isNegative()||t<0)&&v("negative-width","shl"),w(b(this).shln(t))}shr(t){return(this.isNegative()||t<0)&&v("negative-width","shr"),w(b(this).shrn(t))}eq(t){return b(this).eq(b(t))}lt(t){return b(this).lt(b(t))}lte(t){return b(this).lte(b(t))}gt(t){return b(this).gt(b(t))}gte(t){return b(this).gte(b(t))}isNegative(){return"-"===this._hex[0]}isZero(){return b(this).isZero()}toNumber(){try{return b(this).toNumber()}catch(t){v("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(t){}return m.throwError("this platform does not support BigInt",s.Logger.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(10===arguments[0]?g||(g=!0,m.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):16===arguments[0]?m.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",s.Logger.errors.UNEXPECTED_ARGUMENT,{}):m.throwError("BigNumber.toString does not accept parameters",s.Logger.errors.UNEXPECTED_ARGUMENT,{})),b(this).toString(10)}toHexString(){return this._hex}toJSON(t){return{type:"BigNumber",hex:this.toHexString()}}static from(t){if(t instanceof c)return t;if("string"==typeof t)return t.match(/^-?0x[0-9a-f]+$/i)?new c(l,d(t)):t.match(/^-?[0-9]+$/)?new c(l,d(new a(t))):m.throwArgumentError("invalid BigNumber string","value",t);if("number"==typeof t)return t%1&&v("underflow","BigNumber.from",t),(t>=h||t<=-h)&&v("overflow","BigNumber.from",t),c.from(String(t));const r=t;if("bigint"==typeof r)return c.from(r.toString());if((0,o.isBytes)(r))return c.from((0,o.hexlify)(r));if(r)if(r.toHexString){const t=r.toHexString();if("string"==typeof t)return c.from(t)}else{let t=r._hex;if(null==t&&"BigNumber"===r.type&&(t=r.hex),"string"==typeof t&&((0,o.isHexString)(t)||"-"===t[0]&&(0,o.isHexString)(t.substring(1))))return c.from(t)}return m.throwArgumentError("invalid BigNumber value","value",t)}static isBigNumber(t){return!(!t||!t._isBigNumber)}}function d(t){if("string"!=typeof t)return d(t.toString(16));if("-"===t[0])return"-"===(t=t.substring(1))[0]&&m.throwArgumentError("invalid hex","value",t),"0x00"===(t=d(t))?t:"-"+t;if("0x"!==t.substring(0,2)&&(t="0x"+t),"0x"===t)return"0x00";for(t.length%2&&(t="0x0"+t.substring(2));t.length>4&&"0x00"===t.substring(0,4);)t="0x"+t.substring(4);return t}function w(t){return c.from(d(t))}function b(t){const r=c.from(t).toHexString();return"-"===r[0]?new a("-"+r.substring(3),16):new a(r.substring(2),16)}function v(t,r,e){const i={fault:t,operation:r};return null!=e&&(i.value=e),m.throwError(t,s.Logger.errors.NUMERIC_FAULT,i)}function x(t){return new a(t,36).toString(16)}function N(t){return new a(t,16).toString(36)}},21013:function(t,r,e){e.d(r,{Ox:function(){return d},S5:function(){return c},xs:function(){return b}});var i=e(79527),n=e(36919),o=e(17266),s=e(81815);const u=new n.Logger(o.i),a={},m=s.O$.from(0),l=s.O$.from(-1);function h(t,r,e,i){const o={fault:r,operation:e};return void 0!==i&&(o.value=i),u.throwError(t,n.Logger.errors.NUMERIC_FAULT,o)}let f="0";for(;f.length<256;)f+=f;function g(t){if("number"!=typeof t)try{t=s.O$.from(t).toNumber()}catch(t){}return"number"==typeof t&&t>=0&&t<=256&&!(t%1)?"1"+f.substring(0,t):u.throwArgumentError("invalid decimal size","decimals",t)}function c(t,r){null==r&&(r=0);const e=g(r),i=(t=s.O$.from(t)).lt(m);i&&(t=t.mul(l));let n=t.mod(e).toString();for(;n.length<e.length-1;)n="0"+n;n=n.match(/^([0-9]*[1-9]|0)(0*)/)[1];const o=t.div(e).toString();return t=1===e.length?o:o+"."+n,i&&(t="-"+t),t}function d(t,r){null==r&&(r=0);const e=g(r);"string"==typeof t&&t.match(/^-?[0-9.]+$/)||u.throwArgumentError("invalid decimal value","value",t);const i="-"===t.substring(0,1);i&&(t=t.substring(1)),"."===t&&u.throwArgumentError("missing value","value",t);const n=t.split(".");n.length>2&&u.throwArgumentError("too many decimal points","value",t);let o=n[0],a=n[1];for(o||(o="0"),a||(a="0");"0"===a[a.length-1];)a=a.substring(0,a.length-1);for(a.length>e.length-1&&h("fractional component exceeds decimals","underflow","parseFixed"),""===a&&(a="0");a.length<e.length-1;)a+="0";const m=s.O$.from(o),f=s.O$.from(a);let c=m.mul(e).add(f);return i&&(c=c.mul(l)),c}class w{constructor(t,r,e,i){t!==a&&u.throwError("cannot use FixedFormat constructor; use FixedFormat.from",n.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=r,this.width=e,this.decimals=i,this.name=(r?"":"u")+"fixed"+String(e)+"x"+String(i),this._multiplier=g(i),Object.freeze(this)}static from(t){if(t instanceof w)return t;"number"==typeof t&&(t=`fixed128x${t}`);let r=!0,e=128,i=18;if("string"==typeof t)if("fixed"===t);else if("ufixed"===t)r=!1;else{const n=t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);n||u.throwArgumentError("invalid fixed format","format",t),r="u"!==n[1],e=parseInt(n[2]),i=parseInt(n[3])}else if(t){const n=(r,e,i)=>null==t[r]?i:(typeof t[r]!==e&&u.throwArgumentError("invalid fixed format ("+r+" not "+e+")","format."+r,t[r]),t[r]);r=n("signed","boolean",r),e=n("width","number",e),i=n("decimals","number",i)}return e%8&&u.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",e),i>80&&u.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",i),new w(a,r,e,i)}}class b{constructor(t,r,e,i){t!==a&&u.throwError("cannot use FixedNumber constructor; use FixedNumber.from",n.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=i,this._hex=r,this._value=e,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(t){this.format.name!==t.format.name&&u.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",t)}addUnsafe(t){this._checkFormat(t);const r=d(this._value,this.format.decimals),e=d(t._value,t.format.decimals);return b.fromValue(r.add(e),this.format.decimals,this.format)}subUnsafe(t){this._checkFormat(t);const r=d(this._value,this.format.decimals),e=d(t._value,t.format.decimals);return b.fromValue(r.sub(e),this.format.decimals,this.format)}mulUnsafe(t){this._checkFormat(t);const r=d(this._value,this.format.decimals),e=d(t._value,t.format.decimals);return b.fromValue(r.mul(e).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(t){this._checkFormat(t);const r=d(this._value,this.format.decimals),e=d(t._value,t.format.decimals);return b.fromValue(r.mul(this.format._multiplier).div(e),this.format.decimals,this.format)}floor(){const t=this.toString().split(".");1===t.length&&t.push("0");let r=b.from(t[0],this.format);const e=!t[1].match(/^(0*)$/);return this.isNegative()&&e&&(r=r.subUnsafe(v.toFormat(r.format))),r}ceiling(){const t=this.toString().split(".");1===t.length&&t.push("0");let r=b.from(t[0],this.format);const e=!t[1].match(/^(0*)$/);return!this.isNegative()&&e&&(r=r.addUnsafe(v.toFormat(r.format))),r}round(t){null==t&&(t=0);const r=this.toString().split(".");if(1===r.length&&r.push("0"),(t<0||t>80||t%1)&&u.throwArgumentError("invalid decimal count","decimals",t),r[1].length<=t)return this;const e=b.from("1"+f.substring(0,t),this.format),i=x.toFormat(this.format);return this.mulUnsafe(e).addUnsafe(i).floor().divUnsafe(e)}isZero(){return"0.0"===this._value||"0"===this._value}isNegative(){return"-"===this._value[0]}toString(){return this._value}toHexString(t){if(null==t)return this._hex;t%8&&u.throwArgumentError("invalid byte width","width",t);const r=s.O$.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();return(0,i.hexZeroPad)(r,t/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(t){return b.fromString(this._value,t)}static fromValue(t,r,e){return null!=e||null==r||(0,s.Zm)(r)||(e=r,r=null),null==r&&(r=0),null==e&&(e="fixed"),b.fromString(c(t,r),w.from(e))}static fromString(t,r){null==r&&(r="fixed");const e=w.from(r),n=d(t,e.decimals);!e.signed&&n.lt(m)&&h("unsigned value cannot be negative","overflow","value",t);let o=null;e.signed?o=n.toTwos(e.width).toHexString():(o=n.toHexString(),o=(0,i.hexZeroPad)(o,e.width/8));const s=c(n,e.decimals);return new b(a,o,s,e)}static fromBytes(t,r){null==r&&(r="fixed");const e=w.from(r);if((0,i.arrayify)(t).length>e.width/8)throw new Error("overflow");let n=s.O$.from(t);e.signed&&(n=n.fromTwos(e.width));const o=n.toTwos((e.signed?0:1)+e.width).toHexString(),u=c(n,e.decimals);return new b(a,o,u,e)}static from(t,r){if("string"==typeof t)return b.fromString(t,r);if((0,i.isBytes)(t))return b.fromBytes(t,r);try{return b.fromValue(t,0,r)}catch(t){if(t.code!==n.Logger.errors.INVALID_ARGUMENT)throw t}return u.throwArgumentError("invalid FixedNumber value","value",t)}static isFixedNumber(t){return!(!t||!t._isFixedNumber)}}const v=b.from(1),x=b.from("0.5")}}]);