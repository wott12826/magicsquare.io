"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[675],{70675:function(e,r,t){t.d(r,{gh:function(){return Je}});var n={};t.r(n),t.d(n,{identity:function(){return M}});var a={};t.r(a),t.d(a,{base2:function(){return S}});var o={};t.r(o),t.d(o,{base8:function(){return k}});var i={};t.r(i),t.d(i,{base10:function(){return N}});var s={};t.r(s),t.d(s,{base16:function(){return T},base16upper:function(){return j}});var c={};t.r(c),t.d(c,{base32:function(){return D},base32hex:function(){return O},base32hexpad:function(){return V},base32hexpadupper:function(){return F},base32hexupper:function(){return J},base32pad:function(){return B},base32padupper:function(){return L},base32upper:function(){return z},base32z:function(){return H}});var f={};t.r(f),t.d(f,{base36:function(){return R},base36upper:function(){return q}});var d={};t.r(d),t.d(d,{base58btc:function(){return K},base58flickr:function(){return G}});var u={};t.r(u),t.d(u,{base64:function(){return I},base64pad:function(){return Q},base64url:function(){return Z},base64urlpad:function(){return $}});var h={};t.r(h),t.d(h,{base256emoji:function(){return _}});var p={};t.r(p),t.d(p,{sha256:function(){return Ce},sha512:function(){return Ee}});var b={};t.r(b),t.d(b,{identity:function(){return Me}});var l={};t.r(l),t.d(l,{code:function(){return ke},decode:function(){return Te},encode:function(){return Ne},name:function(){return Se}});var w={};t.r(w),t.d(w,{code:function(){return Be},decode:function(){return Oe},encode:function(){return Le},name:function(){return ze}});var y=function(e,r){if(e.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var a=0;a<e.length;a++){var o=e.charAt(a),i=o.charCodeAt(0);if(255!==t[i])throw new TypeError(o+" is ambiguous");t[i]=a}var s=e.length,c=e.charAt(0),f=Math.log(s)/Math.log(256),d=Math.log(256)/Math.log(s);function u(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;var r=0;if(" "!==e[r]){for(var n=0,a=0;e[r]===c;)n++,r++;for(var o=(e.length-r)*f+1>>>0,i=new Uint8Array(o);e[r];){var d=t[e.charCodeAt(r)];if(255===d)return;for(var u=0,h=o-1;(0!==d||u<a)&&-1!==h;h--,u++)d+=s*i[h]>>>0,i[h]=d%256>>>0,d=d/256>>>0;if(0!==d)throw new Error("Non-zero carry");a=u,r++}if(" "!==e[r]){for(var p=o-a;p!==o&&0===i[p];)p++;for(var b=new Uint8Array(n+(o-p)),l=n;p!==o;)b[l++]=i[p++];return b}}}return{encode:function(r){if(r instanceof Uint8Array||(ArrayBuffer.isView(r)?r=new Uint8Array(r.buffer,r.byteOffset,r.byteLength):Array.isArray(r)&&(r=Uint8Array.from(r))),!(r instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===r.length)return"";for(var t=0,n=0,a=0,o=r.length;a!==o&&0===r[a];)a++,t++;for(var i=(o-a)*d+1>>>0,f=new Uint8Array(i);a!==o;){for(var u=r[a],h=0,p=i-1;(0!==u||h<n)&&-1!==p;p--,h++)u+=256*f[p]>>>0,f[p]=u%s>>>0,u=u/s>>>0;if(0!==u)throw new Error("Non-zero carry");n=h,a++}for(var b=i-n;b!==i&&0===f[b];)b++;for(var l=c.repeat(t);b<i;++b)l+=e.charAt(f[b]);return l},decodeUnsafe:u,decode:function(e){var t=u(e);if(t)return t;throw new Error(`Non-${r} character`)}}};new Uint8Array(0);const m=e=>{if(e instanceof Uint8Array&&"Uint8Array"===e.constructor.name)return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")};class x{constructor(e,r,t){this.name=e,this.prefix=r,this.baseEncode=t}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class g{constructor(e,r,t){if(this.name=e,this.prefix=r,void 0===r.codePointAt(0))throw new Error("Invalid prefix character");this.prefixCodePoint=r.codePointAt(0),this.baseDecode=t}decode(e){if("string"==typeof e){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}throw Error("Can only multibase decode strings")}or(e){return A(this,e)}}class v{constructor(e){this.decoders=e}or(e){return A(this,e)}decode(e){const r=e[0],t=this.decoders[r];if(t)return t.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const A=(e,r)=>new v({...e.decoders||{[e.prefix]:e},...r.decoders||{[r.prefix]:r}});class U{constructor(e,r,t,n){this.name=e,this.prefix=r,this.baseEncode=t,this.baseDecode=n,this.encoder=new x(e,r,t),this.decoder=new g(e,r,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const C=({name:e,prefix:r,encode:t,decode:n})=>new U(e,r,t,n),E=({prefix:e,name:r,alphabet:t})=>{const{encode:n,decode:a}=y(t,r);return C({prefix:e,name:r,encode:n,decode:e=>m(a(e))})},P=({name:e,prefix:r,bitsPerChar:t,alphabet:n})=>C({prefix:r,name:e,encode(e){return((e,r,t)=>{const n="="===r[r.length-1],a=(1<<t)-1;let o="",i=0,s=0;for(let n=0;n<e.length;++n)for(s=s<<8|e[n],i+=8;i>t;)i-=t,o+=r[a&s>>i];if(i&&(o+=r[a&s<<t-i]),n)for(;o.length*t&7;)o+="=";return o})(e,n,t)},decode(r){return((e,r,t,n)=>{const a={};for(let e=0;e<r.length;++e)a[r[e]]=e;let o=e.length;for(;"="===e[o-1];)--o;const i=new Uint8Array(o*t/8|0);let s=0,c=0,f=0;for(let r=0;r<o;++r){const o=a[e[r]];if(void 0===o)throw new SyntaxError(`Non-${n} character`);c=c<<t|o,s+=t,s>=8&&(s-=8,i[f++]=255&c>>s)}if(s>=t||255&c<<8-s)throw new SyntaxError("Unexpected end of data");return i})(r,n,t,e)}}),M=C({prefix:"\0",name:"identity",encode:e=>{return r=e,(new TextDecoder).decode(r);var r},decode:e=>(e=>(new TextEncoder).encode(e))(e)}),S=P({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),k=P({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),N=E({prefix:"9",name:"base10",alphabet:"0123456789"}),T=P({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),j=P({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),D=P({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),z=P({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),B=P({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),L=P({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),O=P({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),J=P({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),V=P({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),F=P({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),H=P({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),R=E({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),q=E({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),K=E({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),G=E({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),I=P({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Q=P({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Z=P({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),$=P({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),W=Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),X=W.reduce(((e,r,t)=>(e[t]=r,e)),[]),Y=W.reduce(((e,r,t)=>(e[r.codePointAt(0)]=t,e)),[]);const _=C({prefix:"🚀",name:"base256emoji",encode:function(e){return e.reduce(((e,r)=>e+=X[r]),"")},decode:function(e){const r=[];for(const t of e){const e=Y[t.codePointAt(0)];if(void 0===e)throw new Error(`Non-base256emoji character: ${t}`);r.push(e)}return new Uint8Array(r)}});var ee=function e(r,t,n){t=t||[];var a=n=n||0;for(;r>=ne;)t[n++]=255&r|re,r/=128;for(;r&te;)t[n++]=255&r|re,r>>>=7;return t[n]=0|r,e.bytes=n-a+1,t},re=128,te=-128,ne=Math.pow(2,31);var ae=function e(r,t){var n,a=0,o=0,i=t=t||0,s=r.length;do{if(i>=s)throw e.bytes=0,new RangeError("Could not decode varint");n=r[i++],a+=o<28?(n&ie)<<o:(n&ie)*Math.pow(2,o),o+=7}while(n>=oe);return e.bytes=i-t,a},oe=128,ie=127;var se=Math.pow(2,7),ce=Math.pow(2,14),fe=Math.pow(2,21),de=Math.pow(2,28),ue=Math.pow(2,35),he=Math.pow(2,42),pe=Math.pow(2,49),be=Math.pow(2,56),le=Math.pow(2,63),we={encode:ee,decode:ae,encodingLength:function(e){return e<se?1:e<ce?2:e<fe?3:e<de?4:e<ue?5:e<he?6:e<pe?7:e<be?8:e<le?9:10}};const ye=(e,r,t=0)=>(we.encode(e,r,t),r),me=e=>we.encodingLength(e),xe=(e,r)=>{const t=r.byteLength,n=me(e),a=n+me(t),o=new Uint8Array(a+t);return ye(e,o,0),ye(t,o,n),o.set(r,a),new ge(e,t,r,o)};class ge{constructor(e,r,t,n){this.code=e,this.size=r,this.digest=t,this.bytes=n}}const ve=({name:e,code:r,encode:t})=>new Ae(e,r,t);class Ae{constructor(e,r,t){this.name=e,this.code=r,this.encode=t}digest(e){if(e instanceof Uint8Array){const r=this.encode(e);return r instanceof Uint8Array?xe(this.code,r):r.then((e=>xe(this.code,e)))}throw Error("Unknown type, must be binary type")}}const Ue=e=>async r=>new Uint8Array(await crypto.subtle.digest(e,r)),Ce=ve({name:"sha2-256",code:18,encode:Ue("SHA-256")}),Ee=ve({name:"sha2-512",code:19,encode:Ue("SHA-512")}),Pe=m,Me={code:0,name:"identity",encode:Pe,digest:e=>xe(0,Pe(e))},Se="raw",ke=85,Ne=e=>m(e),Te=e=>m(e),je=new TextEncoder,De=new TextDecoder,ze="json",Be=512,Le=e=>je.encode(JSON.stringify(e)),Oe=e=>JSON.parse(De.decode(e));Symbol.toStringTag,Symbol.for("nodejs.util.inspect.custom");Symbol.for("@ipld/js-cid/CID");const Je={...n,...a,...o,...i,...s,...c,...f,...d,...u,...h}}}]);