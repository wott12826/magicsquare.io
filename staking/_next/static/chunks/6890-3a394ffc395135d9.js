(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6890],{26549:function(t,e,n){t.exports=function(){const t=n(62086),e=n(11603),s=n(1123);let r=[],a=[];const o=[];let p;const i=[],l=[];this.statsObject="statsObject";const h=function(t,e){return t.lower<e.lower?-1:t.lower>e.lower?1:0},c=function(t,e){return t.total<e.total?1:t.total>e.total?-1:h(t,e)},d=function(t,e){return t.index<e.index?-1:t.index>e.index?1:0},A=function(){this.empty=0,this.match=0,this.nomatch=0,this.total=0},b=function(e,n){switch(e.total+=1,n){case t.EMPTY:e.empty+=1;break;case t.MATCH:e.match+=1;break;case t.NOMATCH:e.nomatch+=1;break;default:throw new Error(`stats.js: collect(): incStat(): unrecognized state: ${n}`)}},S=function(t,e){let n="";return n+="<tr>",n+=`<td class="${s.CLASS_ACTIVE}">${t}</td>`,n+=`<td class="${s.CLASS_EMPTY}">${e.empty}</td>`,n+=`<td class="${s.CLASS_MATCH}">${e.match}</td>`,n+=`<td class="${s.CLASS_NOMATCH}">${e.nomatch}</td>`,n+=`<td class="${s.CLASS_ACTIVE}">${e.total}</td>`,n+="</tr>\n",n},f=function(){let e="";return e+=S("ALT",o[t.ALT]),e+=S("CAT",o[t.CAT]),e+=S("REP",o[t.REP]),e+=S("RNM",o[t.RNM]),e+=S("TRG",o[t.TRG]),e+=S("TBS",o[t.TBS]),e+=S("TLS",o[t.TLS]),e+=S("UDT",o[t.UDT]),e+=S("AND",o[t.AND]),e+=S("NOT",o[t.NOT]),e+=S("BKR",o[t.BKR]),e+=S("BKA",o[t.BKA]),e+=S("BKN",o[t.BKN]),e+=S("ABG",o[t.ABG]),e+=S("AEN",o[t.AEN]),e+=S("totals",p),e},u=function(){let t="";t+="<tr><th></th><th></th><th></th><th></th><th></th></tr>\n",t+="<tr><th>rules</th><th></th><th></th><th></th><th></th></tr>\n";for(let e=0;e<r.length;e+=1)i[e].total>0&&(t+="<tr>",t+=`<td class="${s.CLASS_ACTIVE}">${i[e].name}</td>`,t+=`<td class="${s.CLASS_EMPTY}">${i[e].empty}</td>`,t+=`<td class="${s.CLASS_MATCH}">${i[e].match}</td>`,t+=`<td class="${s.CLASS_NOMATCH}">${i[e].nomatch}</td>`,t+=`<td class="${s.CLASS_ACTIVE}">${i[e].total}</td>`,t+="</tr>\n");if(a.length>0){t+="<tr><th></th><th></th><th></th><th></th><th></th></tr>\n",t+="<tr><th>udts</th><th></th><th></th><th></th><th></th></tr>\n";for(let e=0;e<a.length;e+=1)l[e].total>0&&(t+="<tr>",t+=`<td class="${s.CLASS_ACTIVE}">${l[e].name}</td>`,t+=`<td class="${s.CLASS_EMPTY}">${l[e].empty}</td>`,t+=`<td class="${s.CLASS_MATCH}">${l[e].match}</td>`,t+=`<td class="${s.CLASS_NOMATCH}">${l[e].nomatch}</td>`,t+=`<td class="${s.CLASS_ACTIVE}">${l[e].total}</td>`,t+="</tr>\n")}return t};this.validate=function(t){let e=!1;return"string"==typeof t&&"stats"===t&&(e=!0),e},this.init=function(e,n){r=e,a=n,function(){o.length=0,p=new A,o[t.ALT]=new A,o[t.CAT]=new A,o[t.REP]=new A,o[t.RNM]=new A,o[t.TRG]=new A,o[t.TBS]=new A,o[t.TLS]=new A,o[t.UDT]=new A,o[t.AND]=new A,o[t.NOT]=new A,o[t.BKR]=new A,o[t.BKA]=new A,o[t.BKN]=new A,o[t.ABG]=new A,o[t.AEN]=new A,i.length=0;for(let t=0;t<r.length;t+=1)i.push({empty:0,match:0,nomatch:0,total:0,name:r[t].name,lower:r[t].lower,index:r[t].index});if(a.length>0){l.length=0;for(let t=0;t<a.length;t+=1)l.push({empty:0,match:0,nomatch:0,total:0,name:a[t].name,lower:a[t].lower,index:a[t].index})}}()},this.collect=function(e,n){b(p,n.state,n.phraseLength),b(o[e.type],n.state,n.phraseLength),e.type===t.RNM&&b(i[e.index],n.state,n.phraseLength),e.type===t.UDT&&b(l[e.index],n.state,n.phraseLength)},this.toHtml=function(t,e){let n="";n+=`<table class="${s.CLASS_STATS}">\n`,"string"==typeof e&&(n+=`<caption>${e}</caption>\n`),n+=`<tr><th class="${s.CLASS_ACTIVE}">ops</th>\n`,n+=`<th class="${s.CLASS_EMPTY}">EMPTY</th>\n`,n+=`<th class="${s.CLASS_MATCH}">MATCH</th>\n`,n+=`<th class="${s.CLASS_NOMATCH}">NOMATCH</th>\n`,n+=`<th class="${s.CLASS_ACTIVE}">totals</th></tr>\n`;for(;;){if(void 0===t){n+=f();break}if(null===t){n+=f();break}if("ops"===t){n+=f();break}if("index"===t){i.sort(d),l.length>0&&l.sort(d),n+=f(),n+=u();break}if("hits"===t){i.sort(c),l.length>0&&l.sort(d),n+=f(),n+=u();break}if("alpha"===t){i.sort(h),l.length>0&&l.sort(h),n+=f(),n+=u();break}break}return n+="</table>\n",n},this.toHtmlPage=function(t,n,s){return e.htmlToPage(this.toHtml(t,n),s)}}},1123:function(t){t.exports={CLASS_MONOSPACE:"apg-mono",CLASS_ACTIVE:"apg-active",CLASS_EMPTY:"apg-empty",CLASS_MATCH:"apg-match",CLASS_NOMATCH:"apg-nomatch",CLASS_LOOKAHEAD:"apg-lh-match",CLASS_LOOKBEHIND:"apg-lb-match",CLASS_REMAINDER:"apg-remainder",CLASS_CTRLCHAR:"apg-ctrl-char",CLASS_LINEEND:"apg-line-end",CLASS_ERROR:"apg-error",CLASS_PHRASE:"apg-phrase",CLASS_EMPTYPHRASE:"apg-empty-phrase",CLASS_STATE:"apg-state",CLASS_STATS:"apg-stats",CLASS_TRACE:"apg-trace",CLASS_GRAMMAR:"apg-grammar",CLASS_RULES:"apg-rules",CLASS_RULESLINK:"apg-rules-link",CLASS_ATTRIBUTES:"apg-attrs"}},9574:function(t,e,n){t.exports=function(){const t=n(11603),e=n(1123),s=new(n(72081)),r=n(62086),a="trace.js: ",o=this,p=16,i=80,l=[];let h=5e3,c=-1,d=0,A=0;const b=[];let S=null,f=null,u=null;const T=[],g=[],C=`<span class="${e.CLASS_LINEEND}">&bull;</span>`,L=`<span class="${e.CLASS_LINEEND}">&hellip;</span>`,m=`<span class="${e.CLASS_EMPTY}">&#120634;</span>`;this.traceObject="traceObject",this.filter={operators:[],rules:[]},this.setMaxRecords=function(t,e){c=-1,"number"==typeof t&&t>0?(h=Math.ceil(t),"number"==typeof e&&(c=Math.floor(e),c<0&&(c=-1))):h=0},this.getMaxRecords=function(){return h},this.getLastRecord=function(){return c},this.init=function(t,e,n){l.length=0,b.length=0,d=0,A=0,S=n,f=t,u=e,function(){const t=function(t){T[r.ALT]=t,T[r.CAT]=t,T[r.REP]=t,T[r.TLS]=t,T[r.TBS]=t,T[r.TRG]=t,T[r.AND]=t,T[r.NOT]=t,T[r.BKR]=t,T[r.BKA]=t,T[r.BKN]=t,T[r.ABG]=t,T[r.AEN]=t};let e=0;for(const t in o.filter.operators)e+=1;if(0!==e){for(const e in o.filter.operators){const n=e.toUpperCase();if("<ALL>"===n)return void t(!0);if("<NONE>"===n)return void t(!1)}t(!1);for(const t in o.filter.operators){const e=t.toUpperCase();if("ALT"===e)T[r.ALT]=!0===o.filter.operators[t];else if("CAT"===e)T[r.CAT]=!0===o.filter.operators[t];else if("REP"===e)T[r.REP]=!0===o.filter.operators[t];else if("AND"===e)T[r.AND]=!0===o.filter.operators[t];else if("NOT"===e)T[r.NOT]=!0===o.filter.operators[t];else if("TLS"===e)T[r.TLS]=!0===o.filter.operators[t];else if("TBS"===e)T[r.TBS]=!0===o.filter.operators[t];else if("TRG"===e)T[r.TRG]=!0===o.filter.operators[t];else if("BKR"===e)T[r.BKR]=!0===o.filter.operators[t];else if("BKA"===e)T[r.BKA]=!0===o.filter.operators[t];else if("BKN"===e)T[r.BKN]=!0===o.filter.operators[t];else if("ABG"===e)T[r.ABG]=!0===o.filter.operators[t];else{if("AEN"!==e)throw new Error(`${a}initOpratorFilter: '${t}' not a valid operator name. Must be <all>, <none>, alt, cat, rep, tls, tbs, trg, and, not, bkr, bka or bkn`);T[r.AEN]=!0===o.filter.operators[t]}}}else t(!1)}(),function(){const t=function(t){T[r.RNM]=t,T[r.UDT]=t;const e=f.length+u.length;g.length=0;for(let n=0;n<e;n+=1)g.push(t)};let e,n;const s=[];for(n=0;n<f.length;n+=1)s.push(f[n].lower);for(n=0;n<u.length;n+=1)s.push(u[n].lower);g.length=0,e=0;for(const t in o.filter.rules)e+=1;if(0!==e){for(const e in o.filter.rules){const n=e.toLowerCase();if("<all>"===n)return void t(!0);if("<none>"===n)return void t(!1)}t(!1),T[r.RNM]=!0,T[r.UDT]=!0;for(const t in o.filter.rules){const e=t.toLowerCase();if(n=s.indexOf(e),n<0)throw new Error(`${a}initRuleFilter: '${t}' not a valid rule or udt name`);g[n]=!0===o.filter.rules[t]}}else t(!0)}(),s.init(h)};const E=function(t){let e=!1;return e=t.type===r.RNM?!(!T[t.type]||!g[t.index]):t.type===r.UDT?!(!T[t.type]||!g[f.length+t.index]):T[t.type],e},$=function(t){return-1===c||t<=c};this.down=function(t,e,n,r,a,o){$(d)&&E(t)&&(b.push(d),l[s.increment()]={dirUp:!1,depth:A,thisLine:d,thatLine:void 0,opcode:t,state:e,phraseIndex:n,phraseLength:r,lookAnchor:a,lookAround:o},d+=1,A+=1)},this.up=function(t,e,n,r,a,o){if($(d)&&E(t)){const p=d,i=b.pop(),h=s.getListIndex(i);-1!==h&&(l[h].thatLine=p),A-=1,l[s.increment()]={dirUp:!0,depth:A,thisLine:p,thatLine:i,opcode:t,state:e,phraseIndex:n,phraseLength:r,lookAnchor:a,lookAround:o},d+=1}};this.toTree=function(e){const n=function(){function e(e,n){let s,a,o;if(n)switch(e.op={id:n.type,name:t.opcodeToString(n.type)},e.opData=void 0,n.type){case r.RNM:e.opData=f[n.index].name;break;case r.UDT:e.opData=u[n.index].name;break;case r.BKR:s=n.index<f.length?f[n.index].name:u[n.index-f.length].name,a=n.bkrCase===r.BKR_MODE_CI?"%i":"%s",o=n.bkrMode===r.BKR_MODE_UM?"%u":"%p",e.opData=`\\\\${a}${o}${s}`;break;case r.TLS:e.opData=[];for(let t=0;t<n.string.length;t+=1)e.opData.push(n.string[t]);break;case r.TBS:e.opData=[];for(let t=0;t<n.string.length;t+=1)e.opData.push(n.string[t]);break;case r.TRG:case r.REP:e.opData=[n.min,n.max];break;default:throw new Error("unrecognized opcode")}else e.op={id:void 0,name:void 0},e.opData=void 0}function n(t,e,n){return t===r.MATCH?{index:e,length:n}:t===r.NOMATCH||t===r.EMPTY?{index:e,length:0}:null}let a=-1;function o(s,r,o){const p={id:a++,branch:-1,parent:s,up:!1,down:!1,depth:o,children:[]};return r?(p.down=!0,p.state={id:r.state,name:t.stateToString(r.state)},p.phrase=null,e(p,r.opcode)):(p.state={id:void 0,name:void 0},p.phrase=n(),e(p,void 0)),p}function p(s,r){r&&(s.up=!0,s.state={id:r.state,name:t.stateToString(r.state)},s.phrase=n(r.state,r.phraseIndex,r.phraseLength),s.down||e(s,r.opcode))}let i=0,h=-1,c=1;const d=[];let b,T,g,C,L=!0;const m=o(null,null,-1);for(d.push(m),T=m,s.forEach((t=>{if(C=l[t],L&&(L=!1,C.depth>0)){const t=C.dirUp?C.depth+1:C.depth;for(let e=0;e<t;e+=1)g=T,T=o(T,null,e),d.push(T),g.children.push(T)}C.dirUp?(T=d.pop(),p(T,C),T=d[d.length-1]):(g=T,T=o(T,C,C.depth),d.push(T),g.children.push(T))}));d.length>1;)T=d.pop(),p(T,null);if(0===m.children.length)throw new Error("trace.toTree(): parse tree has no nodes");if(0===d.length)throw new Error("trace.toTree(): integrity check: dummy root node disappeared?");b=m.children[0];let E=b;for(;b&&!b.down&&!b.up;)E=b,b=b.children[0];b=E,b.leftMost=!0,b.rightMost=!0,function t(e){if(h+=1,e.branch=c,h>A&&(A=h),0===e.children.length)i+=1;else for(let n=0;n<e.children.length;n+=1)n>0&&(c+=1),e.children[n].leftMost=!1,e.children[n].rightMost=!1,e.leftMost&&(e.children[n].leftMost=0===n),e.rightMost&&(e.children[n].rightMost=n===e.children.length-1),t(e.children[n]);h-=1}(b),b.branch=0;const $={string:[]};for(let t=0;t<S.length;t+=1)$.string[t]=S[t];$.rules=[];for(let t=0;t<f.length;t+=1)$.rules[t]=f[t].name;$.udts=[];for(let t=0;t<u.length;t+=1)$.udts[t]=u[t].name;let N;return $.id={},$.id.ALT={id:r.ALT,name:"ALT"},$.id.CAT={id:r.CAT,name:"CAT"},$.id.REP={id:r.REP,name:"REP"},$.id.RNM={id:r.RNM,name:"RNM"},$.id.TLS={id:r.TLS,name:"TLS"},$.id.TBS={id:r.TBS,name:"TBS"},$.id.TRG={id:r.TRG,name:"TRG"},$.id.UDT={id:r.UDT,name:"UDT"},$.id.AND={id:r.AND,name:"AND"},$.id.NOT={id:r.NOT,name:"NOT"},$.id.BKR={id:r.BKR,name:"BKR"},$.id.BKA={id:r.BKA,name:"BKA"},$.id.BKN={id:r.BKN,name:"BKN"},$.id.ABG={id:r.ABG,name:"ABG"},$.id.AEN={id:r.AEN,name:"AEN"},$.id.ACTIVE={id:r.ACTIVE,name:"ACTIVE"},$.id.MATCH={id:r.MATCH,name:"MATCH"},$.id.EMPTY={id:r.EMPTY,name:"EMPTY"},$.id.NOMATCH={id:r.NOMATCH,name:"NOMATCH"},$.treeDepth=A,$.leafNodes=i,N=b.down?b.up?"none":"right":b.up?"left":"both",$.branchesIncomplete=N,$.tree=function t(e,n){let s;const r={};if(r.id=e.id,r.branch=e.branch,r.leftMost=e.leftMost,r.rightMost=e.rightMost,s=e.state.name?e.state.name:"ACTIVE",r.state={id:e.state.id,name:s},s=e.op.name?e.op.name:"?",r.op={id:e.op.id,name:s},"string"==typeof e.opData)r.opData=e.opData;else if(Array.isArray(e.opData)){r.opData=[];for(let t=0;t<e.opData.length;t+=1)r.opData[t]=e.opData[t]}else r.opData=void 0;e.phrase?r.phrase={index:e.phrase.index,length:e.phrase.length}:r.phrase=null,r.depth=e.depth,r.children=[];for(let s=0;s<e.children.length;s+=1)e.children.length,r.children[s]=t(e.children[s],n);return r}(b,b.depth),$}();return e?JSON.stringify(n):n},this.toHtmlPage=function(e,n,s){return t.htmlToPage(this.toHtml(e,n),s)};this.indent=function(t){let e="";for(let n=0;n<t;n+=1)e+=".";return e};const N=function(e,n,s,r,a){if(0===r)return"";let o="";const i=a?",":"";switch(e){case p:o=i+t.charsToHex(n,s,r);break;case 10:if(a)return`,${t.charsToDec(n,s,r)}`;o=i+t.charsToDec(n,s,r);break;case 32:o=t.charsToUnicode(n,s,r);break;default:o=t.charsToAsciiHtml(n,s,r)}return o},M=function(t,n,s,a,o,p){let l,h,c,d,A="",b=C;const S=`<span class="${e.CLASS_REMAINDER}">`,f="</span>";let u=!1;switch(s){case r.EMPTY:A+=m;case r.NOMATCH:case r.ACTIVE:l=a,h=0,c=a,d=n.length-c;break;case r.MATCH:l=a,h=o,c=a+h,d=n.length-c;break;default:throw new Error("unrecognized state")}return b=C,h>i?(h=i,b=L,d=0):h+d>i&&(b=L,d=i-h),h>0&&(A+=p,A+=N(t,n,l,h,u),A+=f,u=!0),d>0&&(A+=S,A+=N(t,n,c,d,u),A+=f),A+b},R=function(n){if(null===f)return"";let a,h,c,d,A,b,T="";return T+="<tr><th>(a)</th><th>(b)</th><th>(c)</th><th>(d)</th><th>(e)</th><th>(f)</th>",T+="<th>operator</th><th>phrase</th></tr>\n",s.forEach((s=>{const g=l[s];switch(a=g.thisLine,h=void 0!==g.thatLine?g.thatLine:"--",c=!1,d=!1,A=!1,g.lookAround===r.LOOKAROUND_AHEAD&&(c=!0,A=!0,b=g.lookAnchor),g.opcode.type!==r.AND&&g.opcode.type!==r.NOT||(c=!0,A=!0,b=g.phraseIndex),g.lookAround===r.LOOKAROUND_BEHIND&&(d=!0,A=!0,b=g.lookAnchor),g.opcode.type!==r.BKA&&g.opcode.type!==r.BKN||(d=!0,A=!0,b=g.phraseIndex),T+="<tr>",T+=`<td>${a}</td><td>${h}</td>`,T+=`<td>${g.phraseIndex}</td>`,T+=`<td>${g.phraseLength}</td>`,T+=`<td>${g.depth}</td>`,T+="<td>",g.state){case r.ACTIVE:T+=`<span class="${e.CLASS_ACTIVE}">&darr;&nbsp;</span>`;break;case r.MATCH:T+=`<span class="${e.CLASS_MATCH}">&uarr;M</span>`;break;case r.NOMATCH:T+=`<span class="${e.CLASS_NOMATCH}">&uarr;N</span>`;break;case r.EMPTY:T+=`<span class="${e.CLASS_EMPTY}">&uarr;E</span>`;break;default:T+=`<span class="${e.CLASS_ACTIVE}">--</span>`}if(T+="</td>",T+="<td>",T+=o.indent(g.depth),c?T+=`<span class="${e.CLASS_LOOKAHEAD}">`:d&&(T+=`<span class="${e.CLASS_LOOKBEHIND}">`),T+=t.opcodeToString(g.opcode.type),g.opcode.type===r.RNM&&(T+=`(${f[g.opcode.index].name}) `),g.opcode.type===r.BKR){const t=g.opcode.bkrCase===r.BKR_MODE_CI?"%i":"%s",e=g.opcode.bkrMode===r.BKR_MODE_UM?"%u":"%p";T+=`(\\${t}${e}${f[g.opcode.index].name}) `}g.opcode.type===r.UDT&&(T+=`(${u[g.opcode.index].name}) `),g.opcode.type===r.TRG&&(T+=`(${function(t,e){let n="";if(e.type===r.TRG)if(t===p||32===t){let s=e.min.toString(16).toUpperCase();s.length%2!=0&&(s=`0${s}`),n+=t===p?"%x":"U+",n+=s,s=e.max.toString(16).toUpperCase(),s.length%2!=0&&(s=`0${s}`),n+=`&ndash;${s}`}else n=`%d${e.min.toString(10)}&ndash;${e.max.toString(10)}`;return n}(n,g.opcode)}) `),g.opcode.type===r.TBS&&(T+=`(${function(t,e){let n="";if(e.type===r.TBS){const s=Math.min(e.string.length,10);if(t===p||32===t){n+=t===p?"%x":"U+";for(let t=0;t<s;t+=1){let s;t>0&&(n+="."),s=e.string[t].toString(16).toUpperCase(),s.length%2!=0&&(s=`0${s}`),n+=s}}else{n="%d";for(let t=0;t<s;t+=1)t>0&&(n+="."),n+=e.string[t].toString(10)}s<e.string.length&&(n+=L)}return n}(n,g.opcode)}) `),g.opcode.type===r.TLS&&(T+=`(${function(e,n){let s="";if(n.type===r.TLS){const r=Math.min(n.string.length,5);if(e===p||10===e){let t,a,o;e===p?(s="%x",o=16):(s="%d",o=10);for(let e=0;e<r;e+=1)e>0&&(s+="."),a=n.string[e],a>=97&&a<=122?(t=a-32,s+=`${t.toString(o)}/${a.toString(o)}`.toUpperCase()):a>=65&&a<=90?(t=a,a+=32,s+=`${t.toString(o)}/${a.toString(o)}`.toUpperCase()):s+=a.toString(o).toUpperCase();r<n.string.length&&(s+=L)}else{s='"';for(let e=0;e<r;e+=1)s+=t.asciiChars[n.string[e]];r<n.string.length&&(s+=L),s+='"'}}return s}(n,g.opcode)}) `),g.opcode.type===r.REP&&(T+=`(${function(t,e){let n="";if(e.type===r.REP)if(t===p){let t=e.min.toString(16).toUpperCase();t.length%2!=0&&(t=`0${t}`),n=`x${t}`,e.max<1/0?(t=e.max.toString(16).toUpperCase(),t.length%2!=0&&(t=`0${t}`)):t="inf",n+=`&ndash;${t}`}else n=e.max<1/0?`${e.min.toString(10)}&ndash;${e.max.toString(10)}`:`${e.min.toString(10)}&ndash;inf`;return n}(n,g.opcode)}) `),A&&(T+="</span>"),T+="</td>",T+="<td>",T+=d?function(t,n,s,a,o,p){let l,h,c,d,A="",b=C;const S=`<span class="${e.CLASS_LOOKBEHIND}">`,f=`<span class="${e.CLASS_REMAINDER}">`,u="</span>";let T=!1;switch(s){case r.EMPTY:A+=m;case r.NOMATCH:case r.MATCH:case r.ACTIVE:l=a-o,h=p-l,c=p,d=n.length-c;break;default:throw new Error("unrecognized state")}return b=C,h>i?(h=i,b=L,d=0):h+d>i&&(b=L,d=i-h),h>0&&(A+=S,A+=N(t,n,l,h,T),A+=u,T=!0),d>0&&(A+=f,A+=N(t,n,c,d,T),A+=u),A+b}(n,S,g.state,g.phraseIndex,g.phraseLength,b):c?function(t,n,s,r,a){const o=`<span class="${e.CLASS_LOOKAHEAD}">`;return M(t,n,s,r,a,o)}(n,S,g.state,g.phraseIndex,g.phraseLength):function(t,n,s,r,a){const o=`<span class="${e.CLASS_MATCH}">`;return M(t,n,s,r,a,o)}(n,S,g.state,g.phraseIndex,g.phraseLength),T+="</td></tr>\n"})),T+="<tr><th>(a)</th><th>(b)</th><th>(c)</th><th>(d)</th><th>(e)</th><th>(f)</th>",T+="<th>operator</th><th>phrase</th></tr>\n",T+="</table>\n",T};this.toHtml=function(t,n){let s=8;if("string"==typeof t&&t.length>=3){const e=t.toLowerCase().slice(0,3);"hex"===e?s=p:"dec"===e?s=10:"uni"===e&&(s=32)}let r="";return r+=function(t,n){let s;switch(t){case p:s="hexadecimal";break;case 10:s="decimal";break;case 8:s="ASCII";break;case 32:s="UNICODE";break;default:throw new Error(`${a}htmlHeader: unrecognized mode: ${t}`)}let r="";return r+=`<p>display mode: ${s}</p>\n`,r+=`<table class="${e.CLASS_TRACE}">\n`,"string"==typeof n&&(r+=`<caption>${n}</caption>`),r}(s,n),r+=R(s),r+=function(){let t="";return t+="</table>\n",t+=`<p class="${e.CLASS_MONOSPACE}">legend:<br>\n`,t+="(a)&nbsp;-&nbsp;line number<br>\n",t+="(b)&nbsp;-&nbsp;matching line number<br>\n",t+="(c)&nbsp;-&nbsp;phrase offset<br>\n",t+="(d)&nbsp;-&nbsp;phrase length<br>\n",t+="(e)&nbsp;-&nbsp;tree depth<br>\n",t+="(f)&nbsp;-&nbsp;operator state<br>\n",t+=`&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_ACTIVE}">&darr;</span>&nbsp;&nbsp;phrase opened<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_MATCH}">&uarr;M</span> phrase matched<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_EMPTY}">&uarr;E</span> empty phrase matched<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_NOMATCH}">&uarr;N</span> phrase not matched<br>\n`,t+="operator&nbsp;-&nbsp;ALT, CAT, REP, RNM, TRG, TLS, TBS<sup>&dagger;</sup>, UDT, AND, NOT, BKA, BKN, BKR, ABG, AEN<sup>&Dagger;</sup><br>\n",t+="phrase&nbsp;&nbsp;&nbsp;-&nbsp;up to 80 characters of the phrase being matched<br>\n",t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_MATCH}">matched characters</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_LOOKAHEAD}">matched characters in look ahead mode</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_LOOKBEHIND}">matched characters in look behind mode</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_REMAINDER}">remainder characters(not yet examined by parser)</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${e.CLASS_CTRLCHAR}">control characters, TAB, LF, CR, etc. (ASCII mode only)</span><br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${m} empty string<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${C} end of input string<br>\n`,t+=`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${L} input string display truncated<br>\n`,t+="</p>\n",t+=`<p class="${e.CLASS_MONOSPACE}">\n`,t+="<sup>&dagger;</sup>original ABNF operators:<br>\n",t+="ALT - alternation<br>\n",t+="CAT - concatenation<br>\n",t+="REP - repetition<br>\n",t+="RNM - rule name<br>\n",t+="TRG - terminal range<br>\n",t+="TLS - terminal literal string (case insensitive)<br>\n",t+="TBS - terminal binary string (case sensitive)<br>\n",t+="<br>\n",t+="<sup>&Dagger;</sup>super set SABNF operators:<br>\n",t+="UDT - user-defined terminal<br>\n",t+="AND - positive look ahead<br>\n",t+="NOT - negative look ahead<br>\n",t+="BKA - positive look behind<br>\n",t+="BKN - negative look behind<br>\n",t+="BKR - back reference<br>\n",t+="ABG - anchor - begin of input string<br>\n",t+="AEN - anchor - end of input string<br>\n",t+="</p>\n",t}(),r}}}}]);