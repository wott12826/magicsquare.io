(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7926],{67926:function(e,t,r){const{Buffer:n}=r(70838),o=r(45818),a="UTF8",c="UTF16",s="UTF16BE",f="UTF16LE",u="UTF32",l="UTF32BE",h="UTF32LE",i="UINT7",d="ASCII",p="BINARY",g="UINT8",b="UINT16",E="UINT16LE",w="UINT16BE",y="UINT32",$="UINT32LE",k="UINT32BE",m="ESCAPED",B="STRING",T=function(e,t){const r=function(e){const t={type:"",base64:!1},r=/^(base64:)?([a-zA-Z0-9]+)$/i.exec(e);return r&&(r[2]&&(t.type=r[2].toUpperCase()),r[1]&&(t.base64=!0)),t}(e.toUpperCase());if(r.base64){if(r.type===B)throw new TypeError(`type: "${e} "BASE64:" prefix not allowed with type ${B}`);if(n.isBuffer(t))r.data=o.base64.decode(t);else{if("string"!=typeof t)throw new TypeError(`type: "${e} unrecognized data type: typeof(data): ${typeof t}`);{const e=n.from(t,"ascii");r.data=o.base64.decode(e)}}}else r.data=t;switch(r.type){case a:!function(e){e.type=a;const t=e.data;e.bom=0,t.length>=3&&239===t[0]&&187===t[1]&&191===t[2]&&(e.bom=3)}(r);break;case c:case s:case f:!function(e){const t=e.data;switch(e.bom=0,e.type){case c:e.type=s,t.length>=2&&(254===t[0]&&255===t[1]?e.bom=2:255===t[0]&&254===t[1]&&(e.type=f,e.bom=2));break;case s:if(e.type=s,t.length>=2)if(254===t[0]&&255===t[1])e.bom=2;else if(255===t[0]&&254===t[1])throw new TypeError(`src type: "${s}" specified but BOM is for "${f}"`);break;case f:if(e.type=f,t.length>=0){if(254===t[0]&&255===t[1])throw new TypeError(`src type: "${f}" specified but BOM is for "${s}"`);255===t[0]&&254===t[1]&&(e.bom=2)}break;default:throw new TypeError(`UTF16 BOM: src type "${e.type}" unrecognized`)}}(r);break;case u:case l:case h:!function(e){const t=e.data;switch(e.bom=0,e.type){case u:e.type=l,t.length>=4&&(0===t[0]&&0===t[1]&&254===t[2]&&255===t[3]&&(e.bom=4),255===t[0]&&254===t[1]&&0===t[2]&&0===t[3]&&(e.type=h,e.bom=4));break;case l:if(e.type=l,t.length>=4&&(0===t[0]&&0===t[1]&&254===t[2]&&255===t[3]&&(e.bom=4),255===t[0]&&254===t[1]&&0===t[2]&&0===t[3]))throw new TypeError(`src type: ${l} specified but BOM is for ${h}"`);break;case h:if(e.type=h,t.length>=4){if(0===t[0]&&0===t[1]&&254===t[2]&&255===t[3])throw new TypeError(`src type: "${h}" specified but BOM is for "${l}"`);255===t[0]&&254===t[1]&&0===t[2]&&0===t[3]&&(e.bom=4)}break;default:throw new TypeError(`UTF32 BOM: src type "${e.type}" unrecognized`)}}(r);break;case b:r.type=w;break;case y:r.type=k;break;case d:r.type=i;break;case p:r.type=g;break;case i:case g:case E:case w:case $:case k:case B:case m:break;default:throw new TypeError(`type: "${e}" not recognized`)}if(r.type===B){if("string"!=typeof r.data)throw new TypeError(`type: "${e}" but data is not a string`)}else if(!n.isBuffer(r.data))throw new TypeError(`type: "${e}" but data is not a Buffer`);return r},F=function(e,t){switch(e){case a:return o.utf8.encode(t);case s:return o.utf16be.encode(t);case f:return o.utf16le.encode(t);case l:return o.utf32be.encode(t);case h:return o.utf32le.encode(t);case i:return o.uint7.encode(t);case g:return o.uint8.encode(t);case w:return o.uint16be.encode(t);case E:return o.uint16le.encode(t);case k:return o.uint32be.encode(t);case $:return o.uint32le.encode(t);case B:return o.string.encode(t);case m:return o.escaped.encode(t);default:throw new TypeError(`encode type "${e}" not recognized`)}};t.decode=function(e,t){return function(e){switch(e.type){case a:return o.utf8.decode(e.data,e.bom);case f:return o.utf16le.decode(e.data,e.bom);case s:return o.utf16be.decode(e.data,e.bom);case l:return o.utf32be.decode(e.data,e.bom);case h:return o.utf32le.decode(e.data,e.bom);case i:return o.uint7.decode(e.data);case g:return o.uint8.decode(e.data);case w:return o.uint16be.decode(e.data);case E:return o.uint16le.decode(e.data);case k:return o.uint32be.decode(e.data);case $:return o.uint32le.decode(e.data);case B:return o.string.decode(e.data);case m:return o.escaped.decode(e.data);default:throw new TypeError(`decode type "${e.type}" not recognized`)}}(T(e,t))},t.encode=function(e,t){let r,n;const T=function(e,t){if(!Array.isArray(t))throw new TypeError('dst chars: not array: "'+typeof t);if("string"!=typeof e)throw new TypeError('dst type: not string: "'+typeof e);const r=function(e){let t,r;const n={crlf:!1,lf:!1,base64:!1,type:""};for(;;){if(r=e,t=e.slice(0,5),"CRLF:"===t){n.crlf=!0,r=e.slice(5);break}if(t=e.slice(0,3),"LF:"===t){n.lf=!0,r=e.slice(3);break}break}return t=r.split(":"),1===t.length?n.type=t[0]:2===t.length&&"BASE64"===t[1]&&(n.base64=!0,n.type=t[0]),n}(e.toUpperCase());switch(r.type){case a:case s:case f:case l:case h:case i:case g:case E:case w:case $:case k:case m:break;case B:if(r.base64)throw new TypeError(`":BASE64" suffix not allowed with type ${B}`);break;case d:r.type=i;break;case p:r.type=g;break;case c:r.type=s;break;case u:r.type=l;break;case b:r.type=w;break;case y:r.type=k;break;default:throw new TypeError(`dst type unrecognized: "${e}" : must have form [crlf:|lf:]type[:base64]`)}return r}(e,t);return T.crlf?(r=o.lineEnds.crlf(t),n=F(T.type,r)):T.lf?(r=o.lineEnds.lf(t),n=F(T.type,r)):n=F(T.type,t),T.base64&&(n=o.base64.encode(n)),n};t.convert=function(e,r,n){return t.encode(n,t.decode(e,r))}},45818:function(e,t,r){const{Buffer:n}=r(70838),o=4294967292,a=4294967293,c=4294967294,s=4294967295,f=[0,1,3,7,15,31,63,127,255,511,1023],u=["00","01","02","03","04","05","06","07","08","09","0A","0B","0C","0D","0E","0F","10","11","12","13","14","15","16","17","18","19","1A","1B","1C","1D","1E","1F","20","21","22","23","24","25","26","27","28","29","2A","2B","2C","2D","2E","2F","30","31","32","33","34","35","36","37","38","39","3A","3B","3C","3D","3E","3F","40","41","42","43","44","45","46","47","48","49","4A","4B","4C","4D","4E","4F","50","51","52","53","54","55","56","57","58","59","5A","5B","5C","5D","5E","5F","60","61","62","63","64","65","66","67","68","69","6A","6B","6C","6D","6E","6F","70","71","72","73","74","75","76","77","78","79","7A","7B","7C","7D","7E","7F","80","81","82","83","84","85","86","87","88","89","8A","8B","8C","8D","8E","8F","90","91","92","93","94","95","96","97","98","99","9A","9B","9C","9D","9E","9F","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","AA","AB","AC","AD","AE","AF","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","BA","BB","BC","BD","BE","BF","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","CA","CB","CC","CD","CE","CF","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DA","DB","DC","DD","DE","DF","E0","E1","E2","E3","E4","E5","E6","E7","E8","E9","EA","EB","EC","ED","EE","EF","F0","F1","F2","F3","F4","F5","F6","F7","F8","F9","FA","FB","FC","FD","FE","FF"],l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".split(""),h=[];l.forEach((e=>{h.push(e.charCodeAt(0))})),t.utf8={encode(e){const t=[];return e.forEach((e=>{if(e>=0&&e<=127)t.push(e);else if(e<=2047)t.push(192+(e>>6&f[5])),t.push(128+(e&f[6]));else if(e<55296||e>57343&&e<=65535)t.push(224+(e>>12&f[4])),t.push(128+(e>>6&f[6])),t.push(128+(e&f[6]));else{if(!(e>=65536&&e<=1114111))throw new RangeError(`utf8.encode: character out of range: char: ${e}`);{const r=e>>16&f[5];t.push(240+(r>>2)),t.push(128+((r&f[2])<<4)+(e>>12&f[4])),t.push(128+(e>>6&f[6])),t.push(128+(e&f[6]))}}})),n.from(t)},decode(e,t){function r(e,t){if(128!=(192&t))return a;const r=((e&f[5])<<6)+(t&f[6]);return r<128?o:r}function n(e,t,r){if(128!=(192&r)||128!=(192&t))return a;const n=((e&f[4])<<12)+((t&f[6])<<6)+(r&f[6]);return n<2048?o:n>=55296&&n<=57343?c:n}function u(e,t,r,n){if(128!=(192&n)||128!=(192&r)||128!=(192&t))return a;const s=(((e&f[3])<<2)+(t>>4&f[2])<<16)+((t&f[4])<<12)+((r&f[6])<<6)+(n&f[6]);return s<65536?o:s>1114111?c:s}let l,h,i,d,p,g;const b=e.length;let E=t?3:0;const w=[];for(;E<b;){h=e[E],l=s;const t=!0;for(;t;){if(h>=0&&h<=127){l=h,g=1;break}if(i=E+1,i<b&&h>=194&&h<=223){l=r(h,e[i]),g=2;break}if(d=E+2,d<b&&h>=224&&h<=239){l=n(h,e[i],e[d]),g=3;break}if(p=E+3,p<b&&h>=240&&h<=244){l=u(h,e[i],e[d],e[p]),g=4;break}break}if(l>1114111){const e=`byte[${E}]`;if(l===s)throw new RangeError(`utf8.decode: ill-formed UTF8 byte sequence found at: ${e}`);if(l===a)throw new RangeError(`utf8.decode: illegal trailing byte found at: ${e}`);if(l===c)throw new RangeError(`utf8.decode: code point out of range found at: ${e}`);if(l===o)throw new RangeError(`utf8.decode: non-shortest form found at: ${e}`);throw new RangeError(`utf8.decode: unrecognized error found at: ${e}`)}w.push(l),E+=g}return w}},t.utf16be={encode(e){const t=[];let r,o,a;for(let n=0;n<e.length;n+=1)if(r=e[n],r>=0&&r<=55295||r>=57344&&r<=65535)t.push(r>>8&f[8]),t.push(r&f[8]);else{if(!(r>=65536&&r<=1114111))throw new RangeError(`utf16be.encode: UTF16BE value out of range: char[${n}]: ${r}`);a=r-65536,o=55296+(a>>10),a=56320+(a&f[10]),t.push(o>>8&f[8]),t.push(o&f[8]),t.push(a>>8&f[8]),t.push(a&f[8])}return n.from(t)},decode(e,t){if(e.length%2>0)throw new RangeError(`utf16be.decode: data length must be even multiple of 2: length: ${e.length}`);const r=[],n=e.length;let o,a,c,s,f,u,l=t?2:0,h=0;for(;l<n;){const t=!0;for(;t;){if(c=l+1,c<n){if(f=(e[l]<<8)+e[c],f<55296||f>57343){o=f,a=2;break}if(s=l+3,s<n&&(u=(e[l+2]<<8)+e[s],f<=56319&&u>=56320&&u<=57343)){o=65536+(f-55296<<10)+(u-56320),a=4;break}}throw new RangeError(`utf16be.decode: ill-formed UTF16BE byte sequence found: byte[${l}]`)}r[h++]=o,l+=a}return r}},t.utf16le={encode(e){const t=[];let r,o,a;for(let n=0;n<e.length;n+=1)if(r=e[n],r>=0&&r<=55295||r>=57344&&r<=65535)t.push(r&f[8]),t.push(r>>8&f[8]);else{if(!(r>=65536&&r<=1114111))throw new RangeError(`utf16le.encode: UTF16LE value out of range: char[${n}]: ${r}`);a=r-65536,o=55296+(a>>10),a=56320+(a&f[10]),t.push(o&f[8]),t.push(o>>8&f[8]),t.push(a&f[8]),t.push(a>>8&f[8])}return n.from(t)},decode(e,t){if(e.length%2>0)throw new RangeError(`utf16le.decode: data length must be even multiple of 2: length: ${e.length}`);const r=[],n=e.length;let o,a,c,s,f,u,l=t?2:0,h=0;for(;l<n;){const t=!0;for(;t;){if(c=l+1,c<n){if(f=(e[c]<<8)+e[l],f<55296||f>57343){o=f,a=2;break}if(s=l+3,s<n&&(u=(e[s]<<8)+e[l+2],f<=56319&&u>=56320&&u<=57343)){o=65536+(f-55296<<10)+(u-56320),a=4;break}}throw new RangeError(`utf16le.decode: ill-formed UTF16LE byte sequence found: byte[${l}]`)}r[h++]=o,l+=a}return r}},t.utf32be={encode(e){const t=n.alloc(4*e.length);let r=0;return e.forEach((e=>{if(e>=55296&&e<=57343||e>1114111)throw new RangeError(`utf32be.encode: UTF32BE character code out of range: char[${r/4}]: ${e}`);t[r++]=e>>24&f[8],t[r++]=e>>16&f[8],t[r++]=e>>8&f[8],t[r++]=e&f[8]})),t},decode(e,t){if(e.length%4>0)throw new RangeError(`utf32be.decode: UTF32BE byte length must be even multiple of 4: length: ${e.length}`);const r=[];let n=t?4:0;for(;n<e.length;n+=4){const t=(e[n]<<24)+(e[n+1]<<16)+(e[n+2]<<8)+e[n+3];if(t>=55296&&t<=57343||t>1114111)throw new RangeError(`utf32be.decode: UTF32BE character code out of range: char[${n/4}]: ${t}`);r.push(t)}return r}},t.utf32le={encode(e){const t=n.alloc(4*e.length);let r=0;return e.forEach((e=>{if(e>=55296&&e<=57343||e>1114111)throw new RangeError(`utf32le.encode: UTF32LE character code out of range: char[${r/4}]: ${e}`);t[r++]=e&f[8],t[r++]=e>>8&f[8],t[r++]=e>>16&f[8],t[r++]=e>>24&f[8]})),t},decode(e,t){if(e.length%4>0)throw new RangeError(`utf32be.decode: UTF32LE byte length must be even multiple of 4: length: ${e.length}`);const r=[];let n=t?4:0;for(;n<e.length;n+=4){const t=(e[n+3]<<24)+(e[n+2]<<16)+(e[n+1]<<8)+e[n];if(t>=55296&&t<=57343||t>1114111)throw new RangeError(`utf32le.encode: UTF32LE character code out of range: char[${n/4}]: ${t}`);r.push(t)}return r}},t.uint7={encode(e){const t=n.alloc(e.length);for(let r=0;r<e.length;r+=1){if(e[r]>127)throw new RangeError(`uint7.encode: UINT7 character code out of range: char[${r}]: ${e[r]}`);t[r]=e[r]}return t},decode(e){const t=[];for(let r=0;r<e.length;r+=1){if(e[r]>127)throw new RangeError(`uint7.decode: UINT7 character code out of range: byte[${r}]: ${e[r]}`);t[r]=e[r]}return t}},t.uint8={encode(e){const t=n.alloc(e.length);for(let r=0;r<e.length;r+=1){if(e[r]>255)throw new RangeError(`uint8.encode: UINT8 character code out of range: char[${r}]: ${e[r]}`);t[r]=e[r]}return t},decode(e){const t=[];for(let r=0;r<e.length;r+=1)t[r]=e[r];return t}},t.uint16be={encode(e){const t=n.alloc(2*e.length);let r=0;return e.forEach((e=>{if(e>65535)throw new RangeError(`uint16be.encode: UINT16BE character code out of range: char[${r/2}]: ${e}`);t[r++]=e>>8&f[8],t[r++]=e&f[8]})),t},decode(e){if(e.length%2>0)throw new RangeError(`uint16be.decode: UINT16BE byte length must be even multiple of 2: length: ${e.length}`);const t=[];for(let r=0;r<e.length;r+=2)t.push((e[r]<<8)+e[r+1]);return t}},t.uint16le={encode(e){const t=n.alloc(2*e.length);let r=0;return e.forEach((e=>{if(e>65535)throw new RangeError(`uint16le.encode: UINT16LE character code out of range: char[${r/2}]: ${e}`);t[r++]=e&f[8],t[r++]=e>>8&f[8]})),t},decode(e){if(e.length%2>0)throw new RangeError(`uint16le.decode: UINT16LE byte length must be even multiple of 2: length: ${e.length}`);const t=[];for(let r=0;r<e.length;r+=2)t.push((e[r+1]<<8)+e[r]);return t}},t.uint32be={encode(e){const t=n.alloc(4*e.length);let r=0;return e.forEach((e=>{t[r++]=e>>24&f[8],t[r++]=e>>16&f[8],t[r++]=e>>8&f[8],t[r++]=e&f[8]})),t},decode(e){if(e.length%4>0)throw new RangeError(`uint32be.decode: UINT32BE byte length must be even multiple of 4: length: ${e.length}`);const t=[];for(let r=0;r<e.length;r+=4)t.push((e[r]<<24)+(e[r+1]<<16)+(e[r+2]<<8)+e[r+3]);return t}},t.uint32le={encode(e){const t=n.alloc(4*e.length);let r=0;return e.forEach((e=>{t[r++]=e&f[8],t[r++]=e>>8&f[8],t[r++]=e>>16&f[8],t[r++]=e>>24&f[8]})),t},decode(e){if(e.length%4>0)throw new RangeError(`uint32le.decode: UINT32LE byte length must be even multiple of 4: length: ${e.length}`);const t=[];for(let r=0;r<e.length;r+=4)t.push((e[r+3]<<24)+(e[r+2]<<16)+(e[r+1]<<8)+e[r]);return t}},t.string={encode(e){return t.utf16le.encode(e).toString("utf16le")},decode(e){return t.utf16le.decode(n.from(e,"utf16le"),0)}},t.escaped={encode(e){const t=[];for(let r=0;r<e.length;r+=1){const o=e[r];if(96===o)t.push(o),t.push(o);else if(10===o)t.push(o);else if(o>=32&&o<=126)t.push(o);else{let e="";if(o>=0&&o<=31)e+=`\`x${u[o]}`;else if(o>=127&&o<=255)e+=`\`x${u[o]}`;else if(o>=256&&o<=65535)e+=`\`u${u[o>>8&f[8]]}${u[o&f[8]]}`;else{if(!(o>=65536&&o<=4294967295))throw new Error("escape.encode(char): char > 0xffffffff not allowed");{e+="`u{";const t=o>>24&f[8];t>0&&(e+=u[t]),e+=`${u[o>>16&f[8]]+u[o>>8&f[8]]+u[o&f[8]]}}`}}n.from(e).forEach((e=>{t.push(e)}))}}return n.from(t)},decode(e){function t(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function r(e,r,n){const o={char:null,nexti:e+2,error:!0};if(e+1<r&&t(n[e])&&t(n[e+1])){const t=String.fromCodePoint(n[e],n[e+1]);o.char=parseInt(t,16),Number.isNaN(o.char)||(o.error=!1)}return o}function n(e,r,n){const o={char:null,nexti:e+4,error:!0};if(e+3<r&&t(n[e])&&t(n[e+1])&&t(n[e+2])&&t(n[e+3])){const t=String.fromCodePoint(n[e],n[e+1],n[e+2],n[e+3]);o.char=parseInt(t,16),Number.isNaN(o.char)||(o.error=!1)}return o}function o(e,r,n){const o={char:null,nexti:e+4,error:!0};let a="";for(;e<r&&t(n[e]);)a+=String.fromCodePoint(n[e]),e+=1;return o.char=parseInt(a,16),125!==n[e]||Number.isNaN(o.char)||(o.error=!1),o.nexti=e+1,o}const a=[],c=e.length;let s,f,u,l=0;for(;l<c;){const t=!0;for(;t;){if(u=!0,96!==e[l]){a.push(e[l]),l+=1,u=!1;break}if(s=l+1,s>=c)break;if(96===e[s]){a.push(96),l+=2,u=!1;break}if(120===e[s]){if(f=r(s+1,c,e),f.error)break;a.push(f.char),l=f.nexti,u=!1;break}if(117===e[s]){if(123===e[s+1]){if(f=o(s+2,c,e),f.error)break;a.push(f.char),l=f.nexti,u=!1;break}if(f=n(s+1,c,e),f.error)break;a.push(f.char),l=f.nexti,u=!1;break}break}if(u)throw new Error(`escaped.decode: ill-formed escape sequence at buf[${l}]`)}return a}};const i=10;t.lineEnds={crlf(e){const t=[];let r=0;for(;r<e.length;)switch(e[r]){case 13:r+1<e.length&&e[r+1]===i?r+=2:r+=1,t.push(13),t.push(i);break;case i:t.push(13),t.push(i),r+=1;break;default:t.push(e[r]),r+=1}return t.length>0&&t[t.length-1]!==i&&(t.push(13),t.push(i)),t},lf(e){const t=[];let r=0;for(;r<e.length;)switch(e[r]){case 13:r+1<e.length&&e[r+1]===i?r+=2:r+=1,t.push(i);break;case i:t.push(i),r+=1;break;default:t.push(e[r]),r+=1}return t.length>0&&t[t.length-1]!==i&&t.push(i),t}},t.base64={encode(e){if(0===e.length)return n.alloc(0);let t,r,o,a=e.length%3;a=a>0?3-a:0;let c=(e.length+a)/3;const s=n.alloc(4*c);a>0&&(c-=1),t=0,r=0;for(let n=0;n<c;n+=1)o=e[t++]<<16,o+=e[t++]<<8,o+=e[t++],s[r++]=h[o>>18&f[6]],s[r++]=h[o>>12&f[6]],s[r++]=h[o>>6&f[6]],s[r++]=h[o&f[6]];return 0===a?s:1===a?(o=e[t++]<<16,o+=e[t]<<8,s[r++]=h[o>>18&f[6]],s[r++]=h[o>>12&f[6]],s[r++]=h[o>>6&f[6]],s[r]=h[64],s):2===a?(o=e[t]<<16,s[r++]=h[o>>18&f[6]],s[r++]=h[o>>12&f[6]],s[r++]=h[64],s[r]=h[64],s):void 0},decode(e){if(0===e.length)return n.alloc(0);const t=function(e){const t=[];let r=0;for(let n=0;n<e.length;n+=1){const o=e[n],a=!0;for(;a&&32!==o&&9!==o&&10!==o&&13!==o;){if(o>=65&&o<=90){t.push(o-65);break}if(o>=97&&o<=122){t.push(o-71);break}if(o>=48&&o<=57){t.push(o+4);break}if(43===o){t.push(62);break}if(47===o){t.push(63);break}if(61===o){t.push(64),r+=1;break}throw new RangeError(`base64.decode: invalid character buf[${n}]: ${o}`)}}if(t.length%4>0)throw new RangeError(`base64.decode: string length not integral multiple of 4: ${t.length}`);switch(r){case 0:break;case 1:if(64!==t[t.length-1])throw new RangeError("base64.decode: one tail character found: not last character");break;case 2:if(64!==t[t.length-1]||64!==t[t.length-2])throw new RangeError("base64.decode: two tail characters found: not last characters");break;default:throw new RangeError(`base64.decode: more than two tail characters found: ${r}`)}return{tail:r,buf:n.from(t)}}(e),{tail:r}=t,o=t.buf;let a,c,s,u=o.length/4;const l=n.alloc(3*u-r);r>0&&(u-=1),c=0,a=0;for(let e=0;e<u;e+=1)s=o[a++]<<18,s+=o[a++]<<12,s+=o[a++]<<6,s+=o[a++],l[c++]=s>>16&f[8],l[c++]=s>>8&f[8],l[c++]=s&f[8];return 1===r&&(s=o[a++]<<18,s+=o[a++]<<12,s+=o[a]<<6,l[c++]=s>>16&f[8],l[c]=s>>8&f[8]),2===r&&(s=o[a++]<<18,s+=o[a++]<<12,l[c]=s>>16&f[8]),l},toString(e){if(e.length%4>0)throw new RangeError(`base64.toString: input buffer length not multiple of 4: ${e.length}`);let t="",r=0;function n(e,n,o,a){switch(r){case 76:t+=`\r\n${e}${n}${o}${a}`,r=4;break;case 75:t+=`${e}\r\n${n}${o}${a}`,r=3;break;case 74:t+=`${e+n}\r\n${o}${a}`,r=2;break;case 73:t+=`${e+n+o}\r\n${a}`,r=1;break;default:t+=e+n+o+a,r+=4}}for(let t=0;t<e.length;t+=4){for(let r=t;r<t+4;r+=1)if(!((o=e[r])>=65&&o<=90||o>=97&&o<=122||o>=48&&o<=57||43===o||47===o||61===o))throw new RangeError(`base64.toString: buf[${r}]: ${e[r]} : not valid base64 character code`);n(String.fromCharCode(e[t]),String.fromCharCode(e[t+1]),String.fromCharCode(e[t+2]),String.fromCharCode(e[t+3]))}var o;return t}}}}]);