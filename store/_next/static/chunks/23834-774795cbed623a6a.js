(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[23834],{587404:function(e,t,n){"use strict";var r,s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ParsedMessage=void 0;const o=s(n(1989)),i=s(n(181260)),a=n(721430);class c{static generateApi(){const e=new o.default('\nsign-in-with-ethereum =\n    [ scheme "://" ] domain %s" wants you to sign in with your Ethereum account:" LF\n    address LF\n    LF\n    [ statement LF ]\n    LF\n    %s"URI: " URI LF\n    %s"Version: " version LF\n    %s"Chain ID: " chain-id LF\n    %s"Nonce: " nonce LF\n    %s"Issued At: " issued-at\n    [ LF %s"Expiration Time: " expiration-time ]\n    [ LF %s"Not Before: " not-before ]\n    [ LF %s"Request ID: " request-id ]\n    [ LF %s"Resources:"\n    resources ]\n\ndomain = authority\n\naddress = "0x" 40*40HEXDIG\n    ; Must also conform to captilization\n    ; checksum encoding specified in EIP-55\n    ; where applicable (EOAs).\n\nstatement = 1*( reserved / unreserved / " " )\n    ; The purpose is to exclude LF (line breaks).\n\nversion = "1"\n\nnonce = 8*( ALPHA / DIGIT )\n\nissued-at = date-time\nexpiration-time = date-time\nnot-before = date-time\n\nrequest-id = *pchar\n\nchain-id = 1*DIGIT\n    ; See EIP-155 for valid CHAIN_IDs.\n\nresources = *( LF resource )\n\nresource = "- " URI\n\n; ------------------------------------------------------------------------------\n; RFC 3986\n\nURI           = scheme ":" hier-part [ "?" query ] [ "#" fragment ]\n\nhier-part     = "//" authority path-abempty\n              / path-absolute\n              / path-rootless\n              / path-empty\n\nscheme        = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )\n\nauthority     = [ userinfo "@" ] host [ ":" port ]\nuserinfo      = *( unreserved / pct-encoded / sub-delims / ":" )\nhost          = IP-literal / IPv4address / reg-name\nport          = *DIGIT\n\nIP-literal    = "[" ( IPv6address / IPvFuture  ) "]"\n\nIPvFuture     = "v" 1*HEXDIG "." 1*( unreserved / sub-delims / ":" )\n\nIPv6address   =                            6( h16 ":" ) ls32\n              /                       "::" 5( h16 ":" ) ls32\n              / [               h16 ] "::" 4( h16 ":" ) ls32\n              / [ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32\n              / [ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32\n              / [ *3( h16 ":" ) h16 ] "::"    h16 ":"   ls32\n              / [ *4( h16 ":" ) h16 ] "::"              ls32\n              / [ *5( h16 ":" ) h16 ] "::"              h16\n              / [ *6( h16 ":" ) h16 ] "::"\n\nh16           = 1*4HEXDIG\nls32          = ( h16 ":" h16 ) / IPv4address\nIPv4address   = dec-octet "." dec-octet "." dec-octet "." dec-octet\ndec-octet     = DIGIT                 ; 0-9\n                 / %x31-39 DIGIT         ; 10-99\n                 / "1" 2DIGIT            ; 100-199\n                 / "2" %x30-34 DIGIT     ; 200-249\n                 / "25" %x30-35          ; 250-255\n\nreg-name      = *( unreserved / pct-encoded / sub-delims )\n\npath-abempty  = *( "/" segment )\npath-absolute = "/" [ segment-nz *( "/" segment ) ]\npath-rootless = segment-nz *( "/" segment )\npath-empty    = 0pchar\n\nsegment       = *pchar\nsegment-nz    = 1*pchar\n\npchar         = unreserved / pct-encoded / sub-delims / ":" / "@"\n\nquery         = *( pchar / "/" / "?" )\n\nfragment      = *( pchar / "/" / "?" )\n\npct-encoded   = "%" HEXDIG HEXDIG\n\nunreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"\nreserved      = gen-delims / sub-delims\ngen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"\nsub-delims    = "!" / "$" / "&" / "\'" / "(" / ")"\n              / "*" / "+" / "," / ";" / "="\n\n; ------------------------------------------------------------------------------\n; RFC 3339\n\ndate-fullyear   = 4DIGIT\ndate-month      = 2DIGIT  ; 01-12\ndate-mday       = 2DIGIT  ; 01-28, 01-29, 01-30, 01-31 based on\n                          ; month/year\ntime-hour       = 2DIGIT  ; 00-23\ntime-minute     = 2DIGIT  ; 00-59\ntime-second     = 2DIGIT  ; 00-58, 00-59, 00-60 based on leap second\n                          ; rules\ntime-secfrac    = "." 1*DIGIT\ntime-numoffset  = ("+" / "-") time-hour ":" time-minute\ntime-offset     = "Z" / time-numoffset\n\npartial-time    = time-hour ":" time-minute ":" time-second\n                  [time-secfrac]\nfull-date       = date-fullyear "-" date-month "-" date-mday\nfull-time       = partial-time time-offset\n\ndate-time       = full-date "T" full-time\n\n; ------------------------------------------------------------------------------\n; RFC 5234\n\nALPHA          =  %x41-5A / %x61-7A   ; A-Z / a-z\nLF             =  %x0A\n                  ; linefeed\nDIGIT          =  %x30-39\n                  ; 0-9\nHEXDIG         =  DIGIT / "A" / "B" / "C" / "D" / "E" / "F"\n');if(e.generate(),e.errors.length)throw console.error(e.errorsToAscii()),console.error(e.linesToAscii()),console.log(e.displayAttributeErrors()),new Error("ABNF grammar has errors");return e.toObject()}}r=c,c.grammarObj=r.generateApi();t.ParsedMessage=class{constructor(e){const t=new i.default.parser;t.ast=new i.default.ast;const n=i.default.ids;t.ast.callbacks.scheme=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&0===r&&(o.scheme=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks.domain=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.domain=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks.address=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.address=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks.statement=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.statement=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks.uri=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.uri||(o.uri=i.default.utils.charsToString(t,r,s))),a};t.ast.callbacks.version=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.version=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks["chain-id"]=function(e,t,r,s,o){const c=n.SEM_OK;return e===n.SEM_PRE&&(o.chainId=(0,a.parseIntegerNumber)(i.default.utils.charsToString(t,r,s))),c};t.ast.callbacks.nonce=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.nonce=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks["issued-at"]=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.issuedAt=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks["expiration-time"]=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.expirationTime=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks["not-before"]=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.notBefore=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks["request-id"]=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.requestId=i.default.utils.charsToString(t,r,s)),a};t.ast.callbacks.resources=function(e,t,r,s,o){const a=n.SEM_OK;return e===n.SEM_PRE&&(o.resources=i.default.utils.charsToString(t,r,s).slice(3).split("\n- ")),a};const r=t.parse(c.grammarObj,"sign-in-with-ethereum",e);if(!r.success)throw new Error(`Invalid message: ${JSON.stringify(r)}`);const s={};t.ast.translate(s);for(const[e,t]of Object.entries(s))this[e]=t;if(0===this.domain.length)throw new Error("Domain cannot be empty.");if(!(0,a.isEIP55Address)(this.address))throw new Error("Address not conformant to EIP-55.")}}},801792:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,s)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),s=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.ParsedMessage=void 0;const o=n(587404);Object.defineProperty(t,"ParsedMessage",{enumerable:!0,get:function(){return o.ParsedMessage}}),s(n(721430),t)},721430:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseIntegerNumber=t.isEIP55Address=void 0;const r=n(448998),s=n(735852);t.isEIP55Address=e=>{if(42!=e.length)return!1;const t=`${e}`.toLowerCase().replace("0x",""),n=(0,s.bytesToHex)((0,r.keccak_256)(t));let o="0x";for(let e=0;e<t.length;e++)parseInt(n[e],16)>=8?o+=t[e].toUpperCase():o+=t[e];return e===o};t.parseIntegerNumber=e=>{const t=parseInt(e);if(isNaN(t))throw new Error("Invalid number.");if(t===1/0)throw new Error("Invalid number.");return t}},925622:function(e){"use strict";!function(){const t=2147483647;function n(e){const t=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let n=1779033703,r=3144134277,s=1013904242,o=2773480762,i=1359893119,a=2600822924,c=528734635,u=1541459225;const l=new Uint32Array(64);function f(e){let f=0,h=e.length;for(;h>=64;){let d,p,m,g,I,b=n,E=r,w=s,_=o,y=i,P=a,S=c,A=u;for(p=0;p<16;p++)m=f+4*p,l[p]=(255&e[m])<<24|(255&e[m+1])<<16|(255&e[m+2])<<8|255&e[m+3];for(p=16;p<64;p++)d=l[p-2],g=(d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10,d=l[p-15],I=(d>>>7|d<<25)^(d>>>18|d<<14)^d>>>3,l[p]=(g+l[p-7]|0)+(I+l[p-16]|0)|0;for(p=0;p<64;p++)g=(((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(y&P^~y&S)|0)+(A+(t[p]+l[p]|0)|0)|0,I=((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+(b&E^b&w^E&w)|0,A=S,S=P,P=y,y=_+g|0,_=w,w=E,E=b,b=g+I|0;n=n+b|0,r=r+E|0,s=s+w|0,o=o+_|0,i=i+y|0,a=a+P|0,c=c+S|0,u=u+A|0,f+=64,h-=64}}f(e);let h,d=e.length%64,p=e.length/536870912|0,m=e.length<<3,g=d<56?56:120,I=e.slice(e.length-d,e.length);for(I.push(128),h=d+1;h<g;h++)I.push(0);return I.push(p>>>24&255),I.push(p>>>16&255),I.push(p>>>8&255),I.push(p>>>0&255),I.push(m>>>24&255),I.push(m>>>16&255),I.push(m>>>8&255),I.push(m>>>0&255),f(I),[n>>>24&255,n>>>16&255,n>>>8&255,n>>>0&255,r>>>24&255,r>>>16&255,r>>>8&255,r>>>0&255,s>>>24&255,s>>>16&255,s>>>8&255,s>>>0&255,o>>>24&255,o>>>16&255,o>>>8&255,o>>>0&255,i>>>24&255,i>>>16&255,i>>>8&255,i>>>0&255,a>>>24&255,a>>>16&255,a>>>8&255,a>>>0&255,c>>>24&255,c>>>16&255,c>>>8&255,c>>>0&255,u>>>24&255,u>>>16&255,u>>>8&255,u>>>0&255]}function r(e,t,r){e=e.length<=64?e:n(e);const s=64+t.length+4,o=new Array(s),i=new Array(64);let a,c=[];for(a=0;a<64;a++)o[a]=54;for(a=0;a<e.length;a++)o[a]^=e[a];for(a=0;a<t.length;a++)o[64+a]=t[a];for(a=s-4;a<s;a++)o[a]=0;for(a=0;a<64;a++)i[a]=92;for(a=0;a<e.length;a++)i[a]^=e[a];function u(){for(let e=s-1;e>=s-4;e--){if(o[e]++,o[e]<=255)return;o[e]=0}}for(;r>=32;)u(),c=c.concat(n(i.concat(n(o)))),r-=32;return r>0&&(u(),c=c.concat(n(i.concat(n(o))).slice(0,r))),c}function s(e,t,n,r,s){let o;for(c(e,16*(2*n-1),s,0,16),o=0;o<2*n;o++)a(e,16*o,s,16),i(s,r),c(s,0,e,t+16*o,16);for(o=0;o<n;o++)c(e,t+2*o*16,e,16*o,16);for(o=0;o<n;o++)c(e,t+16*(2*o+1),e,16*(o+n),16)}function o(e,t){return e<<t|e>>>32-t}function i(e,t){c(e,0,t,0,16);for(let e=8;e>0;e-=2)t[4]^=o(t[0]+t[12],7),t[8]^=o(t[4]+t[0],9),t[12]^=o(t[8]+t[4],13),t[0]^=o(t[12]+t[8],18),t[9]^=o(t[5]+t[1],7),t[13]^=o(t[9]+t[5],9),t[1]^=o(t[13]+t[9],13),t[5]^=o(t[1]+t[13],18),t[14]^=o(t[10]+t[6],7),t[2]^=o(t[14]+t[10],9),t[6]^=o(t[2]+t[14],13),t[10]^=o(t[6]+t[2],18),t[3]^=o(t[15]+t[11],7),t[7]^=o(t[3]+t[15],9),t[11]^=o(t[7]+t[3],13),t[15]^=o(t[11]+t[7],18),t[1]^=o(t[0]+t[3],7),t[2]^=o(t[1]+t[0],9),t[3]^=o(t[2]+t[1],13),t[0]^=o(t[3]+t[2],18),t[6]^=o(t[5]+t[4],7),t[7]^=o(t[6]+t[5],9),t[4]^=o(t[7]+t[6],13),t[5]^=o(t[4]+t[7],18),t[11]^=o(t[10]+t[9],7),t[8]^=o(t[11]+t[10],9),t[9]^=o(t[8]+t[11],13),t[10]^=o(t[9]+t[8],18),t[12]^=o(t[15]+t[14],7),t[13]^=o(t[12]+t[15],9),t[14]^=o(t[13]+t[12],13),t[15]^=o(t[14]+t[13],18);for(let n=0;n<16;++n)e[n]+=t[n]}function a(e,t,n,r){for(let s=0;s<r;s++)n[s]^=e[t+s]}function c(e,t,n,r,s){for(;s--;)n[r++]=e[t++]}function u(e){if(!e||"number"!=typeof e.length)return!1;for(let t=0;t<e.length;t++){const n=e[t];if("number"!=typeof n||n%1||n<0||n>=256)return!1}return!0}function l(e,t){if("number"!=typeof e||e%1)throw new Error("invalid "+t);return e}function f(e,n,o,i,f,h,d){if(o=l(o,"N"),i=l(i,"r"),f=l(f,"p"),h=l(h,"dkLen"),0===o||o&o-1)throw new Error("N must be power of 2");if(o>t/128/i)throw new Error("N too large");if(i>t/128/f)throw new Error("r too large");if(!u(e))throw new Error("password must be an array or buffer");if(e=Array.prototype.slice.call(e),!u(n))throw new Error("salt must be an array or buffer");n=Array.prototype.slice.call(n);let p=r(e,n,128*f*i);const m=new Uint32Array(32*f*i);for(let e=0;e<m.length;e++){const t=4*e;m[e]=(255&p[t+3])<<24|(255&p[t+2])<<16|(255&p[t+1])<<8|255&p[t+0]}const g=new Uint32Array(64*i),I=new Uint32Array(32*i*o),b=32*i,E=new Uint32Array(16),w=new Uint32Array(16),_=f*o*2;let y,P,S=0,A=null,v=!1,T=0,M=0;const D=d?parseInt(1e3/i):4294967295,O="undefined"!=typeof setImmediate?setImmediate:setTimeout,k=function(){if(v)return d(new Error("cancelled"),S/_);let t;switch(T){case 0:P=32*M*i,c(m,P,g,0,b),T=1,y=0;case 1:t=o-y,t>D&&(t=D);for(let e=0;e<t;e++)c(g,0,I,(y+e)*b,b),s(g,b,i,E,w);if(y+=t,S+=t,d){const e=parseInt(1e3*S/_);if(e!==A){if(v=d(null,S/_),v)break;A=e}}if(y<o)break;y=0,T=2;case 2:t=o-y,t>D&&(t=D);for(let e=0;e<t;e++){const e=g[16*(2*i-1)]&o-1;a(I,e*b,g,b),s(g,b,i,E,w)}if(y+=t,S+=t,d){const e=parseInt(1e3*S/_);if(e!==A){if(v=d(null,S/_),v)break;A=e}}if(y<o)break;if(c(g,0,m,P,b),M++,M<f){T=0;break}p=[];for(let e=0;e<m.length;e++)p.push(255&m[e]),p.push(m[e]>>8&255),p.push(m[e]>>16&255),p.push(m[e]>>24&255);const n=r(e,p,h);return d&&d(null,1,n),n}d&&O(k)};if(!d)for(;;){const e=k();if(null!=e)return e}k()}const h={scrypt:function(e,t,n,r,s,o,i){return new Promise((function(a,c){let u=0;i&&i(0),f(e,t,n,r,s,o,(function(e,t,n){if(e)c(e);else if(n)i&&1!==u&&i(1),a(new Uint8Array(n));else if(i&&t!==u)return u=t,i(t)}))}))},syncScrypt:function(e,t,n,r,s,o){return new Uint8Array(f(e,t,n,r,s,o))}};e.exports=h}()},507117:function(e,t,n){!function(e){"use strict";e.exports.is_uri=n,e.exports.is_http_uri=r,e.exports.is_https_uri=s,e.exports.is_web_uri=o,e.exports.isUri=n,e.exports.isHttpUri=r,e.exports.isHttpsUri=s,e.exports.isWebUri=o;var t=function(e){return e.match(/(?:([^:\/?#]+):)?(?:\/\/([^\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/)};function n(e){if(e&&!/[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(e)&&!/%[^0-9a-f]/i.test(e)&&!/%[0-9a-f](:?[^0-9a-f]|$)/i.test(e)){var n,r,s,o,i,a="",c="";if(a=(n=t(e))[1],r=n[2],s=n[3],o=n[4],i=n[5],a&&a.length&&s.length>=0){if(r&&r.length){if(0!==s.length&&!/^\//.test(s))return}else if(/^\/\//.test(s))return;if(/^[a-z][a-z0-9\+\-\.]*$/.test(a.toLowerCase()))return c+=a+":",r&&r.length&&(c+="//"+r),c+=s,o&&o.length&&(c+="?"+o),i&&i.length&&(c+="#"+i),c}}}function r(e,r){if(n(e)){var s,o,i,a,c="",u="",l="",f="";if(c=(s=t(e))[1],u=s[2],o=s[3],i=s[4],a=s[5],c){if(r){if("https"!=c.toLowerCase())return}else if("http"!=c.toLowerCase())return;if(u)return/:(\d+)$/.test(u)&&(l=u.match(/:(\d+)$/)[0],u=u.replace(/:\d+$/,"")),f+=c+":",f+="//"+u,l&&(f+=l),f+=o,i&&i.length&&(f+="?"+i),a&&a.length&&(f+="#"+a),f}}}function s(e){return r(e,!0)}function o(e){return r(e)||s(e)}}(e=n.nmd(e))}}]);
//# sourceMappingURL=23834-774795cbed623a6a.js.map