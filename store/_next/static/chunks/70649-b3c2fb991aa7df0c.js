"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[70649],{254682:function(e,t,o){o.d(t,{I:function(){return a}});var s=o(777154);const n=(0,s.sj)({loading:!1,open:!1,selectedNetworkId:void 0,activeChain:void 0,initialized:!1}),a={state:n,subscribe(e){return(0,s.Ld)(n,(()=>e(n)))},set(e){Object.assign(n,{...n,...e})}}},921714:function(e,t,o){o.d(t,{RouterController:function(){return l}});var s=o(496146),n=o(777154),a=o(940351),r=o(477221),i=o(35013),c=o(887738),d=o(342215);const u=(0,n.sj)({view:"Connect",history:["Connect"],transactionStack:[]}),l={state:u,subscribeKey(e,t){return(0,s.VW)(u,e,t)},pushTransactionStack(e){u.transactionStack.push(e)},popTransactionStack(e){const t=u.transactionStack.pop();if(t)if(e)this.goBack(),t?.onCancel?.();else{if(t.goBack)this.goBack();else if(t.replace){const e=u.history.indexOf("ConnectingSiwe");e>0?this.goBackToIndex(e-1):(a.I.close(),u.history=[])}else t.view&&this.reset(t.view);t?.onSuccess?.()}},push(e,t){e!==u.view&&(u.view=e,u.history.push(e),u.data=t)},reset(e){u.view=e,u.history=[e]},replace(e,t){u.history.at(-1)===e||(u.view=e,u.history[u.history.length-1]=e,u.data=t)},goBack(){const e=!i.R.state.activeCaipAddress&&"ConnectingFarcaster"===this.state.view;if(u.history.length>1&&!u.history.includes("UnsupportedChain")){u.history.pop();const[e]=u.history.slice(-1);e&&(u.view=e)}else a.I.close();setTimeout((()=>{if(e){r.N.setFarcasterUrl(void 0,i.R.state.activeChain);const e=c.ConnectorController.getAuthConnector();e?.provider?.reload();const t=(0,n.CO)(d.OptionsController.state);e?.provider?.syncDappData?.({metadata:t.metadata,sdkVersion:t.sdkVersion,projectId:t.projectId,sdkType:t.sdkType})}}),100)},goBackToIndex(e){if(u.history.length>1){u.history=u.history.slice(0,e+1);const[t]=u.history.slice(-1);t&&(u.view=t)}}}},678259:function(e,t,o){o.d(t,{S:function(){return m}});var s=o(496146),n=o(777154),a=o(340081),r=o(921714),i=o(477221),c=o(333858),d=o(91609),u=o(668e3),l=o(425398),T=o(669270),k=o(35013),p=o(171489);const h=(0,n.sj)({loading:!1}),m={state:h,subscribe(e){return(0,n.Ld)(h,(()=>e(h)))},subscribeKey(e,t){return(0,s.VW)(h,e,t)},setToken(e){e&&(h.token=(0,n.iH)(e))},setTokenAmount(e){h.sendTokenAmount=e},setReceiverAddress(e){h.receiverAddress=e},setReceiverProfileImageUrl(e){h.receiverProfileImageUrl=e},setReceiverProfileName(e){h.receiverProfileName=e},setGasPrice(e){h.gasPrice=e},setGasPriceInUsd(e){h.gasPriceInUSD=e},setNetworkBalanceInUsd(e){h.networkBalanceInUSD=e},setLoading(e){h.loading=e},sendToken(){switch(k.R.state.activeCaipNetwork?.chainNamespace){case"eip155":return void this.sendEvmToken();case"solana":return void this.sendSolanaToken();default:throw new Error("Unsupported chain")}},sendEvmToken(){this.state.token?.address&&this.state.sendTokenAmount&&this.state.receiverAddress?(l.X.sendEvent({type:"track",event:"SEND_INITIATED",properties:{isSmartAccount:i.N.state.preferredAccountType===T.y_.ACCOUNT_TYPES.SMART_ACCOUNT,token:this.state.token.address,amount:this.state.sendTokenAmount,network:k.R.state.activeCaipNetwork?.caipNetworkId||""}}),this.sendERC20Token({receiverAddress:this.state.receiverAddress,tokenAddress:this.state.token.address,sendTokenAmount:this.state.sendTokenAmount,decimals:this.state.token.quantity.decimals})):this.state.receiverAddress&&this.state.sendTokenAmount&&this.state.gasPrice&&this.state.token?.quantity.decimals&&(l.X.sendEvent({type:"track",event:"SEND_INITIATED",properties:{isSmartAccount:i.N.state.preferredAccountType===T.y_.ACCOUNT_TYPES.SMART_ACCOUNT,token:this.state.token?.symbol,amount:this.state.sendTokenAmount,network:k.R.state.activeCaipNetwork?.caipNetworkId||""}}),this.sendNativeToken({receiverAddress:this.state.receiverAddress,sendTokenAmount:this.state.sendTokenAmount,gasPrice:this.state.gasPrice,decimals:this.state.token.quantity.decimals}))},async fetchNetworkBalance(){const e=await p.n.getMyTokensWithBalance();if(!e)return;const t=e.find((e=>e.address===k.R.getActiveNetworkTokenAddress()));t&&(h.networkBalanceInUSD=t?a.C6.multiply(t.quantity.numeric,t.price).toString():"0")},isInsufficientNetworkTokenForGas(e,t){const o=t||"0";return!!a.C6.bigNumber(e).isZero()||a.C6.bigNumber(a.C6.bigNumber(o)).isGreaterThan(e)},hasInsufficientGasFunds(){let e=!0;return i.N.state.preferredAccountType===T.y_.ACCOUNT_TYPES.SMART_ACCOUNT?e=!1:h.networkBalanceInUSD&&(e=this.isInsufficientNetworkTokenForGas(h.networkBalanceInUSD,h.gasPriceInUSD)),e},async sendNativeToken(e){r.RouterController.pushTransactionStack({view:"Account",goBack:!1});const t=e.receiverAddress,o=i.N.state.address,s=c.l.parseUnits(e.sendTokenAmount.toString(),Number(e.decimals));try{await c.l.sendTransaction({chainNamespace:"eip155",to:t,address:o,data:"0x",value:s??BigInt(0),gasPrice:e.gasPrice}),d.K.showSuccess("Transaction started"),l.X.sendEvent({type:"track",event:"SEND_SUCCESS",properties:{isSmartAccount:i.N.state.preferredAccountType===T.y_.ACCOUNT_TYPES.SMART_ACCOUNT,token:this.state.token?.symbol||"",amount:e.sendTokenAmount,network:k.R.state.activeCaipNetwork?.caipNetworkId||""}}),this.resetSend()}catch(t){l.X.sendEvent({type:"track",event:"SEND_ERROR",properties:{isSmartAccount:i.N.state.preferredAccountType===T.y_.ACCOUNT_TYPES.SMART_ACCOUNT,token:this.state.token?.symbol||"",amount:e.sendTokenAmount,network:k.R.state.activeCaipNetwork?.caipNetworkId||""}}),d.K.showError("Something went wrong")}},async sendERC20Token(e){r.RouterController.pushTransactionStack({view:"Account",goBack:!1});const t=c.l.parseUnits(e.sendTokenAmount.toString(),Number(e.decimals));try{if(i.N.state.address&&e.sendTokenAmount&&e.receiverAddress&&e.tokenAddress){const o=u.j.getPlainAddress(e.tokenAddress);await c.l.writeContract({fromAddress:i.N.state.address,tokenAddress:o,args:[e.receiverAddress,t??BigInt(0)],method:"transfer",abi:a.gY.getERC20Abi(o),chainNamespace:"eip155"}),d.K.showSuccess("Transaction started"),this.resetSend()}}catch(e){d.K.showError("Something went wrong")}},sendSolanaToken(){this.state.sendTokenAmount&&this.state.receiverAddress?(r.RouterController.pushTransactionStack({view:"Account",goBack:!1}),c.l.sendTransaction({chainNamespace:"solana",to:this.state.receiverAddress,value:this.state.sendTokenAmount}).then((()=>{this.resetSend(),i.N.fetchTokenBalance()})).catch((e=>{d.K.showError("Failed to send transaction. Please try again."),console.error("SendController:sendToken - failed to send solana transaction",e)}))):d.K.showError("Please enter a valid amount and receiver address")},resetSend(){h.token=void 0,h.sendTokenAmount=void 0,h.receiverAddress=void 0,h.receiverProfileImageUrl=void 0,h.receiverProfileName=void 0,h.loading=!1}}},91609:function(e,t,o){o.d(t,{K:function(){return c}});var s=o(496146),n=o(777154),a=o(668e3);const r=Object.freeze({message:"",variant:"success",svg:void 0,open:!1,autoClose:!0}),i=(0,n.sj)({...r}),c={state:i,subscribeKey(e,t){return(0,s.VW)(i,e,t)},showLoading(e,t={}){this._showMessage({message:e,variant:"loading",...t})},showSuccess(e){this._showMessage({message:e,variant:"success"})},showSvg(e,t){this._showMessage({message:e,svg:t})},showError(e){const t=a.j.parseError(e);this._showMessage({message:t,variant:"error"})},hide(){i.message=r.message,i.variant=r.variant,i.svg=r.svg,i.open=r.open,i.autoClose=r.autoClose},_showMessage({message:e,svg:t,variant:o="success",autoClose:s=r.autoClose}){i.open?(i.open=!1,setTimeout((()=>{i.message=e,i.variant=o,i.svg=t,i.open=!0,i.autoClose=s}),150)):(i.message=e,i.variant=o,i.svg=t,i.open=!0,i.autoClose=s)}}},462650:function(e,t,o){o.d(t,{nY:function(){return y}});var s=o(496146),n=o(777154),a=o(477221),r=o(48265),i=o(333858),c=o(171489),d=o(91609),u=o(921714),l=o(340081),T=o(668e3),k=o(331906),p=o(342215),h=o(156874),m=o(425398),g=o(669270),A=o(437780),w=o(35013);const v=15e4;Error;const S={initializing:!1,initialized:!1,loadingPrices:!1,loadingQuote:!1,loadingApprovalTransaction:!1,loadingBuildTransaction:!1,loadingTransaction:!1,fetchError:!1,approvalTransaction:void 0,swapTransaction:void 0,transactionError:void 0,sourceToken:void 0,sourceTokenAmount:"",sourceTokenPriceInUSD:0,toToken:void 0,toTokenAmount:"",toTokenPriceInUSD:0,networkPrice:"0",networkBalanceInUSD:"0",networkTokenSymbol:"",inputError:void 0,slippage:r.bq.CONVERT_SLIPPAGE_TOLERANCE,tokens:void 0,popularTokens:void 0,suggestedTokens:void 0,foundTokens:void 0,myTokensWithBalance:void 0,tokensPriceMap:{},gasFee:"0",gasPriceInUSD:0,priceImpact:void 0,maxSlippage:void 0,providerFee:void 0},f=(0,n.sj)(S),y={state:f,subscribe(e){return(0,n.Ld)(f,(()=>e(f)))},subscribeKey(e,t){return(0,s.VW)(f,e,t)},getParams(){const e=w.R.state.activeCaipAddress,t=w.R.state.activeChain,o=T.j.getPlainAddress(e),s=w.R.getActiveNetworkTokenAddress(),n=A.M.getConnectedConnectorId(t);if(!o)throw new Error("No address found to swap the tokens from.");const a=!f.toToken?.address||!f.toToken?.decimals,r=!f.sourceToken?.address||!f.sourceToken?.decimals||!l.C6.bigNumber(f.sourceTokenAmount).isGreaterThan(0),i=!f.sourceTokenAmount;return{networkAddress:s,fromAddress:o,fromCaipAddress:e,sourceTokenAddress:f.sourceToken?.address,toTokenAddress:f.toToken?.address,toTokenAmount:f.toTokenAmount,toTokenDecimals:f.toToken?.decimals,sourceTokenAmount:f.sourceTokenAmount,sourceTokenDecimals:f.sourceToken?.decimals,invalidToToken:a,invalidSourceToken:r,invalidSourceTokenAmount:i,availableToSwap:e&&!a&&!r&&!i,isAuthConnector:n===l.bq.CONNECTOR_ID.AUTH}},setSourceToken(e){if(!e)return f.sourceToken=e,f.sourceTokenAmount="",void(f.sourceTokenPriceInUSD=0);f.sourceToken=e,this.setTokenPrice(e.address,"sourceToken")},setSourceTokenAmount(e){f.sourceTokenAmount=e},setToToken(e){if(!e)return f.toToken=e,f.toTokenAmount="",void(f.toTokenPriceInUSD=0);f.toToken=e,this.setTokenPrice(e.address,"toToken")},setToTokenAmount(e){f.toTokenAmount=e?l.C6.formatNumberToLocalString(e,6):""},async setTokenPrice(e,t){let o=f.tokensPriceMap[e]||0;o||(f.loadingPrices=!0,o=await this.getAddressPrice(e)),"sourceToken"===t?f.sourceTokenPriceInUSD=o:"toToken"===t&&(f.toTokenPriceInUSD=o),f.loadingPrices&&(f.loadingPrices=!1),this.getParams().availableToSwap&&this.swapTokens()},switchTokens(){if(f.initializing||!f.initialized)return;const e=f.toToken?{...f.toToken}:void 0,t=f.sourceToken?{...f.sourceToken}:void 0,o=e&&""===f.toTokenAmount?"1":f.toTokenAmount;this.setSourceToken(e),this.setToToken(t),this.setSourceTokenAmount(o),this.setToTokenAmount(""),this.swapTokens()},resetState(){f.myTokensWithBalance=S.myTokensWithBalance,f.tokensPriceMap=S.tokensPriceMap,f.initialized=S.initialized,f.sourceToken=S.sourceToken,f.sourceTokenAmount=S.sourceTokenAmount,f.sourceTokenPriceInUSD=S.sourceTokenPriceInUSD,f.toToken=S.toToken,f.toTokenAmount=S.toTokenAmount,f.toTokenPriceInUSD=S.toTokenPriceInUSD,f.networkPrice=S.networkPrice,f.networkTokenSymbol=S.networkTokenSymbol,f.networkBalanceInUSD=S.networkBalanceInUSD,f.inputError=S.inputError},resetValues(){const{networkAddress:e}=this.getParams(),t=f.tokens?.find((t=>t.address===e));this.setSourceToken(t),this.setToToken(void 0)},getApprovalLoadingState(){return f.loadingApprovalTransaction},clearError(){f.transactionError=void 0},async initializeState(){if(!f.initializing){if(f.initializing=!0,!f.initialized)try{await this.fetchTokens(),f.initialized=!0}catch(e){f.initialized=!1,d.K.showError("Failed to initialize swap"),u.RouterController.goBack()}f.initializing=!1}},async fetchTokens(){const{networkAddress:e}=this.getParams();await this.getTokenList(),await this.getNetworkTokenPrice(),await this.getMyTokensWithBalance();const t=f.tokens?.find((t=>t.address===e));t&&(f.networkTokenSymbol=t.symbol,this.setSourceToken(t),this.setSourceTokenAmount("1"))},async getTokenList(){const e=await c.n.getTokenList();f.tokens=e,f.popularTokens=e.sort(((e,t)=>e.symbol<t.symbol?-1:e.symbol>t.symbol?1:0)),f.suggestedTokens=e.filter((e=>!!r.bq.SWAP_SUGGESTED_TOKENS.includes(e.symbol)),{})},async getAddressPrice(e){const t=f.tokensPriceMap[e];if(t)return t;const o=(await k.L.fetchTokenPrice({projectId:p.OptionsController.state.projectId,addresses:[e]})).fungibles||[],s=[...f.tokens||[],...f.myTokensWithBalance||[]],n=s?.find((t=>t.address===e))?.symbol,a=o.find((e=>e.symbol.toLowerCase()===n?.toLowerCase()))?.price||0,r=parseFloat(a.toString());return f.tokensPriceMap[e]=r,r},async getNetworkTokenPrice(){const{networkAddress:e}=this.getParams(),t=await k.L.fetchTokenPrice({projectId:p.OptionsController.state.projectId,addresses:[e]}).catch((()=>(d.K.showError("Failed to fetch network token price"),{fungibles:[]}))),o=t.fungibles?.[0],s=o?.price.toString()||"0";f.tokensPriceMap[e]=parseFloat(s),f.networkTokenSymbol=o?.symbol||"",f.networkPrice=s},async getMyTokensWithBalance(e){const t=await c.n.getMyTokensWithBalance(e);t&&(await this.getInitialGasPrice(),this.setBalances(t))},setBalances(e){const{networkAddress:t}=this.getParams(),o=w.R.state.activeCaipNetwork;if(!o)return;const s=e.find((e=>e.address===t));e.forEach((e=>{f.tokensPriceMap[e.address]=e.price||0})),f.myTokensWithBalance=e.filter((e=>e.address.startsWith(o.caipNetworkId))),f.networkBalanceInUSD=s?l.C6.multiply(s.quantity.numeric,s.price).toString():"0"},async getInitialGasPrice(){const e=await c.n.fetchGasPrice();if(!e)return{gasPrice:null,gasPriceInUSD:null};if("solana"===w.R.state?.activeCaipNetwork?.chainNamespace)return f.gasFee=e.standard??"0",f.gasPriceInUSD=l.C6.multiply(e.standard,f.networkPrice).dividedBy(1e9).toNumber(),{gasPrice:BigInt(f.gasFee),gasPriceInUSD:Number(f.gasPriceInUSD)};{const t=e.standard??"0",o=BigInt(t),s=BigInt(v),n=h.l.getGasPriceInUSD(f.networkPrice,s,o);return f.gasFee=t,f.gasPriceInUSD=n,{gasPrice:o,gasPriceInUSD:n}}},async swapTokens(){const e=a.N.state.address,t=f.sourceToken,o=f.toToken,s=l.C6.bigNumber(f.sourceTokenAmount).isGreaterThan(0);if(!o||!t||f.loadingPrices||!s)return;f.loadingQuote=!0;const n=l.C6.bigNumber(f.sourceTokenAmount).multipliedBy(10**t.decimals).integerValue(),r=await k.L.fetchSwapQuote({userAddress:e,projectId:p.OptionsController.state.projectId,from:t.address,to:o.address,gasPrice:f.gasFee,amount:n.toString()});f.loadingQuote=!1;const i=r?.quotes?.[0]?.toAmount;if(!i)return;const c=l.C6.bigNumber(i).dividedBy(10**o.decimals).toString();this.setToTokenAmount(c);this.hasInsufficientToken(f.sourceTokenAmount,t.address)?f.inputError="Insufficient balance":(f.inputError=void 0,this.setTransactionDetails())},async getTransaction(){const{fromCaipAddress:e,availableToSwap:t}=this.getParams(),o=f.sourceToken,s=f.toToken;if(e&&t&&o&&s&&!f.loadingQuote)try{f.loadingBuildTransaction=!0;let t;return t=await c.n.fetchSwapAllowance({userAddress:e,tokenAddress:o.address,sourceTokenAmount:f.sourceTokenAmount,sourceTokenDecimals:o.decimals})?await this.createSwapTransaction():await this.createAllowanceTransaction(),f.loadingBuildTransaction=!1,f.fetchError=!1,t}catch(e){return u.RouterController.goBack(),d.K.showError("Failed to check allowance"),f.loadingBuildTransaction=!1,f.approvalTransaction=void 0,f.swapTransaction=void 0,void(f.fetchError=!0)}},async createAllowanceTransaction(){const{fromCaipAddress:e,fromAddress:t,sourceTokenAddress:o,toTokenAddress:s}=this.getParams();if(e&&s){if(!o)throw new Error("createAllowanceTransaction - No source token address found.");try{const n=await k.L.generateApproveCalldata({projectId:p.OptionsController.state.projectId,from:o,to:s,userAddress:e}),a=await i.l.estimateGas({address:t,to:T.j.getPlainAddress(n.tx.to),data:n.tx.data}),r={data:n.tx.data,to:T.j.getPlainAddress(n.tx.from),gas:a,gasPrice:BigInt(n.tx.eip155.gasPrice),value:BigInt(n.tx.value),toAmount:f.toTokenAmount};return f.swapTransaction=void 0,f.approvalTransaction={data:r.data,to:r.to,gas:r.gas??BigInt(0),gasPrice:r.gasPrice,value:r.value,toAmount:r.toAmount},{data:r.data,to:r.to,gas:r.gas??BigInt(0),gasPrice:r.gasPrice,value:r.value,toAmount:r.toAmount}}catch(e){return u.RouterController.goBack(),d.K.showError("Failed to create approval transaction"),f.approvalTransaction=void 0,f.swapTransaction=void 0,void(f.fetchError=!0)}}},async createSwapTransaction(){const{networkAddress:e,fromCaipAddress:t,sourceTokenAmount:o}=this.getParams(),s=f.sourceToken,n=f.toToken;if(!(t&&o&&s&&n))return;const a=i.l.parseUnits(o,s.decimals)?.toString();try{const o=await k.L.generateSwapCalldata({projectId:p.OptionsController.state.projectId,userAddress:t,from:s.address,to:n.address,amount:a}),r=s.address===e,i=BigInt(o.tx.eip155.gas),c=BigInt(o.tx.eip155.gasPrice),d={data:o.tx.data,to:T.j.getPlainAddress(o.tx.to),gas:i,gasPrice:c,value:r?BigInt(a??"0"):BigInt("0"),toAmount:f.toTokenAmount};return f.gasPriceInUSD=h.l.getGasPriceInUSD(f.networkPrice,i,c),f.approvalTransaction=void 0,f.swapTransaction=d,d}catch(e){return u.RouterController.goBack(),d.K.showError("Failed to create transaction"),f.approvalTransaction=void 0,f.swapTransaction=void 0,void(f.fetchError=!0)}},async sendTransactionForApproval(e){const{fromAddress:t,isAuthConnector:o}=this.getParams();f.loadingApprovalTransaction=!0;const s="Approve limit increase in your wallet";o?u.RouterController.pushTransactionStack({view:null,goBack:!0,onSuccess(){d.K.showLoading(s)}}):d.K.showLoading(s);try{await i.l.sendTransaction({address:t,to:e.to,data:e.data,gas:e.gas,gasPrice:BigInt(e.gasPrice),value:e.value,chainNamespace:"eip155"}),await this.swapTokens(),await this.getTransaction(),f.approvalTransaction=void 0,f.loadingApprovalTransaction=!1}catch(e){const t=e;f.transactionError=t?.shortMessage,f.loadingApprovalTransaction=!1,d.K.showError(t?.shortMessage||"Transaction error"),m.X.sendEvent({type:"track",event:"SWAP_APPROVAL_ERROR",properties:{message:t?.shortMessage||t?.message||"Unknown",network:w.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:this.state.sourceToken?.symbol||"",swapToToken:this.state.toToken?.symbol||"",swapFromAmount:this.state.sourceTokenAmount||"",swapToAmount:this.state.toTokenAmount||"",isSmartAccount:a.N.state.preferredAccountType===g.y_.ACCOUNT_TYPES.SMART_ACCOUNT}})}},async sendTransactionForSwap(e){if(!e)return;const{fromAddress:t,toTokenAmount:o,isAuthConnector:s}=this.getParams();f.loadingTransaction=!0;const n=`Swapping ${f.sourceToken?.symbol} to ${l.C6.formatNumberToLocalString(o,3)} ${f.toToken?.symbol}`,r=`Swapped ${f.sourceToken?.symbol} to ${l.C6.formatNumberToLocalString(o,3)} ${f.toToken?.symbol}`;s?u.RouterController.pushTransactionStack({view:"Account",goBack:!1,onSuccess(){d.K.showLoading(n),y.resetState()}}):d.K.showLoading("Confirm transaction in your wallet");try{const o=[f.sourceToken?.address,f.toToken?.address].join(","),n=await i.l.sendTransaction({address:t,to:e.to,data:e.data,gas:e.gas,gasPrice:BigInt(e.gasPrice),value:e.value,chainNamespace:"eip155"});return f.loadingTransaction=!1,d.K.showSuccess(r),m.X.sendEvent({type:"track",event:"SWAP_SUCCESS",properties:{network:w.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:this.state.sourceToken?.symbol||"",swapToToken:this.state.toToken?.symbol||"",swapFromAmount:this.state.sourceTokenAmount||"",swapToAmount:this.state.toTokenAmount||"",isSmartAccount:a.N.state.preferredAccountType===g.y_.ACCOUNT_TYPES.SMART_ACCOUNT}}),y.resetState(),s||u.RouterController.replace("Account"),y.getMyTokensWithBalance(o),n}catch(e){const t=e;return f.transactionError=t?.shortMessage,f.loadingTransaction=!1,d.K.showError(t?.shortMessage||"Transaction error"),void m.X.sendEvent({type:"track",event:"SWAP_ERROR",properties:{message:t?.shortMessage||t?.message||"Unknown",network:w.R.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:this.state.sourceToken?.symbol||"",swapToToken:this.state.toToken?.symbol||"",swapFromAmount:this.state.sourceTokenAmount||"",swapToAmount:this.state.toTokenAmount||"",isSmartAccount:a.N.state.preferredAccountType===g.y_.ACCOUNT_TYPES.SMART_ACCOUNT}})}},hasInsufficientToken(e,t){const o=h.l.isInsufficientSourceTokenForSwap(e,t,f.myTokensWithBalance);let s=!0;return s=a.N.state.preferredAccountType!==g.y_.ACCOUNT_TYPES.SMART_ACCOUNT&&h.l.isInsufficientNetworkTokenForGas(f.networkBalanceInUSD,f.gasPriceInUSD),s||o},setTransactionDetails(){const{toTokenAddress:e,toTokenDecimals:t}=this.getParams();e&&t&&(f.gasPriceInUSD=h.l.getGasPriceInUSD(f.networkPrice,BigInt(f.gasFee),BigInt(v)),f.priceImpact=h.l.getPriceImpact({sourceTokenAmount:f.sourceTokenAmount,sourceTokenPriceInUSD:f.sourceTokenPriceInUSD,toTokenPriceInUSD:f.toTokenPriceInUSD,toTokenAmount:f.toTokenAmount}),f.maxSlippage=h.l.getMaxSlippage(f.slippage,f.toTokenAmount),f.providerFee=h.l.getProviderFee(f.sourceTokenAmount))}}},995559:function(e,t,o){o.d(t,{u:function(){return i}});var s=o(777154),n=o(887738),a=o(340081);const r=(0,s.sj)({themeMode:"dark",themeVariables:{},w3mThemeVariables:void 0}),i={state:r,subscribe(e){return(0,s.Ld)(r,(()=>e(r)))},setThemeMode(e){r.themeMode=e;try{const t=n.ConnectorController.getAuthConnector();if(t){const o=i.getSnapshot().themeVariables;t.provider.syncTheme({themeMode:e,themeVariables:o,w3mThemeVariables:(0,a.tU)(o,e)})}}catch{console.info("Unable to sync theme to auth connector")}},setThemeVariables(e){r.themeVariables={...r.themeVariables,...e};try{const e=n.ConnectorController.getAuthConnector();if(e){const t=i.getSnapshot().themeVariables;e.provider.syncTheme({themeVariables:t,w3mThemeVariables:(0,a.tU)(r.themeVariables,r.themeMode)})}}catch{console.info("Unable to sync theme to auth connector")}},getSnapshot(){return(0,s.CO)(r)}}},490728:function(e,t,o){o.d(t,{f:function(){return r}});var s=o(496146),n=o(777154);const a=(0,n.sj)({message:"",open:!1,triggerRect:{width:0,height:0,top:0,left:0},variant:"shade"}),r={state:a,subscribe(e){return(0,n.Ld)(a,(()=>e(a)))},subscribeKey(e,t){return(0,s.VW)(a,e,t)},showTooltip({message:e,triggerRect:t,variant:o}){a.open=!0,a.message=e,a.triggerRect=t,a.variant=o},hide(){a.open=!1,a.message="",a.triggerRect={width:0,height:0,top:0,left:0}}}},962765:function(e,t,o){o.d(t,{s:function(){return T}});var s=o(777154),n=o(342215),a=o(425398),r=o(91609),i=o(331906),c=o(477221),d=o(669270),u=o(35013);const l=(0,s.sj)({transactions:[],coinbaseTransactions:{},transactionsByYear:{},lastNetworkInView:void 0,loading:!1,empty:!1,next:void 0}),T={state:l,subscribe(e){return(0,s.Ld)(l,(()=>e(l)))},setLastNetworkInView(e){l.lastNetworkInView=e},async fetchTransactions(e,t){const{projectId:o}=n.OptionsController.state;if(!o||!e)throw new Error("Transactions can't be fetched without a projectId and an accountAddress");l.loading=!0;try{const s=await i.L.fetchTransactions({account:e,projectId:o,cursor:l.next,onramp:t,cache:"coinbase"===t?"no-cache":void 0,chainId:u.R.state.activeCaipNetwork?.caipNetworkId}),n=this.filterSpamTransactions(s.data),a=this.filterByConnectedChain(n),r=[...l.transactions,...a];l.loading=!1,"coinbase"===t?l.coinbaseTransactions=this.groupTransactionsByYearAndMonth(l.coinbaseTransactions,s.data):(l.transactions=r,l.transactionsByYear=this.groupTransactionsByYearAndMonth(l.transactionsByYear,a)),l.empty=0===r.length,l.next=s.next?s.next:void 0}catch(t){a.X.sendEvent({type:"track",event:"ERROR_FETCH_TRANSACTIONS",properties:{address:e,projectId:o,cursor:l.next,isSmartAccount:c.N.state.preferredAccountType===d.y_.ACCOUNT_TYPES.SMART_ACCOUNT}}),r.K.showError("Failed to fetch transactions"),l.loading=!1,l.empty=!0,l.next=void 0}},groupTransactionsByYearAndMonth(e={},t=[]){const o=e;return t.forEach((e=>{const t=new Date(e.metadata.minedAt).getFullYear(),s=new Date(e.metadata.minedAt).getMonth(),n=o[t]??{},a=(n[s]??[]).filter((t=>t.id!==e.id));o[t]={...n,[s]:[...a,e].sort(((e,t)=>new Date(t.metadata.minedAt).getTime()-new Date(e.metadata.minedAt).getTime()))}})),o},filterSpamTransactions(e){return e.filter((e=>!e.transfers.every((e=>!0===e.nft_info?.flags.is_spam))))},filterByConnectedChain(e){const t=u.R.state.activeCaipNetwork?.caipNetworkId;return e.filter((e=>e.metadata.chain===t))},clearCursor(){l.next=void 0},resetTransactions(){l.transactions=[],l.transactionsByYear={},l.lastNetworkInView=void 0,l.loading=!1,l.empty=!1,l.next=void 0}}}}]);
//# sourceMappingURL=70649-b3c2fb991aa7df0c.js.map